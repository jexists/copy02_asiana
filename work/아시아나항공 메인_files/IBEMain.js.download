	var bookConditionJSON	= "",
		userAcno			= $('#loginUserAcno').val(),
		adultDesc			= $('#pax_nums').children().eq(0).attr('adultdesc'),
		childDesc			= $('#pax_nums').children().eq(1).attr('childdesc'),
		infantDesc			= $('#pax_nums').children().eq(2).attr('infantdesc'),
		currentDate 		= $('#currentDate').val(),
		adultCount			= '1',
		childCount			= '0',
		infantCount			= '0',
		switching			= false,
		familyMemberCount	= $('#familyMemberCount').val(),
		$cabinClass			= $('.cabinClass'),
		directNLength		= 0,
		areaLength			= 0,
		areas				= [],
		uniqueAreas			= [],
		firstChange			= true,
		rebook				= false,
		isChildOnly			= false,
		childParentPnrAlpha	= "",
		beforeSwitchingObject,
		userKoreanName,
		userTotalRestMileage,
		domIntType,
		targetCouponBtn,
		serviceType,
		couponCode,
		callBackFunction;
	var RequestUrl      = $(location).attr('pathname');
	var RequestUrlArr   = RequestUrl.split('/');
	var countryCode		= RequestUrlArr[2].toUpperCase();
	var languageCode    = RequestUrlArr[3].toUpperCase();
	var existPNRList 	= false;
	var existCheckinList= false;

	$(document).ready(function() {

		$('.layer_wrap').insertAfter($('#container').children().last());
		
		tableCaption(".tb_left");

		for (var i = 0; i < localStorage.length; i++) {
			var localKey = localStorage.key(i);
			if(localKey.indexOf('_bookcondition_')>-1){
				localStorage.removeItem(localKey);
			}
		}

		$(window).on("pageshow",function(event){
			loadingClose('entire');
		});

		/*
		첫번째 여정 출발지 load & autocomplete set
		; 왕복 / 편도 / 다구간 구분 없이 첫번째 여정의 출발지는 모든 대노선 + 모든 공항정보를 불러온다.
		*/

		new Calendar('#sCalendar');
		var depAirportACDataR = {
				txtAirportId	: 'txtDepartureAirportR',
				divAirportACId	: 'divDepAirportACR',
				hidAirportId	: 'departureAirportR',
				hidAreaId		: 'departureAreaR',
				hidCityId		: 'departureCityR',
				hidCityNameId	: 'departureCityNameR',
				hidDirectId		: 'departureDirectR',
				targetLabel		: 'labelDepartureAirportR',
				targetInput		: 'txtArrivalAirportR'
		};
		loadAirportInfo(depAirportACDataR, 'R', 'dep1', 'REV', 'DEP', '', '', 'RT');

		bookConditionJSON = JSON.parse($("#emptyBookConditionData").val());
		bookConditionJSON.bizType = "REV";
		bookConditionJSON.tripType = "RT";

		/* section 2~4는 single 달력 */
		var depAirportACDataS = {
				txtAirportId	: 'txtDepartureAirportS',
				divAirportACId	: 'divDepAirportACS',
				hidAirportId	: 'departureAirportS',
				hidAreaId		: 'departureAreaS',
				hidCityId		: 'departureCityS',
				hidCityNameId	: 'departureCityNameS',
				hidDirectId		: 'departureDirectS',
				targetLabel		: 'labelDepartureAirportS',
				targetInput		: 'txtArrivalAirportS'
		};
		loadAirportInfo(depAirportACDataS, 'S', 'dep1', 'REV', 'DEP', '', '', 'ETC');

		generateUUID('checkIn');
		
		var depAirportACDataF = {
				txtAirportId	: 'txtDepartureAirportF',
				divAirportACId	: 'divDepAirportACF',
				hidAirportId	: 'departureAirportF',
				hidAreaId		: 'departureAreaF',
				hidCityId		: 'departureCityF',
				hidCityNameId	: 'departureCityNameF',
				hidDirectId		: 'departureDirectF',
				targetLabel		: 'labelDepartureAirportF',
				targetInput		: 'txtArrivalAirportF'
		};
		loadFlightArrivalDepartureInfo(depAirportACDataF, 'F', 'dep1', 'DEP', '');

		/* step4.탑승인원 선택 */
		$('.layer_passenger').each(function(){
			var _target = $('.btn_number_box');
			var _thisBtn = _target.find('.btn_number');
			var _displayPsg = $(this).parents('.input_wrap').find('.psg_nums > span');
			var _nextBtn = $(this).find('.btn_M');

			_nextBtn.on('click', function(){
				if($(this).hasClass('red')){
					if (setAgeCalculateDomIntType() == "D") {
						if(!segInputValidation()) {
							return;
						}
						if(!paxValidation('final')) {
							return;
						}
						$('#registTravel').removeClass('gray').addClass('red');

						if ($('#seat').attr('disabled') == 'disabled') {
							$('#registTravel').focus();
						} else {
							$('#seat').focus();
						}
						layerAllClose();
					} else {
						$('#seat').focus();
					}
				}
			});

			_thisBtn.on('click', function(){
				$('.psg_nums').show();
				$('#psng').attr('placeholder','');
				var _this = $(this);
				var _targetVal = _this.parent().find('input');
				var _targetNum = Number(_targetVal.val().replace(/[^0-9]/g, ''));

				/* summary 탑승인원 출력 */
				var _btnIdx = _this.closest('.area').index();
				function psgNums(){
					_displayPsg.eq(_btnIdx).find('.num').text(_plusVal);

					/* 성인 (_btnIdx값이 0) */
					if(_btnIdx == 0){
						/* 성인 탑승객 0명시 레이어 팝업 */
						if(_plusVal == 0){
							/* openLayerPopup('noAdult'); */
							/* 소아 앞, 삭제 */
							_displayPsg.eq(1).addClass('noAdult');
						} else {
							_displayPsg.eq(1).removeClass('noAdult');
						}
					} else if (_btnIdx == 1) {
						if (adultCount == 0) {
							_displayPsg.eq(1).addClass('noAdult');
						} else {
							_displayPsg.eq(1).removeClass('noAdult');
						}
					}
					/* 다음 활성화 */
					if(Number(_displayPsg.eq(0).find('.num').text()) > 0 || Number(_displayPsg.eq(1).find('.num').text()) > 0 ){
						_nextBtn.removeClass('gray').addClass('red');
					}else{
						_nextBtn.removeClass('red').addClass('gray');
					}
				}
				var _plusVal = 0;
				if( _this.hasClass('plus') ){
					_plusVal = _targetNum+1;
					_displayPsg.eq(_btnIdx).show();
				}else{
					if( _targetNum > 0){
						_plusVal = _targetNum-1;
						/* 0명시 텍스트 제거 */
						if(_plusVal == 0){
							_displayPsg.eq(_btnIdx).hide();
						}
					} else {
						return;
					}
				}
				_targetVal.val(_plusVal);

				if(!paxValidation()){
					if(_this.hasClass('plus')) {
						_plusVal = _plusVal-1;
						if(_plusVal == 0){
							_displayPsg.eq(_btnIdx).hide();
						}
					}else{
						_plusVal = _plusVal+1;
					}
					_targetVal.val(_plusVal);
				}
				if(_targetVal.attr('id') == 'adultCount') {
					adultCount = _plusVal;
				}else if(_targetVal.attr('id') == 'childCount'){
					childCount = _plusVal;
				}else{
					infantCount = _plusVal;
				}
				psgNums();
				if(_targetVal.val() == '0') {
					_this.prop('disabled', true);
				}else {
					_this.prev().prop('disabled', false);
				}
			});
		});

		$('.quick_reservation_wrap').each(function(){
			var selectInput = $(this).find('.ipt_elt').find('input:text');
			var layers = $('.shadow_layer');
			$('.psng').on('click', function(){
				$(this).siblings('input').focus();
			});
			selectInput.on('focus', function(){
				layers.hide();
				layerAllClose();
				$(this).parent('.ipt_elt').next(layers).show();
				quickAreaOpen(); //퀵예매 영역 open

				/* 열려있는 레이어의 인풋에 on클래스 추가 */
				var vDiv = $('.shadow_layer:visible');
				selectInput.parent('div').removeClass('on');
				vDiv.prev('.ipt_elt').addClass('on');

				$(this).next('.shadow_layer').show();
				$(this).parent('.ipt_elt').addClass('on');
				if ($(this).parent('.ipt_elt').hasClass('psng') && $('#psng').attr('placeholder') != '' && $('#adultCount').val() != '0') {
					$('.psg_nums').show();
					$('#psng').attr('placeholder','');
				}
			});

			//퀵예매 영역 Open & Fold
			$('.airport_open').each(function(){
				$(this).on('click', function(){
					if ($('.select_airport').css("display") !== "none"){
						quickAreaOpen();
						$(this).parent('.ipt_elt').siblings('.select_airport').find('a').first().focus();
						callTag = $(this);
					}
				});
			});
		});

		// 여정구분, 좌석등급 탭 이벤트
		$('div[name=tabs]').each(function() {
			var $tabs = $(this).find('ul > li > a');
			var $tabsParent = $tabs.parent().parent();

			$tabs.click(function() {
				$("#seatNext").removeClass('gray').addClass('red');
				if($tabsParent.attr('name') == 'selectSeg1CabinClass') {
					if(bookConditionJSON.bizType == "REV"){
						$tabs.parent('li').removeClass('on');
						$tabs.attr('title', '');
						$(this).parent('li').addClass('on');
						$(this).attr('title', jsJSON.J0022); //선택됨
						$("#seat").val($(this).text());

						if($('#check1').is(":checked") ){
							var placeText = '';
							var selectedClass = '';
							$('.revCabinClass').find('li').each(function(){
								if ($(this).hasClass('on')) {
									if (placeText != '') {
										placeText += ', '+ $(this).find('span').text();
										selectedClass += $(this).find('a').attr('cabinClass');
									} else {
										placeText = $(this).find('span').text();
										selectedClass = $(this).find('a').attr('cabinClass');
									}
								}
							});

							if (selectedClass == 'RE') {
								placeText = jsJSON.J0605;//'이코노미 특가, 일반';
							} else if (selectedClass == 'RB') {
								placeText = jsJSON.J0606;//'이코노미 특가, 비즈니스';
							} else if (selectedClass == 'RF') {
								placeText = jsJSON.J0607;//'이코노미 특가, 퍼스트';
							} else if (selectedClass == 'ER') {
								placeText = jsJSON.J0608;//'이코노미 일반, 특가';
							} else if (selectedClass == 'EB') {
								placeText = jsJSON.J0609;//'이코노미 일반, 비즈니스';
							} else if (selectedClass == 'EF') {
								placeText = jsJSON.J0610;//'이코노미 일반, 퍼스트';
							} else if (selectedClass == 'BR') {
								placeText = jsJSON.J0611;//'비즈니스, 이코노미 특가';
							} else if (selectedClass == 'BE') {
								placeText = jsJSON.J0612;//'비즈니스, 이코노미 일반';
							} else if (selectedClass == 'BF') {
								placeText = jsJSON.J0613;//'비즈니스, 퍼스트';
							} else if (selectedClass == 'FR') {
								placeText = jsJSON.J0614;//'퍼스트, 이코노미 특가';
							} else if (selectedClass == 'FE') {
								placeText = jsJSON.J0615;//'퍼스트, 이코노미 일반';
							} else if (selectedClass == 'FB') {
								placeText = jsJSON.J0616;//'퍼스트, 비즈니스';
							}

							$("#seat").val(placeText);
							placeText = '';
						}
					}else{
						if($(this).attr('name') == "cabinClassAll"){
							if($(this).parent('li').hasClass('on')){
								$tabs.parent('li').removeClass('on');
								$tabs.attr('title', '');
								$("#seat").val('');
								$("#seatNext").removeClass('red').addClass('gray');
							}else{
								$tabs.parent('li').addClass('on');
								$tabs.attr('title', jsJSON.J0022); //선택됨
								$("#seat").val($(this).text());
							}
						}else{
							var allCabinClassCheck = true;
							if($(this).parent('li').hasClass('on')){
								$(this).parent('li').removeClass('on');
								$(this).attr('title', '');
							}else{
								$(this).parent('li').addClass('on');
								$(this).attr('title', jsJSON.J0022); //선택됨
							}
							$tabsParent.eq(0).find('li').each(function() {
								if($(this).children('a').attr('name') != "cabinClassAll" && !$(this).hasClass('on')){
									allCabinClassCheck = false;
									return;
								}
							});
							if(allCabinClassCheck){
								$tabs.parent('li').addClass('on');
								$tabs.attr('title', '');
								$("#seat").val($("[name=cabinClassAll]").text());
							}else{
								var placeText = '';
								var selectedClass = '';
								$("#seat").val($(this).text());
								$tabsParent.eq(0).find('li').each(function(idx){
									if ($(this).hasClass('on') && idx != 0) {
										if (placeText != '') {
											placeText += ', '+ $(this).text();
											selectedClass += $(this).find('a').attr('cabinClass');
										} else {
											selectedClass = $(this).find('a').attr('cabinClass');
											placeText = $(this).text();
										}
									}
								});
								if (placeText != '') {
									if (selectedClass == 'FB') {
										placeText = jsJSON.J0616; //"퍼스트, 비즈니스";
									} else if (selectedClass == 'BF') {
										placeText = jsJSON.J0613; //"비즈니스, 퍼스트";
									}
									$("#seat").val(placeText);
								} else {
									$("#seat").val('');
									$("#seatNext").removeClass('red').addClass('gray');
								}
								placeText = '';
								$("[name=cabinClassAll]").parent('li').removeClass('on');
								$("[name=cabinClassAll]").attr('title', '');
							}
						}
					}
				}else{
					$tabs.parent('li').removeClass('on');
					$(this).parent('li').addClass('on');

					$tabs.attr('title', '');
					$(this).attr('title', jsJSON.J0022); //선택됨
					
					var placeText = '';
					var selectedClass = '';
					$('.revCabinClass').find('li').each(function(){
						if ($(this).hasClass('on')) {
							if (placeText != '') {
								placeText += ', '+ $(this).find('span').text();
								selectedClass += $(this).find('a').attr('cabinClass');
							} else {
								placeText = $(this).find('span').text();
								selectedClass = $(this).find('a').attr('cabinClass');
							}
						}
					});
					if (selectedClass == 'RE') {
						placeText = jsJSON.J0605;//'이코노미 특가, 일반';
					} else if (selectedClass == 'RB') {
						placeText = jsJSON.J0606;//'이코노미 특가, 비즈니스';
					} else if (selectedClass == 'RF') {
						placeText = jsJSON.J0607;//'이코노미 특가, 퍼스트';
					} else if (selectedClass == 'ER') {
						placeText = jsJSON.J0608;//'이코노미 일반, 특가';
					} else if (selectedClass == 'EB') {
						placeText = jsJSON.J0609;//'이코노미 일반, 비즈니스';
					} else if (selectedClass == 'EF') {
						placeText = jsJSON.J0610;//'이코노미 일반, 퍼스트';
					} else if (selectedClass == 'BR') {
						placeText = jsJSON.J0611;//'비즈니스, 이코노미 특가';
					} else if (selectedClass == 'BE') {
						placeText = jsJSON.J0612;//'비즈니스, 이코노미 일반';
					} else if (selectedClass == 'BF') {
						placeText = jsJSON.J0613;//'비즈니스, 퍼스트';
					} else if (selectedClass == 'FR') {
						placeText = jsJSON.J0614;//'퍼스트, 이코노미 특가';
					} else if (selectedClass == 'FE') {
						placeText = jsJSON.J0615;//'퍼스트, 이코노미 일반';
					} else if (selectedClass == 'FB') {
						placeText = jsJSON.J0616;//'퍼스트, 비즈니스';
					}
					$("#seat").val(placeText);
					placeText = '';
				}
				
				/* joyj #33281 출도착지 노선 US/EU 인 경우에만 퍼스트 클래스 활성화 -> 전 노선 퍼스트 클래스 비활성화 by 정재윤*/
				if($(".redCabinClass > li").is(".fst_cls, on")){
					$(".redCabinClass > li.fst_cls").removeClass("on");
				}
			});
		});

		/* 좌석등급 다음 버튼 클릭시 조회 버튼 focus */
		$(document).on('click', '#seatNext', function() {
			layerAllClose();
			if(!segInputValidation()) {
				return;
			}
			if(!paxValidation('final')) {
				return;
			}
			if(!cabinClassValidation()) {
				if (bookConditionJSON.bizType == 'REV') {
					$('#seat').val($(".revCabinClass").eq(0).find('.on a').text());
				} else {
					$('#seat').focus();
					alert(jsJSON.J0408); //좌석등급을 선택해주세요.
					return;
				}
			}
			$('#registTravel').removeClass('gray').addClass('red');
			$(this).parents('div.layer_seat').prev('.ipt_elt').removeClass('on');
			$('#registTravel').focus();
			registTravelV();
		});

		/* 여정선택페이지 쿠폰선택 토글 */
		$(document).on('click', '.coupon_down > button', function() {
			targetCouponBtn = $(this);

			var	_thisName	= targetCouponBtn.attr('name'),
				_all		= targetCouponBtn.parents().find('.coupon_down .btn_check');

		    if( _thisName != 'download' &&  _thisName != 'changeCoupon'){
		        if ( !targetCouponBtn.hasClass('check') ){
		            _btnReset();
		            targetCouponBtn.text(jsJSON.J0401).removeClass('white').addClass('check'); // 선택됨
		            $('#btnCouponApply').prop('disabled', false);

		            /* 쿠폰 hidden data set */
		            $('#serviceType').val(targetCouponBtn.attr('serviceType'));
		            $('#couponCode').val(targetCouponBtn.attr('couponCode'));
		            $('#eventName').val(targetCouponBtn.attr('eventName'));
		            $('#corporateCode').val(targetCouponBtn.attr('corporateCode'));
		            $('#discount').val(targetCouponBtn.attr('discount'));
		        }else{
		            _btnReset();
		            $('#btnCouponApply').prop('disabled', true);

		            $('#serviceType').val('');
		            $('#couponCode').val('');
		            $('#eventName').val('');
		            $('#corporateCode').val('');
		            $('#discount').val('');
		        }
		    }else if( _thisName != 'changeCoupon'){
		    	serviceType = targetCouponBtn.attr('serviceType');
				couponCode 	= targetCouponBtn.attr('couponCode');
		    	if(userAcno != '') {
					couponDownload(targetCouponBtn, serviceType, couponCode);
		    	}else{
		    		openLayerPopup('couponLogOff');
		    	}
		    }else {
		    	openLayerPopup('changeCoupon');
		    }
		});

		/* 쿠폰 적용안함 클릭 시 쿠폰 적용 없이 upsell page 로 submit */
		$('#btnCouponNotApply').click(function() {

			$('#coupon_layer').hide();

			$('#serviceType').val('');
	        $('#couponCode').val('');
	        $('#eventName').val('');
	        $('#corporateCode').val('');
	        $('#discount').val('');

	        var thisLayerPop = $(this).closest('.layer_wrap'),
				_thisTargetBtnId = thisLayerPop.attr('id');

			if(thisLayerPop.find('input[name=noToday]').is(':checked')) {
				setLsAt00(_thisTargetBtnId, 1);
			}

			if(bookConditionJSON.bizType == "REV"){
				/* 특정노선 Check */
				if(noticeOpenLayer()){
					toFlightsSelect();
				}
			}else{
				/* 특정노선 Check */
				if(noticeOpenLayer()){
					openLayerPopup('mileageInfo', 'btnCouponNotApply');
				}
			}
		});

		/* 쿠폰 적용하기 클릭 시 */
		$('#btnCouponApply').click(function() {
			if($('#couponCode').val() == '') {
				alert(jsJSON.J0402); //쿠폰을 선택해 주십시오.
				return false;
			}else{

				$('#coupon_layer').hide();

				var thisLayerPop = $(this).closest('.layer_wrap'),
					_thisTargetBtnId = thisLayerPop.attr('id');

				if(thisLayerPop.find('input[name=noToday]').is(':checked')) {
					setLsAt00(_thisTargetBtnId, 1);
				}

				if(bookConditionJSON.bizType == "REV"){
					/* 특정노선 Check */
					if(noticeOpenLayer()){
						toFlightsSelect();
					}
				}else{
					/* 특정노선 Check */
					if(noticeOpenLayer()){
						openLayerPopup('mileageInfo', 'btnCouponApply');
					}
				}
			}
		});

		$(document).on('change', '.mile_use input:checkbox', function() {
			var $sectionBt = $('.tab_triptype li:eq(2) > a');
			var thisBtn = $(this);
			if(thisBtn.is(':checked')){ /* 마일리지 On */
				$sectionBt.attr('goUrl','/I/'+countryCode+'/'+languageCode+'/RedemptionRegistTravel.do');
				$sectionBt.find('span').text(jsJSON.J0026); //이원구간
				thisBtn.prev('.hidden').text('ON');
				$("#seatNext").removeClass('red').addClass('gray');
				$('.btn_mile_wrap').show();
				bookConditionJSON.bizType = "RED";
				/* 입력내용 초기화 */
				layerAllClose();
				$('#adultCount, #childCount, #infantCount').val('0').trigger('keyup');
				$('#adultCount').val('1').trigger('keyup');
				
				initItinerary('R');

				var depAirportACDataR = {
						txtAirportId	: 'txtDepartureAirportR',
						divAirportACId	: 'divDepAirportACR',
						hidAirportId	: 'departureAirportR',
						hidAreaId		: 'departureAreaR',
						hidCityId		: 'departureCityR',
						hidCityNameId	: 'departureCityNameR',
						hidDirectId		: 'departureDirectR',
						targetLabel		: 'labelDepartureAirportR',
						targetInput		: 'txtArrivalAirportR'
				};

				loadAirportInfo(depAirportACDataR, 'R', 'dep1', 'RED', 'DEP', '', '', bookConditionJSON.tripType);

				$('ul[name="selectSeg1CabinClass"]').eq(0).show();
				$('ul[name="selectSeg1CabinClass"]').eq(1).hide();
				$('.seat_check_area').hide();

				action_logging({pagecode:'01_Book_01'});
				
				$('#passengerInfo').text(jsJSON.J0486); // J0486 예약인원은 성인, 소아를 포함하여 총 5명까지 선택 가능합니다.
				$('.REVCoupon').hide();
				$('.REDCoupon').show();

			}else{ /* 마일리지 off */
				$sectionBt.attr('goUrl','/I/'+countryCode+'/'+languageCode+'/RevenueRegistTravel.do');
				$sectionBt.find('span').text(jsJSON.J0027); //다구간
				thisBtn.prev('.hidden').text('OFF');
				$("#seatNext").removeClass('gray').addClass('red');
				$('.btn_mile_wrap').hide();
				bookConditionJSON.bizType = "REV";
				$('#adultCount, #childCount, #infantCount').val('0').trigger('keyup');
				$('#adultCount').val('1').trigger('keyup');
				
				layerAllClose();
				initItinerary('R');

				var depAirportACDataR = {
						txtAirportId	: 'txtDepartureAirportR',
						divAirportACId	: 'divDepAirportACR',
						hidAirportId	: 'departureAirportR',
						hidAreaId		: 'departureAreaR',
						hidCityId		: 'departureCityR',
						hidCityNameId	: 'departureCityNameR',
						hidDirectId		: 'departureDirectR',
						targetLabel		: 'labelDepartureAirportR',
						targetInput		: 'txtArrivalAirportR'
				};
				loadAirportInfo(depAirportACDataR, 'R', 'dep1', 'REV', 'DEP', '', '', bookConditionJSON.tripType);

				$('ul[name="selectSeg1CabinClass"]').eq(1).show();
				$('ul[name="selectSeg1CabinClass"]').eq(0).hide();
				$('.seat_check_area').show();

				action_logging({pagecode:'01_Book_01'});
				
				$('#passengerInfo').text(jsJSON.J0487); // J0487 예약인원은 성인, 소아, 유아를 포함하여 총 9명까지 선택 가능합니다.
				$('.REDCoupon').hide();
				$('.REVCoupon').show();
			}
			initDate();
			$("#seat").val('');
		});

		$('.tab_triptype').each(function(){
			var tabs = $(this).find('ul > li > a');
			tabs.click(function(){
				tabs.parent('li').removeClass('on');
				tabs.attr('title', '');
				$(this).parent('li').addClass('on');
				$(this).attr('title', jsJSON.J0022); //선택됨
				calc1.createdCal[0].eventDestroy()  /* 달력변경 */
				if($(this).parent('li').index()==0){ /* 0:왕복, 1:편도 */
					$('#sCalendarR').attr('data-type','multi_step');
					bookConditionJSON.tripType = "RT";
					initDate();
					layerAllClose();
					action_logging({pagecode:'01_Book_02'});
				}else if ($(this).parent('li').index()==1) {
					$('#sCalendarR').attr('data-type','single_step');
					bookConditionJSON.tripType = "OW";
					var _departureDate	= $("[name=departureDateR]").val();
					initDate();
					layerAllClose();
					if(_departureDate != '') {
						setDatepickerDate($('#sCalendarR'), _departureDate);
					}
					action_logging({pagecode:'01_Book_02'});
				}else{
					var bookConditionData = new bookConditionDataObject();
					bookConditionData.tripType = 'MT';
					bookConditionData.domIntType = 'I';
					$('#bookConditionData').val(JSON.stringify(bookConditionData));
					$('#registTravelForm').attr({'onsubmit' : 'return true','action' : $(this).attr("goUrl")}).submit();
					loadingOpen('entire');
					extivateAfterSubmit();
					action_logging({pagecode:'01_Book_02'});
				}
			});
		});

		/* 스타얼라이언스 */
		$(document).on('click', '#starAlliance', function() {
			var bookConditionData = new bookConditionDataObject();
			bookConditionData.starAlliance = true;
			$('#bookConditionData').val(JSON.stringify(bookConditionData));
			$('#registTravelForm').attr({'onsubmit' : 'return true','action' : '/I/'+countryCode+'/'+languageCode+'/RedemptionRegistTravel.do'}).submit();
			loadingOpen('entire');
			extivateAfterSubmit();
		});

		/* 출국/귀국편 출발 지역이 다른 여정 */
		$(document).on('click', '#openJawRED', function() {
			var bookConditionData = new bookConditionDataObject();
			bookConditionData.tripType = 'OJ';
			$('#bookConditionData').val(JSON.stringify(bookConditionData));
			$('#registTravelForm').attr({'onsubmit' : 'return true','action' : '/I/'+countryCode+'/'+languageCode+'/RedemptionRegistTravel.do'}).submit();
			loadingOpen('entire');
			extivateAfterSubmit();
		});

		/* 관심노선 레이어팝업 */
		$(document).on('click', '.fav_star', function(){

			layerAllClose();

			var html = [];

			$.ajax( {
				async: true,
				url: '/I/'+countryCode+'/'+languageCode+'/FavoriteRoutes.do',
				type: 'post',
				dataType: 'json',
				data: {
					bizType		: bookConditionJSON.bizType,
					acno		: userAcno
				},
				success : function(data) {
					var idx = 0,
						i = 0,
						fLength = data.favoriteRoutes.length;

					while(i<fLength) {
						var favoriteRouteData = data.favoriteRoutes[i],
							departureDateTime,
							arrivalDateTime,
							date = "",
							tripType,
							arrowCls;

						if(favoriteRouteData.tripType == 'RT') {
							departureDateTime	= favoriteRouteData.departureDateTime;
							arrivalDateTime		= favoriteRouteData.arrivalDateTime;
							if(typeof departureDateTime != "undefined" && currentDate.replace(/[^0-9]/g,"") <= departureDateTime
									&& typeof arrivalDateTime != "undefined"){
								departureDateTime	= departureDateTime.substring(0, 4) + '.' + departureDateTime.substring(4, 6) + '.' + departureDateTime.substring(6, 8);
								
								arrivalDateTime		= arrivalDateTime.substring(0, 4) + '.' + arrivalDateTime.substring(4, 6) + '.' + arrivalDateTime.substring(6, 8);
								date				= departureDateTime + ' ~ ' + arrivalDateTime;
							}else {
								favoriteRouteData.departureDateTime = '';
								favoriteRouteData.arrivalDateTime = '';
							}
							tripType 			= jsJSON.J0017; // 왕복
							arrowCls			= 'round'
						}else{
							departureDateTime	= favoriteRouteData.departureDateTime;
							if(typeof departureDateTime != "undefined" && currentDate.replace(/[^0-9]/g,"") <= departureDateTime){
								departureDateTime	= departureDateTime.substring(0, 4) + '.' + departureDateTime.substring(4, 6) + '.' + departureDateTime.substring(6, 8);
								date				= departureDateTime;
							}else {
								favoriteRouteData.departureDateTime = '';
								favoriteRouteData.arrivalDateTime = '';
							}
							tripType			= jsJSON.J0018; // 편도
							arrowCls			= '';
						}
						
						html[idx] =	'<li>' +
										'<a href="#none">' +
											'<span info="'+favoriteRouteData.departureArea+','+favoriteRouteData.departureAirport+','+favoriteRouteData.departureAirportName+','+favoriteRouteData.departureCity+','+favoriteRouteData.departureCityName+'">' +
												favoriteRouteData.departureAirportName + '<var>' + favoriteRouteData.departureAirport + '</var></span>' +
											'<span class="'+arrowCls+'" info="'+favoriteRouteData.arrivalArea+','+favoriteRouteData.arrivalAirport+','+favoriteRouteData.arrivalAirportName+','+favoriteRouteData.arrivalCity+','+favoriteRouteData.arrivalCityName+'">' +
												favoriteRouteData.arrivalAirportName + '<var>' + favoriteRouteData.arrivalAirport + '</var></span>' +
											'<div class="info">' +
												'<span class="date" date="'+favoriteRouteData.departureDateTime+','+favoriteRouteData.arrivalDateTime+'">' + date + '</span>' +
												'<span class="type" tripType="'+favoriteRouteData.tripType+'">' + tripType + '</span>' +
											'</div>' +
										'</a>' +
									'</li>';

						i++;
						idx++;
					};

					if(fLength == 0) {
						html[0] = jsJSON.J0019; //설정한 관심노선이 없습니다. 마이아시아나에서 관심노선을 설정하실 수 있습니다.
					}

					$('#favoriteRouteList').html(html.join(''));
				},
				error: function(data) {
					alert(JSON.parse(data.responseText).exceptionInfo.message);
				}
			});

			if($(this).hasClass('on')){
				$('.intRoute').hide();
				$(this).removeClass('on');
				$(this).attr('title', '');
			} else {
				$('.intRoute').show();
				$(this).addClass('on');
				$(this).attr('title', jsJSON.J0022); //선택됨
				$('.layer_close').on('click', function(){
					$(this).parent('div').hide();
					$('.fav_star').removeClass('on');
					$('.fav_star').attr('title', '');
				});
			}

		});

		/* 관심노선 선택 */
		$(document).on('click', 'ul[id="favoriteRouteList"] > li > a', function() {

			var $this = $(this),
				$thisChild = $this.children(),
				tripType = $thisChild.eq(2).children().eq(1).attr('tripType'),
				depInfo	= $thisChild.eq(0).attr('info').split(','),
				depArea = depInfo[0],
				depAirport = depInfo[1],
				depAirportName = depInfo[2],
				depCity = depInfo[3],
				depCityName = depInfo[4],
				dateInfo = $thisChild.eq(2).children().eq(0).attr('date').split(','),
				dateView = $thisChild.eq(2).children().eq(0).html().split(' ~ '),
				depDateVal = dateInfo[0].substring(0, 8),
				arrInfo = $thisChild.eq(1).attr('info').split(','),
				arrArea = arrInfo[0],
				arrAirport = arrInfo[1],
				arrAirportName = arrInfo[2],
				arrCity = arrInfo[3],
				arrCityName = arrInfo[4],
				arrDateVal;

			if(tripType == 'RT') {
				$('.tab_triptype').find('ul > li > a').eq(0).click();
			}else {
				$('.tab_triptype').find('ul > li > a').eq(1).click();
			}

			$('#departureAreaR').val(depArea);
			$('#departureAirportR').val(depAirport);
			$('#departureAirportR').trigger('textchange');
			$('#departureCityR').val(depCity);
			$('#departureCityNameR').val(depCityName);
			$('#labelDepartureAirportR').html('<span class=\'hidden\'>'+jsJSON.J0005+'</span><span class="abbr">'+depAirport+'</span><span>'+depAirportName+'</span>');
			$('#arrivalAreaR').val(arrArea);
			$('#arrivalAirportR').val(arrAirport);
			$('#arrivalCityR').val(arrCity);
			$('#arrivalCityNameR').val(arrCityName);
			$('#labelArrivalAirportR').html('<span class=\'hidden\'”>'+jsJSON.J0006+'</span><span class="abbr">'+arrAirport+'</span><span>'+arrAirportName+'</span>');
			$('#arrivalAirportR').trigger('textchange');

			if('OW' == tripType) {
				if(depDateVal != '') {
					setDatepickerDate($('#sCalendarR'), depDateVal);
				}
			}else {
				if(dateInfo[1] != '') {
					arrDateVal = dateInfo[1].substring(0, 4) + dateInfo[1].substring(4, 6) + dateInfo[1].substring(6, 8);
					setDatepickerDate($('#sCalendarR'), depDateVal, arrDateVal);
				}
			}

			$('#closeFavoriteRoute').trigger('click');
			$('#after_select').removeClass('hidebg');
		});

		/* 관심노선 설정하기 */
		$(document).on('click', '#setFavoriteRoute', function() {
			// 관심노선을 설정하려면 마이아시아나로 이동하셔야 합니다. 관심노선을 설정하시겠습니까?
			if(confirm(jsJSON.J0020)){
				$('#registTravelForm').attr({'onsubmit' : 'return true','action' : '/I/'+countryCode+'/'+languageCode+'/FavoriteRouteForm.do'}).submit();
				loadingOpen('entire');
				extivateAfterSubmit();
			}
		});
		
		/*joyj 관심노선 아이콘 상시 노출로 변경 및 비로그인 시 관심노선 안내 페이지로 랜딩 요청 by 배병준*/
		$(document).on('click', '#setFavoriteInform', function() {
			var openNewWindow = window.open("about:blank");
			openNewWindow.location.href = 'https://flyasiana.com/C/'+countryCode+'/'+languageCode+'/contents/favorite-route-notice';
		});
		
		/*joyj 관심노선 아이콘 상시 노출로 변경 및 비로그인 시 관심노선 안내 페이지로 랜딩 요청 by 배병준*/
		$(document).on('click', '#goLogin', function() {
			var openNewWindow = window.open("about:blank");
			openNewWindow.location.href = '/I/'+countryCode+'/'+languageCode+'/viewLogin.do?callType=IBE';
		});

		/*전체 쿠폰보기*/
		$(document).on('click', '#btnShowCouponList', function() {
			var url = '/I/'+countryCode+'/'+languageCode+'/ShowCouponList.do',
				name = "CouponList";
			window.open(url, name);
		});

		/* 레이어팝업(딤) 닫기 / 닫은 후 스크롤 생성 */
		$(document).on('click', '.dim_close , .layer_close, button[name=cancel], a[name=noTodayClose]', function() {
			var thisLayerPop = $(this).closest('.layer_wrap'),
				_thisTargetBtnId = thisLayerPop.attr('id');
			if (typeof _thisTargetBtnId == 'undefined') {
				thisLayerPop = $(this).closest('.shadow_layer'),
				_thisTargetBtnId = thisLayerPop.attr('id');
			}
			if(thisLayerPop.find('input[name=noToday]').is(':checked')) {
				setLsAt00(_thisTargetBtnId, 1);
			}
			
			if (!$(this).hasClass('layer_close') && $(this).attr("name") != "noTodayClose"){
				thisLayerPop.hide();
				//P:ksh 수정
				//$('body').css('overflow-y','auto');
				$.fn.fullpage.setMouseWheelScrolling(true);
			}
		});

		$(document).on('focus','.spotentry',function(){
			var $this = $(this);

			/*if(!prevAirportValidation($this.attr('id'), $this.attr('id').substring($this.attr('id').length-1, $this.attr('id').length))) {
				return false;
			}*/

			var $searchLayer = $this.parent('.ipt_elt').next('.shadow_layer');
			var $shadowLayer = $this.next().next().next('div[name=shadow_layer]');


			$this.parent().find('label').css('opacity','0');	// 활성화시 label 가리기
			serLayer();											// 레이어팝업 미노출
			$searchLayer.css('display','block');				// 레이어팝업 노출
			layerVar($this, $searchLayer);

			if($(this).attr("data-option") != 'auto'){
				$searchLayer.show();
			}

			if($(this).val().length > 0){
				$searchLayer.show();
				layerVar($this, $searchLayer);
			}

			$this.off('keyup').on('keyup',function(){
				$searchLayer.show();
				layerVar($this, $searchLayer);
			});

			drawSearchLately($this);

		}).on('focusout','.spotentry',function(){
			var $this = $(this);
			
			if( $this.val() === "" ){
				$this.parent().find('label').css('opacity','1');
			}else{
				$this.parent().find('label').css('opacity','0');
			};
		});
		
		$(document).on('focusout', '[name^=txtDeparture], [name^=txtArrival]', function() {
			var $this = $(this);
			$this.parent().find('label').css('opacity','1');
			
			$this.val('');
		});

		$(document).on('textchange', 'input[id^=departureAirport]', function() {

			var $this = $(this),
				$thisId = $this.attr('id'),
				type	= $thisId.substring(16, 17);

			var tripTypeOfSection = "";
			var bizTypeOfSection = "";
			if (type == 'R') {
				tripTypeOfSection = bookConditionJSON.tripType;
				bizTypeOfSection = bookConditionJSON.bizType;
			} else {
				tripTypeOfSection = 'OW';
				if (type == 'F') {
					bizTypeOfSection = 'RED';
				} else {
					bizTypeOfSection = 'REV';
				}
				
			}

			$('#arrivalAirport'+type).val('');
			$('#arrivalArea'+type).val('');
			$('#arrivalCity'+type).val('');
			$('#arrivalCityName'+type).val('');
			$('#arrivalDirect'+type).val('');
			$('#labelArrivalAirport'+type).html(jsJSON.J0006); //도착지
			$('#labelArrivalAirport'+type).css('opacity', '1');

			var arrAirportACData = {
					txtAirportId	: 'txtArrivalAirport'+type,
					divAirportACId	: 'divArrAirportAC'+type,
					hidAirportId	: 'arrivalAirport'+type,
					hidAreaId		: 'arrivalArea'+type,
					hidCityId		: 'arrivalCity'+type,
					hidCityNameId	: 'arrivalCityName'+type,
					hidDirectId		: 'arrivalDirect'+type,
					targetLabel		: 'labelArrivalAirport'+type,
					targetInput		: undefined
			};
			if (type != 'F') {
				if(type == 'S') {
					loadAirportInfo(arrAirportACData, type, 'arr1', bizTypeOfSection, 'ARR', $('#departureAirport'+type).val(), '', 'ETC');
				}else {
					loadAirportInfo(arrAirportACData, type, 'arr1', bizTypeOfSection, 'ARR', $('#departureAirport'+type).val(), '', tripTypeOfSection);
				}
			} else {
				loadFlightArrivalDepartureInfo(arrAirportACData, type, 'arr1', 'ARR', $('#departureAirport'+type).val());
			}

		});

		$(document).on('textchange', 'input[id^=arrivalAirport]', function() {
			if ($(this).attr('id').indexOf('R') > -1) {
				setNoticeInfo();
			} else if ($(this).attr('id').indexOf('F') > -1) {
				$('#searchDepArr').focus();
				$('#searchDepArr').removeClass('gray').addClass('red');
			}
		});

		/* 다구간 예약진행 */
		$("#btnRevMTProcess").click(function(){
			// 다구간 여정 선택을 위하여 항공권 예약 화면으로 이동하시겠습니까?
			if(confirm(jsJSON.J0028)){
				$('#registTravelForm').attr({'onsubmit' : 'return true','action' : '/I/'+countryCode+'/'+languageCode+'/RevenueRegistTravel.do'}).submit();
				loadingOpen('entire');
				extivateAfterSubmit();
			}
		});

		/* // 예약 상세 버튼 클릭 이벤트 */
		$(document).on("click",  ".btnReservationDetail", function() {
			loadingOpen('entire');

			var $this = $(this);

			/* // Hidden 값 세팅 */
			var $frmReservationDetail_id = $("#frmReservationDetail");
			$frmReservationDetail_id.find("#pnrAlpha").val($this.attr("pnrAlpha"));
			$frmReservationDetail_id.find("#pnrNumeric").val($this.attr("pnrNumeric"));
			$frmReservationDetail_id.find("#officeId").val($this.attr("officeId"));
			$frmReservationDetail_id.find("#bizType").val($this.attr("bizType"));
			$frmReservationDetail_id.find("#lastName").val($this.attr("lastName"));
			$frmReservationDetail_id.find("#staralliance").val('false');
			$frmReservationDetail_id.find("#depAirport").val($this.attr("depAirport"));
			$frmReservationDetail_id.find("#uniqueNo").val($this.attr("uniqueNo"));
			$frmReservationDetail_id.find("#sessionUniqueKey").val($this.attr("sessionUniqueKey"));

			/* // 예약 상세 페이지로 Submit */
			$frmReservationDetail_id.attr({
				'onsubmit'	: 'return true',
				'action'	: '/I/'+countryCode+'/'+languageCode+'/ViewReservationDetail.do'
			}).submit();
			loadingOpen('entire');

		});

		/*조회타입 선택
			출토착조회 노선조회 편명조회 박스*/
		$(document).on('change', '#inqSelect', function(){
			var optIdx = $(this).find('option:selected').index();
			initItinerary('F');
			/* 노선조회 선택시 */
			if(optIdx == 0){
				$('.oznum').hide();
				$('#inquiryDeparture .ipt_elt.loct').show();
				$('#inquiryDeparture .exam_txt').show();
				$(this).parent('.ipt_elt').siblings('.flt_date').find('select').css('width','215px');
				$('.section04 .inquiry_wrapper .white_step_box').css('padding-bottom','25px');

			} else { /* 편명조회 선택시 */
				$('.oznum').show();
				$('#inquiryDeparture .exam_txt').hide();
				$('#inquiryDeparture .ipt_elt.loct').hide();
				$(this).parent('.ipt_elt').siblings('.flt_date').find('select').css('width','332px');
				$('.section04 .inquiry_wrapper .white_step_box').css('padding-bottom','40px');
			}
			$('#searchFMCType').val($(this).find('option:selected').val());
		});

		/* 출도착 조회하기 */
		$(document).on("click",  "#searchDepArr", function() {
			var type = $('#searchFMCType').val();
			if(!isValid(type)) {
				return false;
			}
			showSearchTab();
		});

		/* 출도착 상세보기 */
		$(document).on("click",  "[id^='goScheduleInfo_']", function() {
			var $frmFMCFlightDepArr_id = $("#frmFMCFlightDepArr");
			var idx = $(this).attr('id').split('_')[1];
			if ($('#searchFMCType').val() == 'line') {
				$frmFMCFlightDepArr_id.find('#idCount').val(idx);
			} else {
				$frmFMCFlightDepArr_id.find('#idCount').val(idx);
				$('#flights_inquire').val($('#ozNum').val());
			}
			$('#frmFMCFlightDepArr').attr({'onsubmit' : 'return true','action' : '/I/'+countryCode+'/'+languageCode+'/DefaultFlightDepartureSearch.do'}).submit();
			$('#inqSelect').find("option:eq(0)").prop("selected", true);
			loadingOpen('entire');
		});

		/* 예약조회 전체보기 */
		
		$(document).on("click",  "[name=goToReservation]", function() {
			$('#frmReservationDetail').attr('action','/I/'+countryCode+'/'+languageCode+'/RetrieveReservationList.do').submit();
			loadingOpen('entire');
		});

		/* 체크인 전체보기 */
		$(document).on("click",  "[name=goToCheckIn]", function() {
			$('#checkInFrm').attr('action','/I/'+countryCode+'/'+languageCode+'/CheckIn.do').submit();
			loadingOpen('entire');
		});

		// 비로그인 - 엔터키 이벤트
		$("#passengerName, #reservationId").keydown(function (event) {
			if ($("#reservationId").val() != '' && $("#passengerName").val() != '' && $("#departureAirportS").val() != '' && $("#arrivalAirportS").val() != '' && $('[name=departureDateS]').val() != '') {
				$('#goPNRList').removeClass('gray').addClass('red');
			} else {
				$('#goPNRList').removeClass('red').addClass('gray');
			}
			if (event.keyCode == 13) {
				$('#goPNRList').trigger('click');
	        }
		});
			
		/* // 탑승객수 text로 입력 */
		$('#adultCount, #childCount, #infantCount').keyup(function(e) {
			var $this = $(this);
			if(!paxValidation()) {
				if($this.attr('id') == 'adultCount') {
					$this.val(adultCount);
					$('[adultdesc]').find('.num').text(adultCount);
				}else if($this.attr('id') == 'childCount'){
					$this.val(childCount);
					$('[childdesc]').find('.num').text(childCount);
				}else{
					$this.val(infantCount);
					$('[infantdesc]').find('.num').text(infantCount);
				}
			}else{
				if($this.attr('id') == 'adultCount') {
					adultCount = $this.val();
					$('[adultdesc]').find('.num').text(adultCount);
					if (adultCount == '0' || adultCount == '') {
						$('[childdesc]').addClass('noAdult');
						$('[adultdesc]').hide();
					} else {
						$('[childdesc]').removeClass('noAdult');
						$('[adultdesc]').show();
					}
				}else if($this.attr('id') == 'childCount'){
					childCount = $this.val();
					$('[childdesc]').find('.num').text(childCount);
					if (adultCount == '0' || adultCount == '') {
						$('[childdesc]').addClass('noAdult');
						$('[adultdesc]').hide();
						if (childCount == '0') {
							$('[childdesc]').hide();
						} else {
							$('[childdesc]').show();
						}
					} else {
						if (childCount == '0' || childCount == '') {
							$('[childdesc]').hide();
						} else {
							$('[childdesc]').show();
						}
						$('[childdesc]').removeClass('noAdult');
					}
				}else{
					infantCount = $this.val();
					$('[infantdesc]').find('.num').text(infantCount);
					if (infantCount == '0' || infantCount == '') {
						$('[infantdesc]').hide();
					} else {
						$('[infantdesc]').show();
					}

				}
				if($this.val() == '0') {
					$this.next().prop('disabled', true);
				}else {
					if($this.val() != '9') {
						$this.next().prop('disabled', false);
						$('.plus').prop('disabled', false);
					}
				}
			}
			$('#psng').attr('placeholder','');
			$('#pax_nums').show();

			if (parseInt($('#adultCount').val()) > 0 || parseInt($('#childCount').val()) > 0 || parseInt($('#infantCount').val()) > 0) {
				$('.layer_passenger').find('.btn_M').removeClass('gray').addClass('red');
			} else {
				$('.layer_passenger').find('.btn_M').removeClass('red').addClass('gray');
			}
		});

		/* // 출도착 조회 편명 입력 */
		$("#ozNum").keydown(function (event) {
	        if (event.keyCode == 13) {
				$('#searchDepArr').trigger('click');
	        }
		}).focusout(function(event) {
			if($("#ozNum").val() != ''){
				$('#searchDepArr').removeClass('gray').addClass('red');
			} else {
				$('#searchDepArr').removeClass('red').addClass('gray');
			}
		});

		/* 상단 체크인 영역 체크인 버튼 클릭 */
		$(document).on("click","button[name=btn_checkIn]", function(){
			var thisId = $(this).attr('id');

			var departureDate        = $(this).attr('departureDate');
			var departureAirport     = $(this).attr('departureAirport');
			var codeShare            = $(this).attr('codeshare');
			var carriercode 		 = $(this).attr('carriercode');
			var departureCity        = $(this).attr('departureCity');
			var arrivalCity          = $(this).attr('arrivalCity');
			var pnrAlpha             = $(this).attr('pnrAlpha');

			setCheckIn(departureDate, pnrAlpha);
		});

		/* 체크인리스트 조회 버튼 클릭시 1. 아마데우스 체크인 진입 / 2. 사전좌석 */
		$(document).on("click",  "[name=checkInChargeableSeat]", function() {
			var _this = $(this);

			var depDate  = _this.attr('depDate').substring(0,8);
			var pnrNo    = _this.attr('pnrNo');
			var lastName = _this.attr('lastName');
			var itNo	 = _this.attr('itno');
			var departureAirport = _this.attr('departureAirport');
			var departureCity	 = _this.attr('departureCity');
			var arrivalCity	 = _this.attr('arrivalCity');
			var carriercode	 = _this.attr('carriercode');
			var codeshare	 = _this.attr('codeshare');
			var uniqueNo	 = _this.attr('uniqueNo');
			var sessionUniqueKey	 = _this.attr('sessionUniqueKey');
			var searchType = 'pnrNo';

			if (_this.attr('checkIn') == 'T') {
				setCheckIn(depDate, pnrNo, uniqueNo, sessionUniqueKey);
			} else {
				searchReservation(depDate, _this.attr('encryptPNR'), lastName, itNo, departureAirport, departureCity, arrivalCity, carriercode, codeshare, _this.attr('checkIn'), searchType, uniqueNo, sessionUniqueKey);
			}
		});
		
		$(document).on("click","#btn_autoCheckIn, #btn_preferredSeats, #btnGoSeatMap", function(){
			var bizType    = $(this).attr('bizType');
			var officeId   = $(this).attr('officeId');
			var pnrAlpha   = $(this).attr('pnrAlpha');
			var pnrNumeric = $(this).attr('pnrNumeric');
			var lastName   = $(this).attr('lastName');
			var nextPage   = $(this).attr('nextPage');
			setPreferredSeats(bizType, officeId, pnrAlpha, pnrNumeric, lastName, nextPage);
		});
		
		// 오토체크인 toggle
		$(document).on('click', '.btn_arrow_toggle', function(){
		    layerAllClose();
		    if($(this).hasClass('on')){
		        $(this).removeClass('on');
		        $(this).find('.hidden').text(jsJSON.J0491); //내용 펼치기
		        $(this).parents('dl').find('dd').removeClass('on');
		    } else {
		        $(this).addClass('on');
		        $(this).find('.hidden').text(jsJSON.J0492); //내용 접기
		        $(this).parents('dl').find('dd').addClass('on');
		    }
		});
		
		// 오토체크인 이력 레이어 툴팁
		$(document).on('click', '.a_existSeatOrACILayerTooltip', function(){
			$('.div_existSeatOrACILayerTooltip').each(function(){
				$(this).hide();
			})
			$(this).next('div').show();
		});
		$(document).on('click', '.tooltip_close', function(){
			$(this).parent('div').hide();
		});

		/* 최근 검색(공항선택 레이어) 클릭 */
		$(document).on('click', 'div[name=recent_srch_box] > ul > li > a', function() {
			var _this = $(this);
			$('div[name=recent_srch_box] > ul > li').removeClass('selected_Recent');
			$('div[name=recent_srch_box] > ul > li > a').attr('title', '');
			_this.parent('li').addClass('selected_Recent');
			_this.attr('title', jsJSON.J0022);
			$(this).closest('.shadow_layer').find('.btn_M').removeClass('gray').addClass('red');    
			$('.city_list > li').removeClass('on');
			$('.city_list > li > a').attr('title', '');
		});

		/* 최근 검색(자동완성 레이어) 클릭 */
		$(document).on('click', 'div[name=search_lately] > ul > li > a', function() {
			$("#seat").val('');

			var $this = $(this),
				$thisVal = $this.parents('li').attr('val');
			$thisVal = $thisVal.split('-');

			var $thisValDep = $thisVal[0].split(',');
			var $thisValArr	= $thisVal[1].split(',');
			if ($thisVal[2] != null) {
				var $thisValEtc	= $thisVal[2].split(',');
			}

			var $depHidden = $this.closest('.input_wrap').find('.spot_proven').children();
			var $arrHidden = $this.closest('.input_wrap').find('.spot_destin').children('input');

			$depHidden.eq(0).val($thisValDep[0]);
			$depHidden.eq(1).val($thisValDep[2]);
			$depHidden.eq(2).val($thisValDep[3]);
			$depHidden.eq(3).val($thisValDep[4]);
			$depHidden.eq(1).trigger('textchange');
			$arrHidden.eq(0).val($thisValArr[0]);
			$arrHidden.eq(1).val($thisValArr[2]);
			$arrHidden.eq(2).val($thisValArr[3]);
			$arrHidden.eq(3).val($thisValArr[4]);
			$arrHidden.eq(1).trigger('textchange');
			
			$this.closest('div[name^=itinerary]').find('.spot_proven > label[name=spot_place]').html('<span class=\'hidden\'>'+jsJSON.J0005+'</span><span class="abbr">'+$thisValDep[2]+'</span><span>'+$thisValDep[1]+'</span>');
			$this.closest('div[name^=itinerary]').find('.spot_destin > label[name=spot_place]').html('<span class=\'hidden\'>'+jsJSON.J0006+'</span><span class="abbr">'+$thisValArr[2]+'</span><span>'+$thisValArr[1]+'</span>');

			if ($thisVal[2] != null) {
				var depDateView = $thisValEtc[0];
				$this.parents('div.search_flight').prev('.ipt_elt').removeClass('on');

				var type = $depHidden.eq(0).attr('id').substring(13,14);

				if('OW' == bookConditionJSON.tripType || type == 'S' || type == 'F') {
					setDatepickerDate($('#sCalendar'+type), depDateView.substring(0, 8));
				}else {
				    var retDateView = $thisValEtc[1];
				    setDatepickerDate($('#sCalendar'+type), depDateView.substring(0, 8), retDateView.substring(0, 8));
				}
			}

			if (type == 'R') {
				$('#pax_nums').children().hide();
				$('#pax_nums').children().find('.num').html('');
				if(Number($thisValEtc[2]) > 0) {
					$('#pax_nums').children().eq(0).show();
					$('#pax_nums').children().eq(0).find('.num').html($thisValEtc[2]);
				}
				if(Number($thisValEtc[3]) > 0) {
					$('#pax_nums').children().eq(1).show();
					$('#pax_nums').children().eq(1).find('.num').html($thisValEtc[3]);
				}
				if(Number($thisValEtc[4]) > 0) {
					$('#pax_nums').children().eq(2).show();
					$('#pax_nums').children().eq(2).find('.num').html($thisValEtc[4]);
				}

				$('#adultCount').val('0');
				$('#childCount').val('0');
				$('#infantCount').val('0');
				$('#adultCount').val($thisValEtc[2]).trigger('keyup');
				$('#childCount').val($thisValEtc[3]).trigger('keyup');
				$('#infantCount').val($thisValEtc[4]).trigger('keyup');
				$('#psng').attr('placeholder','');
				$('#pax_nums').show();

				$('.layer_passenger').find('.btn_M').removeClass('gray').addClass('red');

				/* 좌석등급 validation */
				if(!cabinClassValidation()) {
					$('#seat').focus();
					return;
				} else {
					$('#registTravel').removeClass('gray').addClass('red');
				}
			} else if (type == 'F' || type == 'N') {
				$('.layer_close').trigger('click');
			}
		});

		// DatePicker Focus 이벤트
		$(document).off("click, focus", ".datepicker").on("click, focus", ".datepicker, .calendar_focus", function(event) {
			var $this				= $(this),
				$itinerary			= $this.parents('[name^=itinerary]'),
				$target_calendar	= $itinerary.find('.compareCalendar'),
				_type				= $itinerary.attr('name').replace(/itinerary/g, '');
			
			if(_type == 'C') {
				$target_calendar.datepicker("option", "minDate", -1);
			}else {
				if($('#departureArea'+_type).val() == 'US' || $('#departureArea'+_type).val() == 'MX') {
					$target_calendar.datepicker("option", "minDate", -1);
				}else {
					$target_calendar.datepicker("option", "minDate", 0);
				}
			}
			
		});
		
	});
	
	/* joyj #33281 출도착지 노선 US/EU 인 경우에만 퍼스트 클래스 활성화 -> 전 노선 퍼스트 클래스 비활성화 by 정재윤*/
	$(function() {
	
		$(".revCabinClass > li:eq(3)").addClass("fst_cls");
		$(".revCabinClass > li:eq(3)").css({"pointer-events" : "none", "opacity" : 0.4});
		$(".redCabinClass > li:eq(3)").addClass("fst_cls");
		$(".redCabinClass > li:eq(3)").css({"pointer-events" : "none", "opacity" : 0.4});
		$(".revCabinClass > li:eq(7)").addClass("fst_cls");
		$(".revCabinClass > li:eq(7)").css({"pointer-events" : "none", "opacity" : 0.4});
		$(".redCabinClass > li:eq(7)").addClass("fst_cls");
		$(".redCabinClass > li:eq(7)").css({"pointer-events" : "none", "opacity" : 0.4});
		
		$(document).on('textchange', 'div[name=itineraryR] input',function(e) {	
			var revTabLength = $(".revCabinClass > li").length;
			var redTabLength = $(".redCabinClass > li").length;
			for(var i=0; i<revTabLength; i++) {
				if($(".revCabinClass > li:eq("+i+") > a").attr("cabinclass") == "F") {
					$(".revCabinClass > li" +
							":eq("+i+")").addClass("fst_cls");
				}
			}
			if($(".redCabinClass").css("display") == "block"){
				for(var i=0; i<redTabLength; i++) {
					if($(".redCabinClass > li:eq("+i+") > a").attr("cabinclass") == "F") {
						$(".redCabinClass > li:eq("+i+")").addClass("fst_cls");
					}
				}
			}
			
			$(".revCabinClass > li").each(function() {
				if($(this).hasClass("fst_cls")){
					$(this).css({"pointer-events" : "none", "opacity" : 0.4});
				}else{
					$(this).css({"pointer-events" : "auto", "opacity" : 1});
				}
			});
			
			$(".redCabinClass > li").each(function() {
				if($(this).hasClass("fst_cls")){
					$(this).css({"pointer-events" : "none", "opacity" : 0.4});
				}else{
					$(this).css({"pointer-events" : "auto", "opacity" : 1});
				}
			});
		});
	
	});

	/* 체크인 조회 버튼 클릭시 1. 아마데우스 체크인 진입 */
	var _wl_hostname = window.location.hostname;		// kr.flyasiana.com
	var _wl_pathname = window.location.pathname;		// /I/KO/main.do

	var _wl_languageCode = (_wl_pathname.split("/"))[2].toUpperCase();

	function wiselogClickLogging(urlText) {
		n_click_logging("https://" + _wl_hostname + urlText + "&_n_p1=" + _wl_hostname + "&_n_p2=" + _wl_languageCode);
	}

	/* // Check Validation */
	var checkNoLoginValidation = function checkNoLoginValidation(type) {
		if (type == 'reservation') {
			if($("#reservationId").val() == "") {
				alert(jsJSON.J0409); //예약번호를 입력해주세요.
				$("#reservationId").focus();
				return false;
			}
			if($("#departureAirportS").val() == "") {
				alert(jsJSON.J0410); //출발지를 입력해주세요.
				$("#departureAirportS").focus();
				return false;
			}
			if($("#arrivalAirportS").val() == "") {
				alert(jsJSON.J0411); //도착지를 입력해주세요.
				$("#arrivalAirportS").focus();
				return false;
			}
			if($("#passengerName").val() == "") {
				alert(jsJSON.J0412); //탑승객 이름을 입력해주세요.
				$("#passengerName").focus();
				return false;
			}
			if($('[name=departureDateS]').val() == "") {
				alert(jsJSON.J0413); //탑승일자를 입력해주세요.
				$("#sCalendarS").focus();
				return false;
			}
		} else {
			if ($('#checkInType option:selected').val() === 'resNo') {
				if ($('#checkinNum').val() == "") {
					alert(jsJSON.J0409); //예약번호를 입력해주세요.
					$("#checkinNum").focus();
					return false;
				}
				var regexp = /^[a-zA-Z0-9]+$/; //영문, 숫자
				if (!regexp.test($('#checkinNum').val())) {
					if (languageCode == 'KO') {
						alert("예약번호 자릿수를 확인해주세요"); //예약번호 자릿수를 확인해주세요
					} else {
						alert(jsJSON.J0414); //자릿수를 확인하여 주십시오.
					}
					$("#checkinNum").focus();
					return false;
				}
				
				// AS-IS
				if ($('#checkinNum').val().length != 8 && $('#checkinNum').val().length != 6) {
					alert(jsJSON.J0414); //자릿수를 확인하여 주십시오.
					$("#checkinNum").focus();
					return false;
				}
			} else {
				if ($('#checkinNum').val() == "") {
					alert(jsJSON.J0415); //항공권번호를 입력해주세요.
					$("#checkinNum").focus();
					return false;
				}
				var regexp = /^[0-9]+$/; //숫자만
				if (!regexp.test($('#checkinNum').val())) {
					if(languageCode == 'KO') {
						alert("항공권번호 자릿수를 확인해주세요"); //항공권번호 자릿수를 확인해주세요
					} else {
						alert(jsJSON.J0414); //자릿수를 확인하여 주십시오.
					}
					$("#checkinNum").focus();
					return false;
				}
				// AS-IS
				if ($('#checkinNum').val().length != 13) {
					alert(jsJSON.J0414); //자릿수를 확인하여 주십시오.
					$("#checkinNum").focus();
					return false;
				}
			}
			if($('[name=departureDateC]').val() == "") {
				alert(jsJSON.J0413); //탑승일자를 입력해주세요.
				$("#sCalendarC").focus();

				return false;
			}
		}

		return true;
	};


	/*
	 * 원하는 날짜로 캘린더 세팅
	 *
	 * 00. $target		: 대상 Date Picker의 Input Text
	 * 01. depDateValue	: 오는 날			ex) 20180101
	 * 02. arrDateValue	: 가는 날			ex) 20180101
	 *
	 * */
	var setDatepickerDate = function setDatepickerDate($target, depDateValue, arrDateValue, minDate, maxDate) {
		var $target_itinerary_class	= $target.parents(".itinerary");
		var $target_itinerary_name	= $target.parents("[name^=itinerary]");
		var $target_calendar		= null;
		if($target_itinerary_class.length > 0) {
			$target_calendar		= $target_itinerary_class.find(".compareCalendar");							// 세팅할 캘린더
		} else {
			$target_calendar		= $target_itinerary_name.find(".compareCalendar");
		}
		
		// 캘린더 오픈
		$target.focus().focus();
		
		// 가는날 세팅
		var depYear		= Number(depDateValue.substr(0, 4));
		var depMonth	= Number(depDateValue.substr(4, 2));
		var depDay		= Number(depDateValue.substr(6, 2));
		
		if($target_calendar.closest('[id^=multi_calendar]').length < 1) {
			$target_calendar.datepicker("setDate", new Date(depYear + "/" + depMonth + "/" + depDay));				// 지정한 달로 달력 이동
		}
		
		$target_calendar.find('[data-year="' + depYear + '"][data-month="' + (depMonth - 1) + '"]').each(function() {
			var $this = $(this);
			if($this.children().html() == String(depDay)) {
				$this.click(); // 지정한 날 클릭
			}
		});
		
		if(typeof arrDateValue != 'undefined'){
			// 오는날 세팅
			var arrYear		= Number(arrDateValue.substr(0, 4));
			var arrMonth	= Number(arrDateValue.substr(4, 2));
			var arrDay		= Number(arrDateValue.substr(6, 2));
			
			if($target_calendar.closest('[id^=multi_calendar]').length < 1) {
				$target_calendar.datepicker("setDate", new Date(arrYear + "/" + arrMonth + "/" + arrDay));				// 지정한 달로 달력 이동
			}
			
			$target_calendar.find('[data-year="' + arrYear + '"][data-month="' + (arrMonth - 1) + '"]').each(function() {
				var $this = $(this);
				if($this.children().html() == String(arrDay)) {
					$this.click(); // 지정한 날 클릭
				}
			});
			
		}
		
		if(typeof minDate != 'undefined') {
			// Min / Max Date 세팅
			var minDate_Year	= Number(minDate.substr(0, 4)),
				minDate_Month	= Number(minDate.substr(4, 2)),
				minDate_Day		= Number(minDate.substr(6, 2)),
				dateMinDate		= new Date(minDate_Year + "/" + minDate_Month + "/" + minDate_Day);

			var maxDate_Year	= Number(maxDate.substr(0, 4)),
				maxDate_Month	= Number(maxDate.substr(4, 2)),
				maxDate_Day		= Number(maxDate.substr(6, 2)),
				dateMaxDate		= new Date(maxDate_Year + "/" + maxDate_Month + "/" + maxDate_Day);
			
			
			$target_calendar.datepicker("option", {
				"minDate"	: dateMinDate,
				"maxDate"	: dateMaxDate
			});
		}
		
		if($target_calendar.find(".calendar_layer").css("display") != "none") {
			$target_calendar.find(".btn_cal_close").click();
		}
		
		if($('.multi_calendar').length > 0) { // mobile
			$target.parents('.multi_calendar').find('button').click();
		}else {
			$target.blur();
		}
	};

	var getNullToDefault = function getNullToDefault(val, defaultVal) {
		if (typeof val == 'undefined') {
			val = defaultVal;
		} else {
			if (val == null || val == "NaN" || val == "") {
				val = defaultVal;
			}
		}

		return val;
	};

	var reseravtionDetail = function reseravtionDetail() {
		$.ajax({
			url			: '/I/'+countryCode+'/'+languageCode+'/ReservationSearchNoLogin.do',
			type		: 'POST',
			dataType	: 'json',
			data		: {
				depAirport					: $("#departureAirportS").val(),
				arrAirport  				: $("#arrivalAirportS").val(),
				passengerName				: $("#passengerName").val(),
				departureDate				: $('#defaultPNRSearch').find('#departureDate1').val(),
				pnrNo						: $("#reservationId").val(),
				bizType						: $("#bizType").val(),
				area						: $("#departureAreaS").val()
			},
			beforeSend	: function() {
				loadingOpen('entire');
			},
			success		: function(data) {
				loadingClose('entire');
				if(data.groupPnr) {
					alert(jsJSON.J0416); //단체 예약입니다.\n단체 예약은 예약처를 통해 일정을 확인하여 주시기 바랍니다.\n
					return;
				}
				if(data.verification) {
					var inputTag = "";
					inputTag += '<input type="hidden" name="sessionUniqueKey" value="">';
					var noLoginUrl = '/I/'+countryCode+'/'+languageCode+'/ReservationDetailbyNoLogin.do';
					jQuery('<form action="'+noLoginUrl+'" method="post" target="_self">'+inputTag+'</form>').appendTo('body').submit().remove();
				} else {
					if(!data.isHuman) {
						alert(jsJSON.J0036_1); // 보안을 위해 아래 캡차 인증을 진행 해 주시기 바랍니다.
					} else {
						alert(jsJSON.J0036); //예약 정보가 올바르지 않습니다.\n* 마일리지 예약은 로그인 후 조회 가능
					}

					localStorage.setItem("searchReservationCaptchaCnt", data.searchReservationCaptchaCnt);

					viewReservationListLogin("MAIN");
					return;
				}
			},
			error		: function(data) {
				loadingClose('entire');
				var responseText = data.responseText;
				if(responseText){
					alert(JSON.parse(data.responseText).exceptionInfo.message);
				}else{
					alert(jsJSON.J0036); //예약 정보가 올바르지 않습니다.\n* 마일리지 예약은 로그인 후 조회 가능
					viewReservationListLogin("MAIN");
				}
				return;
			}
		});
		action_logging({pagecode:'01_RSV_04'});
	}

	/* 예약조회 버튼 */
	var PNRListV = function PNRListV() {
		if(checkNoLoginValidation('reservation')) {
			//reseravtionDetail();
			openLayerPopup('divLayerPassengetWarn', 'goPNRList');
		}
	};

	/* 사생팬 방지를 위한 경고 문구 추가 http://10.33.113.20/redmine/issues/33626 */
	$("#btnAgreePassengetWarn").off("click").on("click", function(event) {
		$("#divLayerPassengetWarn").hide();
		//스크롤 락 해제
		if( $('.layer_wrap:visible').length == 0 ){
			$('body').css('overflow-y','auto');
		};
		reseravtionDetail();
	});

	/* 예약 정보 조회 */
	var searchReservation = function searchReservation(departureDate, pnrNo, lastName, itno, departureAirport, departureCity, arrivalCity, carriercode, codeshare, checkIn, searchType, uniqueNo, sessionUniqueKey){
		var ticketNum;
		if (checkIn == 'noLogin' && searchType == 'ticketNo') {
			ticketNum = $("#checkinNum").val();
		} else {
			ticketNum = '';
		}
		
		var isReservList;
		if (checkIn == 'noLogin') {
			isReservList = false;
		} else {
			isReservList = true;
		}

		$.ajax({
			url			: '/I/'+countryCode+'/'+languageCode+'/CheckInReservationDetailSearch.do',
			type		: 'POST',
			dataType	: 'json',
			data		: {
				departureDate	: departureDate,
				pnrNo			: pnrNo,
				lastName		: lastName,
				searchType		: searchType,
				ticketNo		: ticketNum,
				uniqueNo        : uniqueNo,
				sessionUniqueKey : sessionUniqueKey,
				callPage		: 'MAIN',
				isReservList	: isReservList
			},
			beforeSend  : function () {
				loadingOpen('entire');
			},
			success		: function(data) {
				loadingClose('entire');

				if(data.verification) {
					var pnrData = data.pnrData;
					var resultbizType = data.pnrData.bizType;
					var resultOfficeID = data.pnrData.officeId;
					var resultPnrNo = data.pnrData.pnrAlpha;
					var resultLastName = data.pnrData.reservationLastName;
					var pnrNo		= data.pnrData.pnrAlpha;
					var passengerDatas = data.pnrData.passengerDatas;
					var hasSeat = false;
					
					/* 체크인 가능 */
					if(checkIn == 'T'){
						/* retrieve후 체크인 할지 여부 확인 */
						// 아마데우스 체크인

						var segIdx = Number(itno);
						var segDatas = data.pnrData.segmentDatas;
						for(var i = 0 ; i < segDatas.length ; i++){
							for(var j = 0 ; j < segDatas[i].flightInfoDatas.length ; j++){
								if (segDatas[i].flightInfoDatas[j].segmentNo == segIdx) {
									var flightInfo = segDatas[i].flightInfoDatas[j];
									setCheckIn(flightInfo.departureDate, pnrNo);
									break;
								}
							}
						}

					} else if(checkIn == 'noLogin') {

						var segDatas = data.pnrData.segmentDatas;
						var domIntType = data.pnrData.domIntType;
						var checkInPossible = false;
						var preSeatPossible = false;
						var roofStop = false;
						for(var i = 0 ; i < segDatas.length ; i++){
							if(roofStop) break;
							for(var j = 0 ; j < segDatas[i].flightInfoDatas.length ; j++){
								var flightInfoDatas = segDatas[i].flightInfoDatas[j];

								if(flightInfoDatas.carrierCode === 'OZ' && (flightInfoDatas.operationCarrierCode === '' || flightInfoDatas.operationCarrierCode === 'OZ')) {
									if("C" === flightInfoDatas.checkInType) {	// 체크인이 가능한 경우
										checkInPossible = true;
										preSeatPossible = false;
									} else if("S" === flightInfoDatas.checkInType) {	// 좌석 배정이 가능한 경우
										checkInPossible = false;
										preSeatPossible = true;
									} else {
										checkInPossible = false;
										preSeatPossible = false;
									}
								}

								if(checkInPossible){
									roofStop = true;
									break;
								}
							}
						}
						/* 체크인 가능 확인 */
						if(checkInPossible){

							var segDatas = data.pnrData.segmentDatas;

							for(var i = 0 ; i < segDatas.length ; i++){
								for(var j = 0 ; j < segDatas[i].flightInfoDatas.length ; j++){
									var flightInfo = segDatas[i].flightInfoDatas[j];
									var compareDate = flightInfo.departureDate.substring(2,4)+'.'+flightInfo.departureDate.substring(4,6)+'.'+flightInfo.departureDate.substring(6,8);
									var calendarDate = $('#sCalendarC').val().substring(0,8);
									if (compareDate == calendarDate) {
										setCheckIn(flightInfo.departureDate, pnrNo);
										break;
									}
								}
							}

						} else {
							/* 좌석배정 가능 */
							/* 탑승객에 유아가 있거나 */
							if(data.infPassenger) {
								//alert(jsJSON.J0418); //탑승객에 유아가 있는 예약입니다. \n예약은 예약처를 통해 일정을 확인하여 주시기 바랍니다. \n
								openLayerPopup('div_checkInImpossible');
								$('#id_InfAndGroupCase').show();
								$('#btnGoSeatMap, #idOnlySeatMapCase').hide();
								return;
							}
							/* 단체에약이면 체크인 불가 */
							if(data.groupPnr) {
								//alert(jsJSON.J0416); //단체 예약입니다.\n단체 예약은 예약처를 통해 일정을 확인하여 주시기 바랍니다.\n
								openLayerPopup('div_checkInImpossible');
								$('#id_InfAndGroupCase').show();
								$('#btnGoSeatMap, #idOnlySeatMapCase').hide();
								return;
							}

							for(var k = 0 ; k < passengerDatas.length ; k++){
								var passengerData = passengerDatas[k] ;
								if(passengerData.seatData !== null){
									hasSeat = true;
									break;
								}
							}
							
							if(preSeatPossible && hasSeat) {
								// 오토 체크인, 좌석배정
								showSelectLayer(pnrData);
								//setPreferredSeats(resultbizType, resultOfficeID, resultPnrNo, resultLastName, 'AutoCheckIn');
							} else {
								// 좌석배정
								showOnlySeatLayer(pnrData);
								//setPreferredSeats(resultbizType, resultOfficeID, resultPnrNo, resultLastName, 'PreferredSeats');
							}
						}

					} else {
						/* 좌석배정 가능 */
						/* 탑승객에 유아가 있거나 */
						if(data.infPassenger) {
							//alert(jsJSON.J0418); //탑승객에 유아가 있는 예약입니다. \n예약은 예약처를 통해 일정을 확인하여 주시기 바랍니다. \n
							openLayerPopup('div_checkInImpossible');
							$('#id_InfAndGroupCase').show();
							$('#btnGoSeatMap, #idOnlySeatMapCase').hide();
							return;
						}
						/* 단체에약이면 체크인 불가 */
						if(data.groupPnr) {
							//alert(jsJSON.J0416); //단체 예약입니다.\n단체 예약은 예약처를 통해 일정을 확인하여 주시기 바랍니다.\n
							openLayerPopup('div_checkInImpossible');
							$('#id_InfAndGroupCase').show();
							$('#btnGoSeatMap, #idOnlySeatMapCase').hide();
							return;
						}
						
						for(var k = 0 ; k < passengerDatas.length ; k++){
							var passengerData = passengerDatas[k] ;
							if(passengerData.seatData !== null){
								hasSeat = true;
								break;
							}
						}
						if(hasSeat) {
							// 오토 체크인, 좌석배정
							showSelectLayer(pnrData);
							//setPreferredSeats(resultbizType, resultOfficeID, resultPnrNo, resultLastName, 'AutoCheckIn');
						} else {
							// 좌석배정
							showOnlySeatLayer(pnrData);
							//setPreferredSeats(resultbizType, resultOfficeID, resultPnrNo, resultLastName, 'PreferredSeats');
						}
					}

				} else {
					if (data.verificationFailCnt >= 5) {
						// cnt 5회 이상 체크인 페이지 진입
						var inputTag = [];
						inputTag[inputTag.length] = '<input type="hidden" name="sessionUniqueKey" value="' + $('#checkInVerifiSession').val() + '">';
						inputTag[inputTag.length] = '<input type="hidden" name="callPage" value="MAIN">';
						$('<form action="/I/'+countryCode+'/'+languageCode+'/CheckIn.do" method="post" target="_self">'+inputTag.join("")+'</form>').appendTo('body').submit().remove();
						loadingOpen('entire');
					} else {
						alert(jsJSON.J0420); // 예약 정보가 올바르지 않습니다.
						return;
					}
				}
			},
			error		: function(data) {
				loadingClose('entire');
				var responseText = data.responseText;
				if(responseText){
					alert(JSON.parse(data.responseText).exceptionInfo.message);
				} else {
					alert(jsJSON.J0422); //체크인에 실패했습니다.
				}
				return;
			}
		});
	};

	//아마데우스 체크인 이동
	var setCheckIn = function setCheckIn(departureDate, pnrAlpha, uniqueNo, sessionUniqueKey) {

		if(typeof uniqueNo == "undefined") {
			uniqueNo = "";
		}
		if(typeof sessionUniqueKey == "undefind") {
			sessionUniqueKey = "";
		}

		$.ajax({
			url			: '/I/'+countryCode+'/'+languageCode+'/GetSSCIUrl.do',
			type		: 'POST',
			dataType	: 'json',
			beforeSend  : function () {
				loadingOpen('entire');
			},
			data		: {
				pnrNo			: pnrAlpha,
				uniqueNo        : uniqueNo,
				sessionUniqueKey : sessionUniqueKey
			},
			success		: function(data) {
				loadingClose('entire');
				var checkinDate	= moment(departureDate, "YYYYMMDDHHmmss").format("DD/MM/YYYY");
				$('#IDepartureDate').val(checkinDate);
				$('#IIdentification').val(pnrAlpha);
				$('#checkInFrm').attr({
					'target' : 'popup',
					'action' : data.CHECK_IN_URL
				}).submit();
			},
			error		: function(data) {
				loadingClose('entire');
				var responseText = data.responseText;
				if(responseText){
					alert(JSON.parse(data.responseText).exceptionInfo.message);
				}else{
					alert(jsJSON.J0422); //체크인에 실패했습니다.
				}
				return;
			}
		});
	};

	/* 체크인 비회원 예약조회 버튼 */
	var CheckInV = function CheckInV() {
		if(checkNoLoginValidation('checkIn')) {
			var searchType;
			var numberOfData;
			if ($('#checkInType option:selected').val() === 'resNo') {
				searchType = 'pnrNo';
				numberOfData = $('#checkinNum').val();
				if ($('[name=goToCheckIn]').length > 0) {
					action_logging({pagecode:'01_CHK_03_01'});
				} else {
					action_logging({pagecode:'01_CHK_04_01'});
				}
			} else {
				searchType = 'ticketNo';
				numberOfData = '';
				if ($('[name=goToCheckIn]').length > 0) {
					action_logging({pagecode:'01_CHK_03_02'});
				} else {
					action_logging({pagecode:'01_CHK_04_02'});
				}
			}
			searchReservation($('[name=departureDateC]').val(), numberOfData, '', '', '', '', '', '', '', 'noLogin', searchType, "" , $('#checkInVerifiSession').val());
		}
	};
	
	/* 좌석배정/오토체크인 레이어 */
	var showSelectLayer = function showSelectLayer(pnrData) {
		var segDatas = pnrData.segmentDatas;
		var pnrAlpha = pnrData.pnrAlpha;
		var bizType = pnrData.bizType;
		var officeId = pnrData.officeId;
		var pnrNumeric = pnrData.pnrNumeric;
		var passengerDatas = pnrData.passengerDatas;
		var lastName = pnrData.reservationLastName;
		
		$('#btn_autoCheckIn').attr('bizType' , bizType).attr('officeId' , officeId).attr('pnrAlpha' , pnrAlpha).attr('pnrNumeric' , pnrNumeric).attr('lastName' , lastName);
		$('#btn_preferredSeats').attr('bizType' , bizType).attr('officeId' , officeId).attr('pnrAlpha' , pnrAlpha).attr('pnrNumeric' , pnrNumeric).attr('lastName' , lastName);
		var segHtml = "";
		var index = 0;
		
		if ($('.resetCheckInSeat').length > 0) {
			$('.resetCheckInSeat').remove();
		}
		for(var i = 0 ; i < segDatas.length ; i++){
			for(var j = 0 ; j < segDatas[i].flightInfoDatas.length ; j++){
				var flightInfo = segDatas[i].flightInfoDatas[j];
				if(flightInfo.carrierCode === 'OZ' && (flightInfo.operationCarrierCode === '' || flightInfo.operationCarrierCode === 'OZ') && flightInfo.checkInType === 'S'){
					var depYear	 = flightInfo.departureDate.substring(0,4);
					var depMonth = flightInfo.departureDate.substring(4,6);
					var depDay   = flightInfo.departureDate.substring(6,8);
					var flightDate = depYear + '.' + depMonth + '.' + depDay + '(' + getDayByLang(flightInfo.departureDate.substring(0,8), languageCode) + ')';
					index++;
					
					segHtml +='<dl class="toggle_box resetCheckInSeat"><dt><div class="fl location"><input type="checkbox" id="check'+i+'_'+j+'"><label for="check'+i+'_'+j+'">'
							+'<span>'+flightInfo.departureAirportDesc+'</span>' + '<span>'+flightInfo.arrivalAirportDesc+'</span></label></div><div class="fr">'
							+'<span class="date">'+flightDate+'</span>'+'<span class="divsion_line type3"></span>'+'<span>'+flightInfo.carrierCode+flightInfo.flightNo+'</span>'
							+'<button type="button" class="btn_arrow_toggle on"><span class="hidden">'+jsJSON.J0492+'</span></button></div></dt>'
							+'<dd class="on"><table class="table_list tableCheckOrSeat" id="tableCheckOrSeat'+index+'"><caption><strong>'+jsJSON.J0498+'</strong></caption>'
							+'<colgroup><col style="width:auto"><col style="width:80px"><col style="width:130px"><col style="width:auto"></colgroup><tbody>';
					for(var k = 0 ; k < passengerDatas.length ; k++){
						var passengerData = passengerDatas[k] ;
						var seatDataTxt = '';
						if(passengerData.seatData !== null){
							for(var l = 0 ; l < passengerData.seatData.length ; l++){
								if(passengerData.seatData[l].segmentNo === flightInfo.segmentNo){
									seatDataTxt = passengerData.seatData[l].seatNumber;
								}
							}
						}
						//J0493 : 오토체크인 신청 완료, J0494 : 오토체크인 신청 가능, J0495 : 간단한 정보 입력 후 출발 24시간 전에 미리 탑승권을 받고 공항에서의 대기시간을 줄여보세요
						//J0496 : 도움말, J0497 : (단, 모바일 탑승권이 허용되지 않는 일부 해외공항에서는 탑승권 전송이 제한될 수 있습니다.), J0087 : 닫기
						var passengerName   = passengerData.koreanFirstName !== '' ? passengerData.koreanLastName + "/" + passengerData.koreanFirstName : passengerData.passengerName;
						var passengerACITxt = passengerData.existACI ? "<strong class='col_brown'>"+jsJSON.J0493+"</strong>" : "<span class='col_gray'>"+jsJSON.J0494+"</span>";
						var tooltipTxt      = passengerData.existACI ? jsJSON.J0493 : jsJSON.J0495;
						var htmlExistSeatOrACI = "<tr>"
							+ "    <th class='taL' scope='row'>" + passengerName + "</th>"
							+ "    <td class='lato'>" + seatDataTxt + "</td>"
							+ "    <td class='bg_gray'>"
							+          passengerACITxt
							+ "        <div class='tooltip_wrap'>"
							+ "            <a href='#none' class='btn_info a_existSeatOrACILayerTooltip'>"+jsJSON.J0496+"</a>"
							+ "            <div class='layer_tooltip type2 left div_existSeatOrACILayerTooltip' style='width:270px;'>"
							+ "                <div class='inner'>"
							+ "                    <p class='desc'>" + tooltipTxt + "</p>"
							+ "                    <p class='desc'>"+jsJSON.J0497+"</p>"
							+ "                </div>"
							+ "                <a href='#none' class='tooltip_close'><span class='hidden'>"+jsJSON.J0087+"</span></a>"
							+ "            </div>"
							+ "        </div>"
							+ "    </td>"
							+ "</tr>";
						segHtml += htmlExistSeatOrACI;
					}
					segHtml += '</tbody></table></dd></dl>';
				}
			}
		}
		$('#div_PNRArea').append(segHtml);
		// 웹 접근성을 위한 table Caption 및 strong 처리
		$('.tableCheckOrSeat').each(function(){
			var thisId   = $(this).attr('id');
			tableCaption('#'+thisId);
		});
		openLayerPopup('div_existSeatOrACI');
	};
	
	/* 좌석배정 레이어 */
	var showOnlySeatLayer = function showOnlySeatLayer(pnrData) {
		var resultPnrNo = pnrData.pnrAlpha;
		var resultbizType = pnrData.bizType;
		var resultOfficeID = pnrData.officeId;
		var resultLastName = pnrData.reservationLastName;
		var pnrAlpha = pnrData.pnrAlpha;
		var pnrNumeric = pnrData.pnrNumeric;
		var nextPage = "PreferredSeat";
		
		$('#btnGoSeatMap').attr('bizType' , resultbizType).attr('officeId' , resultOfficeID).attr('pnrAlpha' , pnrAlpha).attr('pnrNumeric' , pnrNumeric).attr('lastName' , resultLastName).attr('nextPage' , nextPage);
		openLayerPopup('div_checkInImpossible');
		$('#idOnlySeatMapCase, #btnGoSeatMap').show();
		$('#id_InfAndGroupCase').hide();
	};

	/* 좌석 선택 이동 */
	function setPreferredSeats(resultbizType, resultOfficeID, pnrAlpha, pnrNumeric, resultLastName, nextPage){
		generateUUID('seat');

		$.ajax({
			url: '/I/'+countryCode+'/'+languageCode+'/RetrievePNRForAddService.do',
			type : "post",
			data : {
				bizType 		: resultbizType,
				sessionUniqueKey: $('#preSeatFrm #sessionUniqueKeyC').val(),
				callPage 		: $('#preSeatFrm #callPage').val(),
				nextPage 		: nextPage,
				officeId 		: resultOfficeID,
				pnrAlpha 		: pnrAlpha,
				pnrNumeric		: pnrNumeric,
				lastName 		: resultLastName
			},
			dataType	: 'JSON',
			beforeSend	: function() {
				loadingOpen('entire');
 			},
			success: function(data) {
				if (data.errorCode == '') {
					$("#bizTypeC").val(resultbizType);
					/* Currency 가 존재하지 않거나 지원하지 않는 Currency 인 경우 */
					if (typeof data.isPnrDetailNoCurr != undefined && data.isPnrDetailNoCurr == "Y") {
						$("#isPnrDetailNoCurr").val("Y");
					}
					/* OAL Stock 이 하나 이상 존재하는 경우 */
					if (typeof data.isPnrDetailNotOZStock != undefined && data.isPnrDetailNotOZStock == "Y") {
						$("#isPnrDetailNotOZStock").val("Y");
					}
					
					$('#preSeatFrm').find('#bizTypeC').val(resultbizType);
					$('#preSeatFrm').attr('target','popup');
					var actionUrl = nextPage === 'AutoCheckIn' ? '/ReservationAutoCheckInView.do' : '/ViewPreferredSeats.do';
					$('#preSeatFrm').attr('action','/I/'+countryCode+'/'+languageCode+actionUrl).submit();
				} else {
					loadingClose('entire');
					if (typeof data.errorMessage != 'undefined' && data.errorMessage != '') {
						alert(data.errorMessage);
					}
				}
			},
			error: function(data) {
				loadingClose('entire');
				alert(JSON.parse(data.responseText).exceptionInfo.message);
			},
			complete : function() {
				loadingClose('entire');
			}
		});
	}

	/* 출도착노선 validation */
	var isValid = function(type){

		if(type == 'line'){
			if($('#departureAirportF').val() === ''){
				$('#txtDepartureAirportF').focus();
				alert(jsJSON.J0030); //출발지를 입력해주세요.
				return false;
			}
			if($('#arrivalAirportF').val() === ''){
				$('#txtArrivalAirportF').focus();
				alert(jsJSON.J0031); //도착지를 입력해주세요.
				return false;
			}

		}else if(type == 'num'){
			if($('#ozNum').val() === ''){
				$('#ozNum').focus();
				alert(jsJSON.J0042); //편명을 입력하세요.
				return false;
			}
			if (!$.isNumeric($('#ozNum').val())) {
				$('#ozNum').focus();
				alert(jsJSON.J0043); //숫자만 입력하세요.
				return false;
			}
		}
		if($('#searchDate option:selected').val() === ''){
			$('#searchDate').focus();
			alert(jsJSON.J0044); //날짜를 선택하세요.
			return false;
		}

		return true;
	};

	/* 출도착 조회 탭 */
	var showSearchTab = function(){
		var type = $('#searchFMCType').val();
		var num = '';

		num = $('#searchDate option:selected').val();

		if(type == 'line'){
			$.ajax({
				url : '/I/'+countryCode+'/'+languageCode+'/MainResultFmcDepArr.do',
				type : 'post',
				dataType: 'html',
				data : {
					searchType			: type,
					departureAirport	: $('#departureAirportF').val(),
					arrivalAirport		: $('#arrivalAirportF').val(),
					departureDate		: num
				},
				async	: true,
				beforeSend: function () {
					loadingOpen('entire');
				},
				success : function(data){
					loadingClose('entire');
					$('#searchDepArrResult').show();
					$('#searchDepArrResult').empty().html(data);
					setSearchLately();
				},
				error	: function(xhr){
					loadingClose('entire');
					alert('['+xhr.statusText+'] '+jsJSON.J0426); // 오류가 발생하였습니다.
				}
			});
			action_logging({pagecode:'01_FLT_01'});
		}else if(type == 'num'){
			$.ajax({
				url : '/I/'+countryCode+'/'+languageCode+'/MainResultFmcDepArr.do',
				type : 'post',
				dataType: 'html',
				data : {
					searchType			: type,
					flights_inquire		: $('#ozNum').val(),
					departureDate		: num
				},
				async	: true,
				beforeSend: function () {
					loadingOpen('entire');
				},
				success : function(data){
					loadingClose('entire');
					$('#searchDepArrResult').show();
					$('#searchDepArrResult').empty().html(data);
				},
				error	: function(xhr){
					loadingClose('entire');
					alert('['+xhr.statusText+'] '+jsJSON.J0426);
				}
			});
			action_logging({pagecode:'01_FLT_02'});
		}

	};

	/* 전체도시보기 클릭 */
	var showAirportLayer = function showAirportLayer(object, type) {
		layerAllClose();
		var $this			= $(object),
			seg				= $this.attr('seg'),
			_type			= type,
			$hidden			= $this.prev(),
			defaultArea		= $hidden.attr('area'),
			defaultAirport	= $hidden.attr('airport'),
			hidType,
			labelType,
			targetId,
			targetText,
			targetAirportName,
			targetInputId;

		if(!prevAirportValidation($this.attr('id'), type)) {
			return false;
		}

		if(seg.indexOf('dep') > -1) {
			hidType = 'departure';
			labelType = 'labelDepartureAirport';
			targetId = 'depAllAirport'+_type;
			targetText = 'txtDepartureAirport'+_type;
			targetAirportName = 'departureAirportName'+_type;
			targetInputId = 'txtArrivalAirport'+_type;
		}else{
			hidType = 'arrival';
			labelType = 'labelArrivalAirport';
			targetId = 'arrAllAirport'+_type;
			targetText = 'txtArrivalAirport'+_type;
			targetAirportName = 'arrivalAirportName'+_type;
			targetInputId = undefined;
		}

		var registObject = {
			seg					: seg,
			defaultArea			: defaultArea,
			defaultAirport		: defaultAirport,
			hidAreaId			: hidType + 'Area' + _type,
			hidAirportId		: hidType + 'Airport' + _type,
			hidAirportNameId	: hidType + 'AirportName' + _type,
			hidCityId			: hidType + 'City' + _type,
			hidCityNameId		: hidType + 'CityName' + _type,
			hidDirectId			: hidType + 'Direct' + _type,
			targetLabel			: labelType + _type,
			targetText			: targetText,
			targetAirportName	: targetAirportName,
			targetInput			: targetInputId
		};

		var targetLayer = "";
		if (_type == "R") {
			targetLayer =  $('div[name="allAirportR"]');
		} else if (_type == "S") {
			targetLayer =  $('div[name="allAirportS"]');
		} else if (_type == "N") {
			targetLayer =  $('div[name="allAirportN"]');
		} else {
			targetLayer =  $('div[name="allAirportF"]');
		}
		targetLayer.attr('id', targetId);
		targetLayer.attr('clickList', targetId);
		var areaAirportDatas;
		if(seg.indexOf('dep') > -1) {
			areaAirportDatas = $(document).data(registObject.seg+'AreaAirportData'+_type);
		} else {
			areaAirportDatas = $(document).data(registObject.seg+'AreaAirportData'+_type);
		}
		setAreaAirportLayer(JSON.parse(areaAirportDatas), registObject);

		if(_type == "N") {
			openLayerPopup(targetId, targetText, '-100');
		} else {
			$("#"+targetId).show();

			drawSearchLately($this);
			$("#"+targetId).find('.btn_M').removeClass('red').addClass('gray');
			$('div[name=national_listbox]').find('li > a').attr('title', '');
			$('.selected_Recent').find('a').attr('title', '');
		}
	};

	var setAreaAirportLayer = function setAreaAirportLayer(areaAirportDatas, registObject) {

		var $domDiv = $('.domestic'),
			$intDiv	= $('.national'),
			domHtml = [],
			intNationHtml = [],
			intAirportHtml = [],
			dIdx = 0,
			iIdx = 0,
			divCls = '',
			liCls = '',
			onCls = '';

		var i = 0,
			rLength = areaAirportDatas.length;
		while(i<rLength){
			var areaAirportData = areaAirportDatas[i],
				j = 0,
				cLength = areaAirportDatas[i].cityAirportDatas.length;

			if(areaAirportData.area == registObject.defaultArea) {
				liCls = 'class="active"'+' title="'+jsJSON.J0022+'"';
				divCls = 'active';
			}

			if(registObject.defaultArea == '') {
				if(i == 0) {
					divCls = 'active';
				}
			}

			if(i == 0) {
				intNationHtml[i]		=	'<div class="list_nation" name="list_nation">' +
												'<ul>';
				if (registObject.seg.indexOf('arr') > -1) {
					intNationHtml[i]	+=		'<li '+liCls+'><a href="#none" onclick="javascript:clickArea(this);">'+areaAirportData.areaName+'</a></li>';
				}
			}else {

				intNationHtml[i]		=			'<li '+liCls+'><a href="#none" onclick="javascript:clickArea(this);">'+areaAirportData.areaName+'</a></li>';

				if(i == (rLength-1)) {
					intNationHtml[i]	=			'<li '+liCls+'><a href="#none" onclick="javascript:clickArea(this);">'+areaAirportData.areaName+'</a></li>' +
												'</ul>' +
											'<div>';
				}
			}

			while(j<cLength) {

				if(areaAirportData.routeType == 'D' && registObject.seg.indexOf('dep') > -1) {
					divCls	= '';
					onCls	= '';
					j++;
					iIdx++;
					continue;
				}

				var cityAirportData = areaAirportData.cityAirportDatas[j];
				if(registObject.defaultAirport == '') {
					if(i == 0) {
						onCls	= 'class="active"';
					}
				}

				if(registObject.defaultAirport == cityAirportData.airport) {
					onCls	= 'class="active"';
				}

				var airportDesc;
				var targetID = registObject.hidAreaId.substring(registObject.hidAreaId.length-1, registObject.hidAreaId.length);
				if (bookConditionJSON.bizType == "RED" && targetID == "R") {  
					if(cityAirportData.mgtArea == 'US') {
						airportDesc = cityAirportData.airportName + ', <em>' + cityAirportData.state + '</em>';
					}else if(cityAirportData.mgtArea == 'KR' || cityAirportData.mgtArea == 'JP' || cityAirportData.mgtArea == 'CN' || cityAirportData.mgtArea == 'TW' || cityAirportData.mgtArea == 'CE' || cityAirportData.mgtArea == 'EA'){
			    		airportDesc = cityAirportData.airportName;
			    	}else {
			    		airportDesc = cityAirportData.airportName + ', <em>' + cityAirportData.countryName + '</em>';
			    	}
				} else {
					if(cityAirportData.mgtArea == 'US') {
						airportDesc = cityAirportData.airportName + ', <em>' + cityAirportData.state + '</em>';
					}else {
						airportDesc = cityAirportData.airportName;
					}
				}

				/* onclick="javascript:setAirportData(this);" a태그 */
				if (targetID == "F" && registObject.seg.indexOf('arr') > -1) {
					if(cityAirportData.direct == 'Y') {
						var tempIntAirportHtml	=	'<li '+onCls+' area="'+areaAirportData.area+'" mgtArea="'+cityAirportData.mgtArea+'" city="'+cityAirportData.city+'" cityName="'+cityAirportData.cityName+'" direct="'+cityAirportData.direct+'" airportName="'+cityAirportData.airportName+'" airport="'+cityAirportData.airport+'">' +
						'<a href="#none" onclick="javascript:setAirportData(this);">' +
						'<span class="cname">'+airportDesc+'</span>' +
						'<span class="abbr">'+cityAirportData.airport+'</span>' +
						'</a>' +
						'</li>';
					}else {
						var tempIntAirportHtml = '';
					}
				} else {
					var tempIntAirportHtml	=	'<li '+onCls+' area="'+areaAirportData.area+'" mgtArea="'+cityAirportData.mgtArea+'" city="'+cityAirportData.city+'" cityName="'+cityAirportData.cityName+'" direct="'+cityAirportData.direct+'" airportName="'+cityAirportData.airportName+'" airport="'+cityAirportData.airport+'">' +
					'<a href="#none" onclick="javascript:setAirportData(this);">' +
					'<span class="cname">'+airportDesc+'</span>' +
					'<span class="abbr">'+cityAirportData.airport+'</span>' +
					'</a>' +
					'</li>';
				}
				
				if(j == 0) {
					if(i == 0 || typeof intAirportHtml[iIdx-1] == 'undefined') {
						intAirportHtml[iIdx]	=	'<div class="list_airport">';
					}else{
						intAirportHtml[iIdx]	=	'';
					}

					intAirportHtml[iIdx]		+=		'<div class="national_listbox '+divCls+'" name="national_listbox">';
					//if(registObject.seg.indexOf("arr") > -1) {
					if (targetID == "F") {
						if(cityAirportData.direct != null && cityAirportData.direct != '') {
							if(cityAirportData.direct == 'Y') {
								intAirportHtml[iIdx] +=		'<h6>'+jsJSON.J0045+'</h6>';//취항지
							}
						}
					}else {
						if(cityAirportData.direct != null && cityAirportData.direct != '') {
							if(cityAirportData.direct == 'Y') {
								intAirportHtml[iIdx] +=		'<h6>'+jsJSON.J0045+'</h6>'; //취항지
							}else {
								if(!(registObject.seg.indexOf('dep') > -1 && cityAirportData.mgtArea == 'KR')) {
									intAirportHtml[iIdx] +=		'<h6>'+jsJSON.J0046+'</h6>'; //그외
								}
							}
						}
					}	
					//}
					intAirportHtml[iIdx]		+=			'<ul class="city_list" area="'+areaAirportData.area+'" mgtArea="'+cityAirportData.mgtArea+'">' +
																tempIntAirportHtml;
					if(cLength == 1) {
						intAirportHtml[iIdx]	+= 			'</ul>' +
														'</div>';
					}
					if(cLength == 1 && rLength == 1) {
						intAirportHtml[iIdx]	+=	'</div>';
					}
				}else {

					intAirportHtml[iIdx]		= '';

					if(areaAirportData.cityAirportDatas[j-1].direct != cityAirportData.direct) {
						//if(registObject.seg.indexOf("arr") > -1) {
						if (targetID == "F") {
							if(cityAirportData.direct != null && cityAirportData.direct != '') {
								if(cityAirportData.direct == 'Y') {
									intAirportHtml[iIdx] +=	'</ul>' +
									'<h6>'+jsJSON.J0045+'</h6>';//취항지
								}
							}
						}else {
							if(cityAirportData.direct != null && cityAirportData.direct != '') {
								if(cityAirportData.direct == 'Y') {
									intAirportHtml[iIdx] +=	'</ul>' +
															'<h6>'+jsJSON.J0045+'</h6>'; //취항지
								}else {
									// 그외
									intAirportHtml[iIdx] +=	'</ul>';
									if(!(registObject.seg.indexOf('dep') > -1 && cityAirportData.mgtArea == 'KR')) {
										intAirportHtml[iIdx] += '<h6>'+jsJSON.J0046+'</h6>';
									}
									intAirportHtml[iIdx] += '<ul class="city_list">';
								}
							}
						}	
						//}
					}

					intAirportHtml[iIdx]		+=				tempIntAirportHtml;

					if(j == (cLength-1)) {
						intAirportHtml[iIdx]	+=			'</ul>' +
														'</div>';
						if(i == (rLength-1)) {
							intAirportHtml[iIdx] +=	'</div>';
						}
					}
				}

				divCls	= '';
				onCls	= '';
				j++;
				iIdx++;
			};
			liCls	= '';
			i++;
		};

		targetAreaId		= registObject.hidAreaId;
		targetAirportId		= registObject.hidAirportId;
		targetAirportName	= registObject.targetAirportName;
		targetCityId		= registObject.hidCityId;
		targetCityNameId	= registObject.hidCityNameId;
		targetDirectId		= registObject.hidDirectId;
		targetLabel			= registObject.targetLabel;
		targetText			= registObject.targetText;
		targetInput			= registObject.targetInput;

		$intDiv.html('');
		$intDiv.append(intNationHtml.join(''));
		$intDiv.append(intAirportHtml.join(''));

		if(registObject.defaultArea == '') {
			var layerType = targetAreaId.substring(targetAreaId.length-1, targetAreaId.length);
			if (layerType == 'R') {
				$('#depAllAirportR').find('div[name=list_nation]').find('li').eq(0).addClass('active');
				$('#depAllAirportR').find('div[name=list_nation]').find('li').eq(0).find('a').attr('title', jsJSON.J0022);
				$('#depAllAirportR').find('div[name=national_listbox]').eq(0).addClass('active');
			} else if (layerType == 'S') {
				$('#depAllAirportS').find('div[name=list_nation]').find('li').eq(0).addClass('active');
				$('#depAllAirportS').find('div[name=list_nation]').find('li').eq(0).find('a').attr('title', jsJSON.J0022);
				$('#depAllAirportS').find('div[name=national_listbox]').eq(0).addClass('active');
			} else if (layerType == 'N') {
				$('#depAllAirportN').find('div[name=list_nation]').find('li').eq(0).addClass('active');
				$('#depAllAirportN').find('div[name=list_nation]').find('li').eq(0).find('a').attr('title', jsJSON.J0022);
				$('#depAllAirportN').find('div[name=national_listbox]').eq(0).addClass('active');
			} else {
				$('#depAllAirportF').find('div[name=list_nation]').find('li').eq(0).addClass('active');
				$('#depAllAirportF').find('div[name=list_nation]').find('li').eq(0).find('a').attr('title', jsJSON.J0022);
				$('#depAllAirportF').find('div[name=national_listbox]').eq(0).addClass('active');
			}
		}

		if(domHtml.length == 0) {
			$domDiv.prev().hide();
			$domDiv.hide();
		}else {
			$domDiv.prev().show();
			$domDiv.show();
		}

		if(intAirportHtml.length == 0) {
			$intDiv.prev().hide();
			$intDiv.hide();
		}else {
			$intDiv.prev().show();
			$intDiv.show();
		}

	};

	// 공항 중복 데이터 제거
	var removeDupData = function removeDupData(array) {
		var i = 0,
			length = array.length,
			removeDupDatas = [],
			airportData;

		while(i<length) {
			airportData = array[i];
			if(i == 0){
				removeDupDatas.push(airportData);
			}else{
				var j = 0,
					rLength = removeDupDatas.length,
					cnt = 0,
					removeDupData;

				while(j<rLength) {
					removeDupData = removeDupDatas[j];
					if(airportData.airport == removeDupData.airport) {
						removeDupDatas[j] = airportData;
						break;
					}else{
						cnt++;
					}
					j++;
				}
				if(cnt == rLength) {
					removeDupDatas.push(airportData);
				}
			}
			i++;
		}

		return removeDupDatas;
	};

	var loadAirportInfo = function loadAirportInfo(airportACData, type, seg, bizType, depArrType, depAirport, depArea, tripType, prevSegDepArea, prevSegArrArea, directNLength, areaLength, uniqueAreas, exceptAreas, uniqueAirport, onlyArea) {

		var cityAirportDatas = [],
			uniqueCityAirportDatas = [];

		$.ajax({
			async: true,
			url: '/I/'+countryCode+'/'+languageCode+'/AreaAirportInfo.do',
			type: "post",
			data: {
				seg				: seg,
				bizType			: bizType,
				depArrType		: depArrType,
				depAirport		: depAirport,
				depArea			: depArea,
				tripType		: tripType,
				prevSegDepArea	: prevSegDepArea,
				prevSegArrArea	: prevSegArrArea,
				directNLength	: directNLength,
				areaLength		: areaLength,
				uniqueAreas		: uniqueAreas == '' ? '' : JSON.stringify(uniqueAreas),
				exceptAreas		: exceptAreas == '' ? '' : JSON.stringify(exceptAreas),
				uniqueAirport	: uniqueAirport == '' ? '' : JSON.stringify(uniqueAirport),
				onlyArea		: onlyArea,
				domIntType		: domIntType
			},
			dataType: 'json',
			success: function(data) {

				var idx = 0,
					i = 0,
					rLength = data.RouteCityAirportData.length,
					cityAirportDatasTemp;

				while(i<rLength) {
					var routeCityAirportData = data.RouteCityAirportData[i],
						j = 0,
						cLength = routeCityAirportData.cityAirportDatas.length;

					if(routeCityAirportData.area == 'KR') {
						
						for(var k=0; k<cLength; k++) {
							routeCityAirportData.cityAirportDatas[k].order = new Object();
							routeCityAirportData.cityAirportDatas[k].order = k;
						}
						
						if(routeCityAirportData.routeType == 'D') {
							cityAirportDatasTemp = routeCityAirportData.cityAirportDatas;
						}else {
							if(typeof(cityAirportDatasTemp) != 'undefined') {

								$.merge(routeCityAirportData.cityAirportDatas, cityAirportDatasTemp);

								uniqueDatas = removeDupData(routeCityAirportData.cityAirportDatas);

								if(uniqueDatas.length > 1) {
									uniqueDatas.sort(function(a, b) {
										return a.order > b.order ? 1 : a.order < b.order ? -1 : 0;
									});
								}

								routeCityAirportData.cityAirportDatas = uniqueDatas;
							}
						}
					}

					while(j<cLength) {
						var cityAirportData = routeCityAirportData.cityAirportDatas[j];

						var obj = new autocompleteObject();
						obj.area		= routeCityAirportData.area;
						obj.areaName	= routeCityAirportData.areaName;
						obj.mgtArea		= cityAirportData.mgtArea;
						obj.airport		= cityAirportData.airport;
						obj.airportName	= cityAirportData.airportName;
						obj.city		= cityAirportData.city;
						obj.cityName	= cityAirportData.cityName;
						obj.countryName = cityAirportData.countryName;
						obj.state		= cityAirportData.state;
						obj.direct		= cityAirportData.direct;
						obj.label		= cityAirportData.label.replace(/[\/ ]/gi, '').replace(/_/gi, ' ');

						cityAirportDatas[idx] = obj;

						j++;
						idx++;
					};
					i++;
				};

				var tempAirport = [];
				for(var i = 0; i < cityAirportDatas.length; i++) {
					var item = cityAirportDatas[i];

					if($.inArray(item.airport, tempAirport) == -1) {
						uniqueCityAirportDatas.push(item);
						tempAirport.push(item['airport']);
					}else {
						continue;
					}
				}

				$(document).data(seg + 'AreaAirportData'+type, JSON.stringify(data.RouteCityAirportData));
			},
			error: function(data) {
				alert(JSON.parse(data.responseText).exceptionInfo.message);
			}
		}).done(function() {
			autoCompleteAirport(airportACData, uniqueCityAirportDatas);
		});

	};

	/*
	* 출도착 조회 전용(default 설정 및 autocomplete event 구성)
	* 00. airportACData		: autocomplete set object
	* 01. type				: 메인페이지 영역 구분 값
	* 02. seg				: dep1, arr1, dep2, arr2, ... 구분
	* 03. depArrType		: 출도착지 구분
	* 04. depAirport		: 출발지 선택했을 경우 set, default = ''
	* */
	var loadFlightArrivalDepartureInfo = function loadFlightArrivalDepartureInfo(airportACData, type, seg, depArrType, depAirport) {
		var cityAirportDatas = [],
			uniqueCityAirportDatas = [];
		
		$.ajax({
			async: true,
			url: '/I/'+countryCode+'/'+languageCode+'/flightArrivalDepartureInfo.do',
			type: "post",
			data: {
				seg				: seg,
				depArrType		: depArrType,
				depAirport		: depAirport
			},
			dataType: 'json',
			success: function(data) {

				var idx = 0,
					i = 0,
					rLength = data.RouteCityAirportData.length,
					cityAirportDatasTemp;

				while(i<rLength) {
					var routeCityAirportData = data.RouteCityAirportData[i],
						j = 0,
						cLength = routeCityAirportData.cityAirportDatas.length;

					if(routeCityAirportData.area == 'KR') {
						if(routeCityAirportData.routeType == 'D') {
							cityAirportDatasTemp = routeCityAirportData.cityAirportDatas;
						}else {
							if(typeof(cityAirportDatasTemp) != 'undefined') {

								$.merge(routeCityAirportData.cityAirportDatas, cityAirportDatasTemp);

								uniqueDatas = removeDupData(routeCityAirportData.cityAirportDatas);

								if(uniqueDatas.length > 1) {
									uniqueDatas.sort(function(a, b) {
										return a.direct > b.direct ? -1 : a.direct < b.direct ? 1 : 0;
									});
								}

								routeCityAirportData.cityAirportDatas = uniqueDatas;
							}
						}
					}

					while(j<cLength) {
						var cityAirportData = routeCityAirportData.cityAirportDatas[j];

						var obj = new autocompleteObject();
						obj.area		= routeCityAirportData.area;
						obj.areaName	= routeCityAirportData.areaName;
						obj.mgtArea		= cityAirportData.mgtArea;
						obj.airport		= cityAirportData.airport;
						obj.airportName	= cityAirportData.airportName;
						obj.city		= cityAirportData.city;
						obj.cityName	= cityAirportData.cityName;
						obj.countryName = cityAirportData.countryName;
						obj.state		= cityAirportData.state;
						obj.direct		= cityAirportData.direct;
						obj.label		= cityAirportData.label.replace(/[\/ ]/gi, '').replace(/_/gi, ' ');

						cityAirportDatas[idx] = obj;

						j++;
						idx++;
					};
					i++;
				};

				var tempAirport = [];
				for(var i = 0; i < cityAirportDatas.length; i++) {
					var item = cityAirportDatas[i];

					if($.inArray(item.airport, tempAirport) == -1) {
						uniqueCityAirportDatas.push(item);
						tempAirport.push(item['airport']);
					}else {
						continue;
					}
				}

				$(document).data(seg + 'AreaAirportData'+type, JSON.stringify(data.RouteCityAirportData));
			},
			error: function(data) {
				alert(JSON.parse(data.responseText).exceptionInfo.message);
			}
		}).done(function() {
			autoCompleteAirport(airportACData, uniqueCityAirportDatas);
		});
	};

	var autoCompleteAirport = function autoCompleteAirport(airportACData, sourceDatas) {

		$('#'+airportACData.txtAirportId).autocomplete({
			appendTo : '#' + airportACData.divAirportACId,
			autoFocus: false,
			delay: 0,
			minLength: 1,
			source: sourceDatas,
			close: function() {
				$(this).removeClass('ui-corner-top').addClass('ui-corner-all');
				$(this).autocomplete('widget').find('li').remove();
				$('.search_auto').find('.empty_box').show();
			},
			open: function(event, ui) {
				$('ul[id^=ui-id]').css("width", "");
				$('ul[id^=ui-id]').css("top", "");
				$('ul[id^=ui-id]').css("left", "");
				$(this).removeClass('ui-corner-all').addClass('ui-corner-top');
			},
			select: function(event, ui) {
				/* 출/도착지 자동 완성 결과 클릭시 값 저장 */
				if(ui.item) {
					var airport = ui.item.airport,
						airportName = ui.item.airportName;

					var depArrLabel;
					if(airportACData.targetLabel.indexOf('Dep') > -1) {
						depArrLabel = jsJSON.J0005;
					} else {
						depArrLabel = jsJSON.J0006;
					}
					
					if(document.getElementById(airportACData.targetLabel)){
						$('#'+airportACData.targetLabel).html('<span class=\'hidden\'>'+depArrLabel+'</span><span class="abbr">'+airport+'</span><span>'+airportName+'</span>');
					}

					$('#'+airportACData.hidAreaId).val(ui.item.mgtArea);
					$('#'+airportACData.hidAirportId).val(ui.item.airport);
					$('#'+airportACData.hidAirportNameId).val(ui.item.airportName);
					$('#'+airportACData.hidCityId).val(ui.item.city);
					$('#'+airportACData.hidCityNameId).val(ui.item.cityName);
					$('#'+airportACData.hidDirectId).val(ui.item.direct);
					$('#'+airportACData.hidAirportId).trigger('textchange');
					setTimeout(function() {
						$('#'+airportACData.txtAirportId).val('');
						if(typeof airportACData.targetInput != 'undefined'){
							$('#'+airportACData.targetInput).focus();
						}else{
							$('#'+airportACData.txtAirportId).blur();
							var type = airportACData.txtAirportId.substring(17, 18);
							if (type != 'F') {
								var $sCalendar = $("#sCalendar"+type);
								$sCalendar.focus();
								
								var $itinerary			= $sCalendar.parents('[name^=itinerary]'),
									$target_calendar	= $itinerary.find('.compareCalendar');
								
								if(type == 'C') {
									$target_calendar.datepicker("option", "minDate", -1);
								} else {
									if($('#departureArea'+type).val() == 'US' || $('#departureArea'+type).val() == 'MX') {
										$target_calendar.datepicker("option", "minDate", -1);
									}else {
										$target_calendar.datepicker("option", "minDate", 0);
									}
								}
							} else {
								$('.layer_close').trigger('click');  
							}
						}

						// nologin search의 경우 자동 완성 창을 닫아줌.
						var noLoginType	= airportACData.hidAirportId.substring(0, 3);
						var noLoginDep	= airportACData.txtAirportId.substring(19, 20);
						var noLoginArr	= airportACData.txtAirportId.substring(17, 18);
						if((noLoginType == "dep" && noLoginDep == "N") || (noLoginType == "arr" && noLoginArr == "N")) {
							$('.shadow_layer').hide();
						}
					}, 1);
					
				}
			},
			focus: function(event, ui) {
				return false;
			}
		}).focusout(function(e) {
			$(this).val('');
			$(this).prev().css('opacity', '1');
			$(this).next().next().next().find('div[name=search_auto] > ul').children().remove();
		}).keypress(function(event, ui) {
			var key = event.which || event.keyCode;
			if(key == 27) { // ESC Key
				$(this).val('');
			}else if(key == 13) { // ENTER Key
				if($(this).autocomplete('widget').find('li').length == 1) {
					$(this).autocomplete('widget').find('li').trigger('click');
				}
			}
		}).autocomplete('instance')._renderItem = function(ul, item) {
			$('div[name=search_auto]').find('div[name=empty_box]').hide();

	    	if(navigator.userAgent.indexOf('Firefox') > -1) {
		        var targetId = ul.parent().attr('target'),
		        	target = $('#'+targetId);

		    	if(isKoreanChar(target.val())) {
		    		var $inner = ul.closest('.inner');
		    		$inner.find('div[name=search_lately]').hide();
		    		$inner.find('div[name=search_auto]').show();
		    	}
	        }

	    	var label,
	    		airportNames,
	    		airportName;
	    	
	    	if(item.airportName != null) {
	    		airportNames = item.airportName.replace(/ /gi, "").split('/');
	    		airportName = airportNames[0] + airportNames[1];
	    	}
	    	
	    	if(item.label.indexOf(airportName) > -1 && item.mgtArea != 'US') {
				label = item.label.replace(airportName, airportNames[0]+'-'+airportNames[1]);
			}else if(item.mgtArea == 'US') {
				label = item.label.replace(item.state, '-'+item.state);
			}else {
				label = item.label.replace(item.cityName, item.cityName);
			}
			
			label = label.replace(item.airport, '-'+item.airport);
			
			// airport code 이후의 내용은 영문 공항명으로 화면에는 표출시키지 않음.
			label = label.substr(0, label.indexOf(item.airport) + item.airport.length);

			var lowerLabel = label.toLowerCase();
			var length = lowerLabel.match(/-/g).length;
			var tempTerm = this.term;
			
			if(tempTerm.indexOf('[') > -1) {
				tempTerm = tempTerm.replace(/\[/, '\\[');
			}
			
			var insertFIndex = lowerLabel.search(tempTerm.toLowerCase());
			
			if(insertFIndex > -1) {
				var insertLIndex = insertFIndex + this.term.length;
				
				label = label.substr(0, insertLIndex) + '</span>' + label.substr(insertLIndex);
				label = label.substr(0, insertFIndex) + '<span class="search_text">' + label.substr(insertFIndex);
				
				if(length == 3) {
					label = label.replace(/-/, '#').replace(/-/, '<span class="airport">').replace(/-/, '</span><var>').replace(/#/, '-');
				}else if(length == 2) {
					label = label.replace(/-/, '<span class="airport">').replace(/-/, '</span><var>');
				}else if(length == 1) {
					label = label.replace(/-/, '<var>');
				}
				
				label = label + '</var>';
			}else {
				if(length == 3) {
					label = label.replace(/-/, '#').replace(/-/, '<span class="airport">').replace(/-/, '</span><var>').replace(/#/, '-');
				}else if(length == 2) {
					label = label.replace(/-/, '<span class="airport">').replace(/-/, '</span><var>');
				}else if(length == 1) {
					label = label.replace(/-/, '<var>');
				}
				
				label = label + '</var>';
			}

	    	var $li	= $('<li/>').appendTo(ul);

	        $('<a/>').attr('href', '#none').html(label).appendTo($li);

	        return $li;
		};
	};

	var autocompleteObject = function autocompleteObject() {
		area		= '';
		areaName	= '';
		country		= '';
		countryName	= '';
		airport		= '';
		airportName	= '';
		cityName	= '';
		label		= '';
	};

	var _thisBtn;
	var openLayerPopup = function openLayerPopup(layerId, focusEl, positionY) {

		isOpenLayer = true;
		
		if(!getLsLayer(layerId)) {
			var _body			= $('body');
			var _thisLayerWrap	= $('#' + layerId + '');
			
			if(typeof positionY != 'undefined') {
				_thisBtn		= positionY;
			}else {
				_thisBtn		= $('#btn_' + layerId + '');
			}
			var _thisLayer		= _thisLayerWrap.find('.layer_pop');

			/* 같은 레이어 호출시 레이어 닫은 후 포커스 가야할 버튼 다시 지정 */
			if(typeof(focusEl) != 'undefined' && focusEl != '') {
				_thisBtn = $('#' + focusEl);
			}

			//P:ksh 수정
			//_body.css('overflow-y','hidden');
			//$.fn.fullpage.setMouseWheelScrolling(false);

			_thisLayerWrap.show().find('.layer_pop').attr('tabindex',0);

			function popCenter() {
				var popYpos = Math.max(0, (($(window).height() - _thisLayer.outerHeight())/2) + $(window).scrollTop());
				if(typeof(positionY) != 'undefined' && positionY != '') {
					popYpos = positionY;
				}
				_thisLayer.css('top', popYpos + "px");
			}

			popCenter();

			$(window).resize(function() {
				popCenter();
			});
			
			_thisLayerWrap.show().find('.layer_pop').focus();

			var scrollTop =  $(document).scrollTop();
			_thisLayerWrap.focus();
			$(document).scrollTop(scrollTop);
			
			//레이어팝업(딤) 닫기 / 닫은 후 스크롤락 해제
			$('.dim_close').each(function(){
				$(this).on('click', function(){
					var thisLayerPop = $(this).closest('.layer_wrap');
					thisLayerPop.hide();
					_thisBtn.focus();
					$.fn.fullpage.setMouseWheelScrolling(true);
				});
			});
		}
	};

	var getLsLayer = function getLsLayer(name) {
		var ls = false;
		if(localStorage.getItem(name)) {
			var saveDate = localStorage.getItem(name),
				todayDate = new Date();

			if(parseInt(todayDate.getTime()) > parseInt(saveDate)) {
				localStorage.removeItem(name);
				ls = false;
			}else{
				ls = true;
			}
		}else{
			ls = false;
		}
		return ls;
	};

	var clickArea = function clickArea(object) {
		var $this = $(object),
			$li = $('div[name=list_nation]').find('li');
		$li.removeClass('active');
		$li.find('a').attr('title', '');
		$this.parent().addClass('active');
		$this.attr('title', jsJSON.J0022);
		var natIdx =$this.parent().index();
		$this.closest('.flights_list').find('.list_airport').find('.national_listbox').removeClass('active');
		$this.closest('.flights_list').find('.list_airport').find('.national_listbox').eq(natIdx).addClass('active');
	};

	var setAirportData = function setAirportData(object) {
		$('div[name=recent_srch_box] > ul > li').removeClass('selected_Recent');
		$('div[name=recent_srch_box] > ul > li > a').attr('title', '');
		var $this = $(object),
			$a = $('.city_list > li > a');
		if(!$this.parent('li').parent('ul').hasClass('no_flight')) {
			$a.parent('li').removeClass('on');
			$a.attr('title', '');
			$this.parent('li').addClass('on');
			$this.attr('title', jsJSON.J0022);
			if($this.closest('.shadow_layer').find('.btn_M').length > 0) {
				$this.closest('.shadow_layer').find('.btn_M').removeClass('gray').addClass('red');
			} else {
				// 다음 버튼이 없는 경우 바로 clickNextStep 처리
				clickNextStep('allAirportN', 'N');
			}
		}
	};

	/* 공항선택 다음버튼 클릭 */
	var clickNextStep = function clickNextStep (layerID, type) {
		if ($('.selected_Recent').length > 0) {
			var $this = $('.selected_Recent'),
			$thisVal = $this.attr('val');
			$thisVal = $thisVal.split('-');

			var $thisValDep = $thisVal[0].split(',');
			var $thisValArr	= $thisVal[1].split(',');
			if ($thisVal[2] != null) {
				var $thisValEtc	= $thisVal[2].split(',');
			}

			var $depHidden = $this.closest('.input_wrap').find('.spot_proven').children();
			var $arrHidden = $this.closest('.input_wrap').find('.spot_destin').children();

			$depHidden.eq(0).val($thisValDep[0]);
			$depHidden.eq(1).val($thisValDep[2]);
			$depHidden.eq(2).val($thisValDep[3]);
			$depHidden.eq(3).val($thisValDep[4]);
			$depHidden.eq(1).trigger('textchange');
			$arrHidden.eq(0).val($thisValArr[0]);
			$arrHidden.eq(1).val($thisValArr[2]);
			$arrHidden.eq(2).val($thisValArr[3]);
			$arrHidden.eq(3).val($thisValArr[4]);
			$arrHidden.eq(1).trigger('textchange');

			$this.closest('div[name^=itinerary]').find('.spot_proven > label[name=spot_place]').html('<span class=\'hidden\'>'+jsJSON.J0005+'</span><span class="abbr">'+$thisValDep[2]+'</span><span>'+$thisValDep[1]+'</span>');
			$this.closest('div[name^=itinerary]').find('.spot_destin > label[name=spot_place]').html('<span class=\'hidden\'>'+jsJSON.J0006+'</span><span class="abbr">'+$thisValArr[2]+'</span><span>'+$thisValArr[1]+'</span>');

			if ($thisVal[2] != null) {
				var depDateView = $thisValEtc[0];
				$this.parents('div.search_flight').prev('.ipt_elt').removeClass('on');

				var type = $depHidden.eq(0).attr('id').substring(13,14);

				if('OW' == bookConditionJSON.tripType || type == 'S' || type == 'F') {
					setDatepickerDate($('#sCalendar'+type), depDateView.substring(0, 8));
				}else {
				    var retDateView = $thisValEtc[1];
				    setDatepickerDate($('#sCalendar'+type), depDateView.substring(0, 8), retDateView.substring(0, 8));
				}
			}

			if (type == 'R') {
				$('#pax_nums').children().hide();
				$('#pax_nums').children().find('.num').html('');
				if(Number($thisValEtc[2]) > 0) {
					$('#pax_nums').children().eq(0).show();
					$('#pax_nums').children().eq(0).find('.num').html($thisValEtc[2]);
				}
				if(Number($thisValEtc[3]) > 0) {
					$('#pax_nums').children().eq(1).show();
					$('#pax_nums').children().eq(1).find('.num').html($thisValEtc[3]);
				}
				if(Number($thisValEtc[4]) > 0) {
					$('#pax_nums').children().eq(2).show();
					$('#pax_nums').children().eq(2).find('.num').html($thisValEtc[4]);
				}

				$('#adultCount').val($thisValEtc[2]).trigger('keyup');
				$('#childCount').val($thisValEtc[3]).trigger('keyup');
				$('#infantCount').val($thisValEtc[4]).trigger('keyup');
				$('#psng').attr('placeholder','');
				$('#pax_nums').show();
				$('label[name=calDesc]').hide();

				$('.layer_passenger').find('.btn_M').removeClass('gray').addClass('red');

				/* 좌석등급 validation */
				if(!cabinClassValidation()) {
					$('#seat').focus();
					return;
				} else {
					$('#registTravel').removeClass('gray').addClass('red');
				}
			}
			layerAllClose();
		} else {
			var $layerID = $("[name='"+layerID+"']").attr('id');

			var area,
				mgtArea,
				airportName,
				airport,
				city,
				cityName,
				direct;
			$('.city_list > li').each(function() {
				var $this = $(this),
					$thisSpan = $this.find('span');
				if($this.hasClass('on')){
					area		= $this.attr('area');
					mgtArea		= $this.attr('mgtArea');
					airportName	= $this.attr('airportName');
					airport		= $this.attr('airport');
					city		= $this.attr('city');
					cityName	= $this.attr('cityName');
					direct		= $this.attr('direct');
				}
			});

			if(typeof airport == 'undefined') {
				var depAirportId = 'departureAirport'+type;
				if($('#'+depAirportId).val() == ''){
					validation = false;
				}
				alert(jsJSON.J0060); //공항을 선택해 주십시오.
				return false;
			}
			$('#'+targetAreaId).val(mgtArea);
			$('#'+targetAirportId).val(airport);
			$('#'+targetCityId).val(city);
			$('#'+targetCityNameId).val(cityName);
			$('#'+targetDirectId).val(direct);

			if(document.getElementById(targetLabel)){
				if ($layerID.indexOf('arr') > -1 ){
					$('#'+targetLabel).html('<span class=\'hidden\'>'+jsJSON.J0006+'</span><span class="abbr">'+airport+'</span><span>'+airportName+'</span>');
				} else {
					$('#'+targetLabel).html('<span class=\'hidden\'>'+jsJSON.J0005+'</span><span class="abbr">'+airport+'</span><span>'+airportName+'</span>');
				}
			}

			$('#'+targetAirportId).trigger('textchange');
			$('div[name^="allAirport"]').hide();
			//P:ksh 수정
			//$('body').css('overflow-y','auto');
			if(typeof targetInput != 'undefined'){
				$('#'+targetInput).focus();
				$('#'+targetInput).focusin();
				targetInput = undefined;
			}
			if ($layerID.indexOf('arr') > -1 ){
				if (type == 'F') {
					$('#searchDepArr').focus();
					$('#searchDepArr').removeClass('gray').addClass('red');
				} else {
					var $sCalendar = $("#sCalendar"+type);
					$sCalendar.focus();
					
					var $itinerary			= $sCalendar.parents('[name^=itinerary]'),
						$target_calendar	= $itinerary.find('.compareCalendar');
					
					if(type == 'C') {
						$target_calendar.datepicker("option", "minDate", -1);
					} else {
						if($('#departureArea'+type).val() == 'US' || $('#departureArea'+type).val() == 'MX') {
							$target_calendar.datepicker("option", "minDate", -1);
						}else {
							$target_calendar.datepicker("option", "minDate", 0);
						}
					}
				}
			} else if (layerID.indexOf('dep') > -1 ){
				$('#btn_arrAllAirport1').trigger("click");
			}
		}
	};


	var generateUUID = function generateUUID(type) {
		var d = new Date().getTime(),
			uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
				var r = (d + Math.random()*16)%16 | 0;
				d = Math.floor(d/16);
				return (c=='x' ? r : (r&0x7|0x8)).toString(16);
			});
		if (type == 'seat') {
			$('#preSeatFrm').find('#sessionUniqueKeyC').val(uuid);
		} else if (type == 'regist')  {
			$('#registTravelForm').find('#sessionUniqueKeyR').val(uuid);
		} else if (type == 'checkIn') {
			$('#checkInVerifiSession').val(uuid);
		}
	};

	/* 노선에 따른 안내 */
	var setNoticeInfo = function setNoticeInfo() {
		var intLength = 0;

		var depAirport	= $('#departureAirportR').val()
			arrAirport	= $('#arrivalAirportR').val();

		var depArea	= $('#departureAreaR').val(),
			arrArea	= $('#arrivalAreaR').val();

		if(depArea == 'KR' && arrArea != 'KR' ||
				depArea != 'KR' && arrArea == 'KR' ||
				depArea != 'KR' && arrArea != 'KR') {
			intLength++;
		}
		
		if(depArea == 'CN' && bookConditionJSON.bizType == 'REV') {
			$('.china').show();
			var tabs = $('.china').find('ul > li > a');
			tabs.click(function(){
				tabs.parent('li').removeClass('on');
				$(this).parent('li').addClass('on');
				$('#currency').val($(this).attr('currency'));
			});
		} else {
			$('.china').hide();
		}

		if(bookConditionJSON.tripType == 'RT' || bookConditionJSON.tripType == 'OW') {
			var depArea = $('#departureAreaR').val(),
				arrArea = $('#arrivalAreaR').val();

			if(depArea == 'KR' && arrArea == 'KR'){
				if (bookConditionJSON.bizType == "REV") {
					$("ul[name=selectSeg1CabinClass]").eq(1).children().eq(1).find("a").trigger('click');
				} else {
					$("ul[name=selectSeg1CabinClass]").eq(0).children().eq(1).find("a").trigger('click');
				}
				$("#seat").val(jsJSON.J0483); //'이코노미'
				$('#seat').prop("disabled", true);
				if (bookConditionJSON.domIntType == "I" && bookConditionJSON.bizType == "RED") {
					$('#adultCount, #childCount, #infantCount').val('0').trigger('keyup');
					$('#adultCount').val('1').trigger('keyup');
				}
				bookConditionJSON.domIntType = "D";
			}else{
				if (bookConditionJSON.domIntType == "D" && bookConditionJSON.bizType == "RED") {
					$('#adultCount, #childCount, #infantCount').val('0').trigger('keyup');
					$('#adultCount').val('1').trigger('keyup');
				} else if (bookConditionJSON.domIntType == "D") {
					$('#seat').val("");
				}
				bookConditionJSON.domIntType = "I";
				$('#seat').prop("disabled", false);
				if(bookConditionJSON.tripType == 'OW') {
					$cabinClass.eq(1).hide();
				}
				$cabinClass.eq(4).hide();
				$cabinClass.eq(5).hide();

				var adtCnt = parseInt($('#adultCount').val()),
				chdCnt = parseInt($('#childCount').val()),
				infCnt = parseInt($('#infantCount').val());

				if (bookConditionJSON.bizType == "RED") {
					if(adtCnt + chdCnt + infCnt > 5){
						$('#infantCount').val(0);
						$('[infantdesc]').hide();
					}else if(adtCnt + chdCnt == 8){
						$('.plus').prop('disabled', true);
					}
				}
			}
		}

		$('#infantAge').html(jsJSON.J0047); //(만 2세 미만)
		if(intLength > 0) {
			$('#adultAge').html(jsJSON.J0048); //(만 12세 이상)
			$('#childAge').html(jsJSON.J0049); //(만 2세 ~ 12세 미만)
			if (bookConditionJSON.bizType == "RED") {
				$('#passengerInfo').html(jsJSON.J0486);//J0486 : 예약인원은 성인, 소아를 포함하여 총 5명까지 선택 가능합니다.
			}
		}else{
			$('#adultAge').html(jsJSON.J0050); //(만 13세 이상)
			$('#childAge').html(jsJSON.J0051); //(만 2세 ~ 13세 미만)
			if (bookConditionJSON.bizType == "RED") {
				$('#passengerInfo').html(jsJSON.J0489);//J0489 : 예약인원은 성인,소아,유아를 포함하여 총 5명까지 선택 가능합니다.
			}
		}

	};

	/* 이전 공항 data empty check */
	var prevAirportValidation = function prevAirportValidation($thisId, type) {
		var validation = true,
			_thisId = $thisId;
		if(_thisId.toUpperCase().indexOf('DEP') > -1){
			return validation;
		} else if (_thisId.toUpperCase().indexOf('CALENDAR') == -1 && _thisId.toUpperCase().indexOf('ARR') > -1) {
			var depAirportId = 'departureAirport'+type;
			if($('#'+depAirportId).val() == ''){
				alert(jsJSON.J0410); //출발지를 입력해주세요.
				validation = false;
				$('#'+$thisId).blur();
				$('#'+depAirportId).parent().find('.btn_airport').focus();
			}
		}
		return validation;
	};

	/* 출발/도착지 시작 */
	var serLayer = (function(reset){
		if( reset === 'reset' ){
			$('.spot_place').css('opacity','1');
			$('.spotentry').val('');
		}
		$('.shadow_layer').hide();
		layerAllClose();
		$('.search_lately').show();
		$('.search_auto').hide();
	});

	/* autoFlag 가 true 일 때 자동 완성만 출력,
		 autoFlag 가 null, undefined, false 등 true 이외의 값이면, 기존과 같이 최근 검색부터 출력 */
	var layerVar = function($this, $searchLayer){
		var autoFlag = false;
		var isLatelyShow = true;
		var optionHide = '.search_auto';
		var optionShow = '.search_lately';
		if($("input[data-option='auto']").length) autoFlag = true;

		if($this.val() === "")
		{
			if(autoFlag) {
				isLatelyShow = false;
				$(".shadow_layer").hide();
			}
			else isLatelyShow = true;
		}
		else isLatelyShow = false;

		if(!isLatelyShow) {
			optionShow = '.search_auto';
			optionHide = '.search_lately';
		}

		$searchLayer.find(optionHide).hide();
		$searchLayer.find(optionShow).show();
	};

	var isKoreanChar = function isKoreanChar(ch) {
		var c = ch.charCodeAt(0);
		if(0x1100 <= c && c <= 0x11FF) {
			return true;
		}
		if(0x3130 <= c && c <= 0x318F) {
			return true;
		}
		if(0xAC00 <= c && c <= 0xD7A3) {
			return true;
		}
		return false;
	};

	/* 최근검색리스트 */
	var setMgtArea = false;
	var drawSearchLately = function drawSearchLately(target){
		var $this = target;
		var _type = target.closest('.input_wrap').attr('name').replace(/itinerary/, '');
		var tripType = bookConditionJSON.tripType;
		var depArrType = $this.attr('depArrType');
		var $searchLately = $this.parent('.ipt_elt').next('.shadow_layer').find('div[name=search_lately]'),
		$children = $searchLately.children(),
		html = [];

		for(var i=1; i<$children.length+1; i++){
			$children.eq(i).replaceWith('');
		}

		function draw(lsKey) {

			var currentDate = getCurrentDate(),
				searchLatelyDatas = JSON.parse(localStorage.getItem(lsKey)),
				tempSearchLatelyDatas = [],
				sLength = searchLatelyDatas.length,
				hIdx = 0,
				cLength = 0,
				arrowCls;
			
			if(!setMgtArea) {
				if('dep' == depArrType && sLength > 0) {
					$.ajax({
						async: false,
						url: '/I/'+countryCode+'/'+languageCode+'/getSearchLatelyMgtArea.do',
						type: 'post',
						data: {
							bizType				: bookConditionJSON.bizType,
							searchLatelyDatas	: JSON.stringify(searchLatelyDatas)
						},
						dataType: 'json',
						success: function(data) {
							setMgtArea = true;
							searchLatelyDatas = data.result;
							localStorage.setItem(lsKey, JSON.stringify(searchLatelyDatas));
						},
						error: function(data) {
							alert(JSON.parse(data.responseText).exceptionInfo.message);
						},
						complete: function() {
							checkSSOSessionExtension();
						}
					});
				}
			}

			for(var i=sLength-1; i>=0; i--) {
				var searchLatelyData = searchLatelyDatas[i];
				if(Number(searchLatelyData.departureDateTime != null && searchLatelyData.departureDateTime.substring(0, 8)) >= Number(currentDate)) {

					tempSearchLatelyDatas.push(searchLatelyData);

					/* 오는편일 경우 가는편의 공항과 일치하는 경우만 */
					if(depArrType == 'arr'){
						var $thisDepAirport;
						if(_type == 'R') {
							$thisDepAirport = $('#departureAirportR');
						}else if(_type == 'S') {
							$thisDepAirport = $('#departureAirportS');
						}else if(_type == 'F') {
							$thisDepAirport = $('#departureAirportF');
						}else if(_type == 'N') {
							$thisDepAirport = $('#departureAirportN');
						}
						if($thisDepAirport.val() != searchLatelyData.departureAirport){
							if(i == (sLength-1)){
								html[hIdx] = '<ul>';
							}else if(i == 0){
								html[hIdx] = '</ul>';
							}else{
								html[hIdx] = '';
							}
							hIdx++;
							continue;
						}
					}

					arrowCls = '';
					if('RT' == tripType) {
						arrowCls = 'return';
					}

					html[hIdx] =	'<li class="'+arrowCls+'" val="'+searchLatelyData.departureArea+','+searchLatelyData.departureAirportName+','+
									searchLatelyData.departureAirport+','+searchLatelyData.departureCity+','+searchLatelyData.departureCityName+
									'-'+searchLatelyData.arrivalArea+','+searchLatelyData.arrivalAirportName+','+
									searchLatelyData.arrivalAirport+','+searchLatelyData.arrivalCity+','+searchLatelyData.arrivalCityName+','+searchLatelyData.direct+
									'-'+searchLatelyData.departureDateTime+','+searchLatelyData.arrivalDateTime+','+searchLatelyData.adultCnt+','+searchLatelyData.childCnt+','+searchLatelyData.infantCnt+'" data-itinerary="'+searchLatelyData.itinerary+'">' +
									'<a href="#none">' +
										'<span>'+searchLatelyData.departureAirportName+'<var>'+searchLatelyData.departureAirport+'</var></span>' +
										'<span>'+searchLatelyData.arrivalAirportName+'<var>'+searchLatelyData.arrivalAirport+'</var></span>' +
									'</a>' +
									'<button type="button" class="btn_detlete" name="btn_delete" onclick="javascript:deleteSearchLatelyData(this, \''+lsKey+'\', \''+searchLatelyData.itinerary+'\', \''+depArrType+'\');"><span class="hidden">'+jsJSON.J0101+'</span></button>' +//삭제
								'</li>';

					cLength++;

					// start idx
					if(i == (sLength-1)) {
						var temlHtml = html[hIdx];
						html[hIdx] = '<ul>' + temlHtml;

					// end idx
					}else if(i == 0) {
						html[hIdx] += '</ul>';
					}
				}

				if(cLength == 3) {
					break;
				}

				hIdx++;
			};
		};

		var lsKey;
		if('RT' == tripType) {
			lsKey = 'searchLatelyDatasRT_'+countryCode+languageCode;
		}else if('OW' == tripType) {
			lsKey = 'searchLatelyDatasOW_'+countryCode+languageCode;
		}
		if ($this.parent('.ipt_elt').parent('.input_wrap').attr('name') == 'itineraryF') {
			lsKey = 'searchLatelyDatasArrDep_'+countryCode+languageCode;
		}
		if(localStorage.getItem(lsKey) != null) {
			draw(lsKey);
		}else{
			html[0] = '<div class="empty_box" name="empty_box">'+jsJSON.J0023+'</div>'; //최근 검색한 노선이 없습니다.
		}

		if(html.join('').indexOf('class') < 0) {
			html = [];
			html[0] = '<div class="empty_box" name="empty_box">'+jsJSON.J0023+'</div>'; //최근 검색한 노선이 없습니다.
		}
		
		/* 2019-08-30 #35282-최근검색 ul 미적용현상 방어*/
		var checkHtml = html;
		var tempHtml = [];
	    if(checkHtml.length > 0){
	    	for(var x=0; x<checkHtml.length; x++){
	    		if(checkHtml[x] != undefined){
	    			tempHtml.push(checkHtml[x]);
	    		}
	    	}
	    	
	    	if(tempHtml[0].split('<ul>').length < 2){
	    		tempHtml[0] = '<ul>'+tempHtml[0];
	    	}
	    	
	    	if(tempHtml[tempHtml.length-1].split('</ul>').length < 2){
	    		tempHtml[tempHtml.length-1] = tempHtml[tempHtml.length-1] + '</ul>';
	    	}
	    }
		
		$searchLately.append(tempHtml.join(''));
		$this.parent('.ipt_elt').siblings('.select_airport').find('.recent_srch_box').html(tempHtml.join(''));
	};
	
	//최근검색 항목 삭제
	var deleteSearchLatelyData = function deleteSearchLatelyData(object, lsKey, itinerary, depArrType) {
		
		var $searchLatelyDiv = $(object).closest('.search_lately'),
			_type = $(object).closest('.input_wrap').attr('name').replace(/itinerary/, '');
		
		if($searchLatelyDiv.length == 0) {
			$searchLatelyDiv = $(object).closest('.recent_srch_box');
		}
		
		$(object).parent().remove();
		
		
		var tempSearchLatelyDatas = JSON.parse(localStorage.getItem(lsKey)),
			tripType = bookConditionJSON.tripType;
		
		var i = 0,
			sLength = tempSearchLatelyDatas.length,
			searchLatelyData,
			spliceIndex;
		
		while(i<sLength) {
			searchLatelyData = tempSearchLatelyDatas[i];

			if(searchLatelyData.itinerary == itinerary) {
				spliceIndex = i;
				break;
			}
			
			i++;
		}
		
		tempSearchLatelyDatas.splice(spliceIndex, 1);

		if(tempSearchLatelyDatas.length > 0) {
			if(tempSearchLatelyDatas.length > 2) {
				var lastItinerary = $searchLatelyDiv.find('ul').children().last().data('itinerary');
				
				var i = 0,
					sLength = tempSearchLatelyDatas.length,
					searchLatelyData,
					appendSearchLatelyData;
				
				var depAirport = '';
				if(_type == 'R') {
					depAirport = $('#departureAirportR').val()
				}else if(_type == 'S') {
					depAirport = $('#departureAirportS').val()
				}else if(_type == 'F') {
					depAirport = $('#departureAirportF').val()
				}else if(_type == 'N') {
					depAirport = $('#departureAirportN').val()
				}
				
				while(i<sLength) {
					searchLatelyData = tempSearchLatelyDatas[i];
					
					if(searchLatelyData.itinerary == lastItinerary) {
						if(depArrType == 'dep') {
							appendSearchLatelyData = tempSearchLatelyDatas[i-1];
						}else {
							
							var j = i-1;
							
							while(j>=0) {
								if(depAirport == tempSearchLatelyDatas[j].departureAirport) {
									appendSearchLatelyData = tempSearchLatelyDatas[j];
									break;
								}
								
								j--;
							}
							
						}
						break;
					}
					
					i++;
				}
				
				if(typeof appendSearchLatelyData != 'undefined') {
					if('dep' == depArrType || ('arr' == depArrType && depAirport == appendSearchLatelyData.departureAirport)) {
						
						var html = '',
							arrowCls = '';
						
						if('RT' == tripType) {
							arrowCls = 'return';
						}
						
						html =	'<li class="'+arrowCls+'" val="'+appendSearchLatelyData.departureArea+','+appendSearchLatelyData.departureAirportName+','+
									appendSearchLatelyData.departureAirport+','+appendSearchLatelyData.departureCity+','+appendSearchLatelyData.departureCityName+
									'-'+appendSearchLatelyData.arrivalArea+','+appendSearchLatelyData.arrivalAirportName+','+
									appendSearchLatelyData.arrivalAirport+','+searchLatelyData.arrivalCity+','+appendSearchLatelyData.arrivalCityName+','+appendSearchLatelyData.direct+
									'-'+appendSearchLatelyData.departureDateTime+','+appendSearchLatelyData.arrivalDateTime+','+appendSearchLatelyData.adultCnt+','+appendSearchLatelyData.childCnt+','+appendSearchLatelyData.infantCnt+'" data-itinerary="'+appendSearchLatelyData.itinerary+'">' +
									'<a href="#none">' +
										'<span>'+appendSearchLatelyData.departureAirportName+'<var>'+appendSearchLatelyData.departureAirport+'</var></span>' +
										'<span>'+appendSearchLatelyData.arrivalAirportName+'<var>'+appendSearchLatelyData.arrivalAirport+'</var></span>' +
									'</a>' +
									'<button type="button" class="btn_detlete" name="btn_delete" onclick="javascript:deleteSearchLatelyData(this, \''+lsKey+'\', \''+appendSearchLatelyData.itinerary+'\', \''+depArrType+'\');"><span class="hidden">'+jsJSON.J0101+'</span></button>' +//삭제
								'</li>';
						
						$searchLatelyDiv.find('ul').append(html);
						
					}
				}
				
			}
			
			localStorage.setItem(lsKey, JSON.stringify(tempSearchLatelyDatas));
		}else {
			localStorage.removeItem(lsKey);
		}
			
		
		if($searchLatelyDiv.find('ul').children().length == 0) {
			$searchLatelyDiv.find('ul').remove();
			$searchLatelyDiv.append('<div class="empty_box" name="empty_box">'+jsJSON.J0023+'</div>');//최근 검색한 노선이 없습니다
		}
	};
	
	//최근 검색 중복 데이터 제거
	var removeDupSearchLately = function removeDupSearchLately(searchLatelyDatas) {
		var i = 0,
			sLength = searchLatelyDatas.length,
			removeDupSearchLatelyDatas = [],
			searchLatelyData,
			spliceIndex;
		
		while(i<sLength) {
			searchLatelyData = searchLatelyDatas[i];
			if(i == 0){
				removeDupSearchLatelyDatas.push(searchLatelyData);
			}else{
				var j = 0,
					rLength = removeDupSearchLatelyDatas.length,
					cnt = 0,
					removeDupSearchLatelyData;
				while(j<rLength) {
					removeDupSearchLatelyData = removeDupSearchLatelyDatas[j];
					if(searchLatelyData.itinerary == removeDupSearchLatelyData.itinerary) {
						removeDupSearchLatelyDatas[j] = searchLatelyData;
						spliceIndex = j;
						break;
					}else{
						cnt++;
					}
					j++;
				}
				if(cnt == rLength) {
					removeDupSearchLatelyDatas.push(searchLatelyData);
				}
			}
			i++;
		}
		
		var tempData;
		if(typeof spliceIndex != 'undefined') {
			tempData = removeDupSearchLatelyDatas[j];
			removeDupSearchLatelyDatas.splice(j, 1);
			removeDupSearchLatelyDatas.push(tempData);
		}
		
		return removeDupSearchLatelyDatas;
	};

	//최근 검색
	var searchLatelyObject = function searchLatelyObject() {
		departureArea			= '';
		departureAirportName	= '';
		departureAirport		= '';
		departureCity			= '';
		departureCityName		= '';
		departureDateTime		= '';
		arrivalArea				= '';
		arrivalAirportName		= '';
		arrivalAirport			= '';
		arrivalCity				= '';
		arrivalCityName			= '';
		arrivalDateTime			= '';
		itinerary				= '';
		adultCnt				= 0;
		childCnt				= 0;
		infantCnt				= 0;
	};

	var setSearchLately = function setSearchLately() {
		var searchLatelyDatas = [],
			removeDupSearchLatelyDatas = [],
			tempSearchLatelyDatas = [],
			searchLatelyData = new searchLatelyObject();
		
		searchLatelyData.departureArea 			= $('#departureAreaF').val();
		searchLatelyData.departureAirportName	= $('#labelDepartureAirportF').find('span').eq(2).text();
		searchLatelyData.departureAirport		= $('#departureAirportF').val();
		searchLatelyData.departureCity			= $('#departureCityF').val();
		searchLatelyData.departureCityName		= $('#departureCityNameF').val();
		searchLatelyData.departureDateTime		= $('#searchDate').val() + '0000';
		searchLatelyData.arrivalArea			= $('#arrivalAreaF').val();
		searchLatelyData.arrivalAirportName		= $('#labelArrivalAirportF').find('span').eq(2).text();
		searchLatelyData.arrivalAirport			= $('#arrivalAirportF').val();
		searchLatelyData.arrivalCity			= $('#arrivalCityF').val();
		searchLatelyData.arrivalCityName		= $('#arrivalCityNameF').val();
		searchLatelyData.itinerary				= $('#departureAirportF').val() + '-' + $('#arrivalAirportF').val();
		searchLatelyDatas[0] = searchLatelyData;

		removeDupSearchLatelyDatas = removeDupSearchLately(searchLatelyDatas);
		
		var lsKey = 'searchLatelyDatasArrDep_'+countryCode+languageCode;
		
		if(localStorage.getItem(lsKey) != null) {
			tempSearchLatelyDatas = JSON.parse(localStorage.getItem(lsKey));
			$.merge(tempSearchLatelyDatas, removeDupSearchLatelyDatas);
			
			tempSearchLatelyDatas = removeDupSearchLately(tempSearchLatelyDatas);
		}else{
			tempSearchLatelyDatas = removeDupSearchLatelyDatas;
		}
		
		if(tempSearchLatelyDatas.length > 10) {
			for(var i=0, tl=tempSearchLatelyDatas.length-10; i<tl; i++) {
				tempSearchLatelyDatas.splice(0, 1);
			}
		}
		
		localStorage.setItem('searchLatelyDatasArrDep_'+countryCode+languageCode, JSON.stringify(tempSearchLatelyDatas));
	};
	
	/* 탑승 인원 validation */
	var paxValidation = function paxValidation(point) {
		var isValidation = true,
			adtCnt = parseInt($('#adultCount').val()),
			chdCnt = parseInt($('#childCount').val()),
			infCnt = parseInt($('#infantCount').val()),
			totalCnt = adtCnt + chdCnt + infCnt;
		if(typeof point == 'undefined') {
			if(adtCnt < infCnt) {
				alert(jsJSON.J0009); //유아가 동반 성인보다 많을 수 없습니다.
				isValidation = false;
				return false;
			}
			if(bookConditionJSON.bizType == "REV"){
				if(totalCnt > 9) {
					alert(jsJSON.J0010); //예약인원은 성인, 어린이, 유아를 포함한 \n9명을 초과할 수 없습니다.
					isValidation = false;
					return false;
				}
			}else{
				if($('#departureAreaR').val() == "KR" && $('#arrivalAreaR').val() == "KR"){ /* if(bookConditionJSON.domIntType == "D"){ */
					if(adtCnt + chdCnt > 8) {
						alert(jsJSON.J0011); //마일리지 항공권 예약은 본인 및 가족 회원만 가능하므로 성인, 소아를 포함한 5명을 초과할 수 없습니다
						$('.plus').eq(0).prop('disabled', true);
						$('.plus').eq(1).prop('disabled', true);
						isValidation = false;
						return false;
					} else if(totalCnt > 9) {
						alert(jsJSON.J0010); //예약인원은 성인, 어린이, 유아를 포함한 \n9명을 초과할 수 없습니다.
						$('.plus').prop('disabled', true);
						isValidation = false;
						return false;
					}
				}else if(totalCnt > 8) {
					alert(jsJSON.J0012); //마일리지 항공권 예약은 본인 및 가족 회원만 가능하므로 성인, 어린이, 유아를 포함한 5명을 초과할 수 없습니다
					$('.plus').prop('disabled', true);
					isValidation = false;
					return false;
				}
			}
			if(totalCnt == 9 && bookConditionJSON.bizType == "REV") {
				$('.plus').prop('disabled', true);
			}else {
				$('.plus[name!=btn_number_star]').prop('disabled', false);

				if(bookConditionJSON.bizType != "RED" && !($('#departureAreaR').val() == "KR" && $('#arrivalAreaR').val() == "KR")){
					$('.plus[name!=btn_number_star]').prop('disabled', false);
				}else if(adtCnt + chdCnt < 5 ){
					$('.plus[name!=btn_number_star]').prop('disabled', false);
				}else if(adtCnt + infCnt < 10 ){
					$('.plus[name!=btn_number_star]').prop('disabled', false);
				}
			}
		} else {
			if(totalCnt == 0) {
				alert(jsJSON.J0013); //탑승 인원을 선택해 주십시오.
				$('#psng').focus();
				isValidation = false;
				return false;
			}
		}

		return isValidation;
	};

	/* 나이계산기 layer append func */
	var appendAgeCalculator = function appendAgeCalculator() {
		/* layer html 작업 */
		if($('#ageCalc').length == 0){
			var layerHTML = '';
			layerHTML += '<div class="layer_wrap" id="ageCalc">'
						+ '<div class="dim_layer"></div>'
						+ '<div class="layer_pop" style="width:600px;">'
						+ '<div class="pop_cont">'
						+ '<h4>'+jsJSON.J0440+'</h4>'
						+ '<p class="pop_tit st3">'+jsJSON.J0062+'</p>'
						+ '<div class="form_area2">'
						+ '<input type="text" id="txtBirthDate" placeholder="'+jsJSON.J0063+'" title="'+jsJSON.J0443+'" style="width:290px;" maxlength="8" onkeypress="if(event.keyCode==13) {calculateAge(); return false;}">'
						+ '<button type="button" class="btn_minwidth red" onclick="calculateAge();">'+jsJSON.J0444+'</button>'
						+ '</div>'
						+ '<p class="col_red" id="txtAgeCalcResult"></p>'
						+ '</div>'
						+ '<a href="#none" class="dim_close"><span class="hidden">'+jsJSON.J0087+'</span></a>'
						+ '</div>'
						+ '</div>';
			// J0440 : 나이 계산기
			// J0444 : 계산하기
			// J0062 : 계산하고자 하는 어린이의 생년월일을 선택하시면, 유아&#47;소아 유무를 확인하실 수 <br> 있습니다.
			// J0063 : 생년월일 8자리 입력 (예시:19700101)
			// J0443 : 생년월일 8자리
			// J0087 : 닫기
			$('#container').append(layerHTML);
			keyupOnlyNum($("#txtBirthDate"));
		}else{
			$('#txtBirthDate').val('');
			$('#txtAgeCalcResult').html('');
		}

		openLayerPopup('ageCalc', 'btn_ageCalc');
	};

	/* input숫자만 입력 */
	var keyupOnlyNum = function keyupOnlyNum($thisObject) {
		$thisObject.keyup(function(event) {
			event.stopPropagation();

			if (!(event.keyCode >= 37 && event.keyCode <= 40)) {
				var inputVal = $thisObject.val();
				$thisObject.val(inputVal.replace(/[^0-9]/gi, ''));
			}
		});
	};

	/* 나이계산기 나이계산 */
	var calculateAge = function calculateAge() {
		var ageCalResult ="";
		var birthDate = $("#txtBirthDate").val().replace(/[^A-Z0-9-]/g , "");
		var depDate = $("[name=departureDateR]").val();
		var ageCalculateTripType = bookConditionJSON.tripType;
		var ageCalculateDomIntType = setAgeCalculateDomIntType();

		if(birthDate.length != 8){
			alert(jsJSON.J0065); //생년월일을 입력해 주세요.
			return;
		}

		if(depDate == ""){
			depDate = currentDate;
		}

		var age = getAge(birthDate, depDate);

		depDate = depDate.replace(/-/g,"");
		depDate = depDate.substring(0,4)+"."+depDate.substring(4,6)+"."+depDate.substring(6,8);
		$("#txtAgeCalcResult").html("");

		/* 국내선 */
		if(ageCalculateDomIntType == "D"){
			if (age < 2) {
				/* 유아인 경우 */
				ageCalResult = jsJSON.J0066.replace('#0', depDate); //국내선 탑승일 (" + depDate + ") 기준으로 입력한 생년월일은 <strong>유아</strong> 입니다.
			} else if (age >= 2 && age < 13) {
				/* 소아인 경우 */
				ageCalResult = jsJSON.J0067.replace('#0', depDate); //국내선 탑승일 (" + depDate + ") 기준으로 입력한 생년월일은 <strong>소아</strong> 입니다.
			} else {
				/* 성인인 경우 */
				ageCalResult = jsJSON.J0068.replace('#0', depDate); //국내선 탑승일 (" + depDate + ") 기준으로 입력한 생년월일은 <strong>성인</strong> 입니다.
			}

			if(ageCalculateTripType == "RT"){
				depDate = $('[name=arrivalDateR]').val();
				if(depDate == ""){
					depDate = currentDate;
				}
				age = getAge(birthDate, depDate);

				depDate = depDate.replace(/-/g,"");
				depDate = depDate.substring(0,4)+"."+depDate.substring(4,6)+"."+depDate.substring(6,8);

				if (age < 2) {
					/* 유아인 경우 */
					ageCalResult += "<br/>"+jsJSON.J0066.replace('#0', depDate); //국내선 탑승일 (" + depDate + ") 기준으로 입력한 생년월일은 <strong>유아</strong> 입니다.
				} else if (age >= 2 && age < 13) {
					/* 소아인 경우 */
					ageCalResult += "<br/>"+jsJSON.J0067.replace('#0', depDate); //국내선 탑승일 (" + depDate + ") 기준으로 입력한 생년월일은 <strong>소아</strong> 입니다.
				} else {
					/* 성인인 경우 */
					ageCalResult += "<br/>"+jsJSON.J0068.replace('#0', depDate); //국내선 탑승일 (" + depDate + ") 기준으로 입력한 생년월일은 <strong>성인</strong> 입니다.
				}
			}
		}else{ /* 국제선 */
			if (age < 2) {
				/* 유아인 경우 */
				ageCalResult = jsJSON.J0069.replace('#0', depDate); //국제선 탑승일 (" + depDate + ") 기준으로 입력한 생년월일은 <strong>유아</strong> 입니다.

				if(ageCalculateTripType == "RT"){
					depDate = $('[name=arrivalDateR]').val();
					if(depDate == ""){
						depDate = currentDate;
					}
					age = getAge(birthDate, depDate);

					depDate = depDate.replace(/-/g,"");
					depDate = depDate.substring(0,4)+"."+depDate.substring(4,6)+"."+depDate.substring(6,8);
					if (age < 2) {
						/* 유아인 경우 */
						ageCalResult += "<br/>"+jsJSON.J0069.replace('#0', depDate); //국제선 탑승일 (" + depDate + ") 기준으로 입력한 생년월일은 <strong>유아</strong> 입니다.
					} else if (age >= 2 && age < 12) {
						/* 소아인 경우 */
						ageCalResult += "<br/>"+jsJSON.J0070.replace('#0', depDate); //국제선 탑승일 (" + depDate + ") 기준으로 입력한 생년월일은 <strong>소아</strong> 입니다.";
					} else {
						/* 성인인 경우 */
						ageCalResult += "<br/>"+jsJSON.J0452.replace('#0', depDate); //국제선 탑승일 (" + depDate + ") 기준으로 입력한 생년월일은 <strong>성인</strong> 입니다.
					}
				}
			} else if (age >= 2 && age < 12) {
				/* 소아인 경우 */
				ageCalResult = jsJSON.J0070.replace('#0', depDate); //국제선 탑승일 (" + depDate + ") 기준으로 입력한 생년월일은 <strong>소아</strong> 입니다.
			} else {
				/* 성인인 경우 */
				ageCalResult = jsJSON.J0452.replace('#0', depDate); //국제선 탑승일 (" + depDate + ") 기준으로 입력한 생년월일은 <strong>성인</strong> 입니다.
			}
		}

		$("#txtAgeCalcResult").html(ageCalResult);
	};

	/* 나이계산기 domint */
	var setAgeCalculateDomIntType = function setAgeCalculateDomIntType() {
		var ageCalculateTripType = bookConditionJSON.tripType;
		var ageCalculateDomIntType = 'I';
		var depArea1 = $('#departureAreaR').val().toUpperCase();
		var arrArea1 = $('#arrivalAreaR').val().toUpperCase();
		if(depArea1 === 'KR' && arrArea1 === 'KR') {
			ageCalculateDomIntType = 'D';
		}
		return ageCalculateDomIntType;
	};

	/* 여정 초기화 */
	var initItinerary = function initItinerary(type) {
		var $itinerary = $('div[name=itinerary'+type+']');
		$itinerary.find('input[type=hidden]').val('');
		$('#labelDepartureAirport'+type).html(jsJSON.J0005); //출발지
		$('#labelArrivalAirport'+type).html(jsJSON.J0006); //도착지
		$('div[name=spot_place]').show();
		if (type == 'R') {
			if ($("#check").prop('checked') == true) {
				$("#check").trigger('click');
			}
			if ($("#check1").prop('checked') == true) {
				$("#check1").trigger('click');
			}
			if (bookConditionJSON.bizType == 'RED') {
				$('ul[name="selectSeg1CabinClass"]').find('li').removeClass('on');
				$('ul[name="selectSeg1CabinClass"]').find('li a').attr('title', '');
			} else {
				$('ul[name="selectSeg1CabinClass"]').eq(1).find('li').removeClass('on');
				$('ul[name="selectSeg1CabinClass"]').eq(1).find('li a').attr('title', '');
				$('ul[name="selectSeg1CabinClass"]').eq(1).find('li').eq(1).addClass('on');
				$('ul[name="selectSeg1CabinClass"]').eq(1).find('li').eq(1).find('a').attr('title', jsJSON.J0022); //선택됨
			}
			$('#registTravel').removeClass('red').addClass('gray');

			setNoticeInfo();
		} else if (type == 'F') {
			$('#ozNum').val('');
			$('#searchDepArr').removeClass('red').addClass('gray');
		}
	};

	/* 탑승일 초기화 */
	var initDate = function initDate() {
		var $calendar = $('.calendar_wrap');
		$calendar.find('input[type=hidden]').val('');
		$('.calReset').trigger("click");
		$('.compareCalendar').datepicker('destroy');
		$('.compareCalendar').removeAttr('id');
		$('label[for^=sCalendar]').attr('placeholder', jsJSON.J0455); //탑승일
		$('label[for^=sCalendar]').show();
		$('input[id^=sCalendar]').val('');
	};

	// 좌석등급 선택 토글
	var afterSelect = $('#after_select');
	var seatCheckbox = afterSelect.find('input[type="checkbox"]');
	var targetWrap = afterSelect.find('div[name=tabs]')
	var targetTab = afterSelect.find('div[name=tabs] > ul > li');
	var checkType = '';

	var targetTabAct = function targetTabAct() {
		if( checkType = true ){
			targetTab.removeClass('dis');
			var targetTabIndex = targetWrap.eq(0).find('ul li.on').index();
			var targetTabIndex2 = targetWrap.eq(1).find('ul li.on').index();
			targetWrap.eq(0).find('ul').eq(1).find('li').eq(targetTabIndex2).addClass('dis');
			targetWrap.eq(1).find('ul li').eq(targetTabIndex).addClass('dis');
		}
	};

	seatCheckbox.change(function(){
		_checkThis = $(this);
		_checkThisId = _checkThis.attr('id');

		if( _checkThis.is(":checked") ){

			if( _checkThisId === 'check' ){
				afterSelect.find('#check1').prop('disabled', true);
				$('#checkAbled').show();

				targetTab.addClass('dis').removeClass('on');
				targetTab.find('a').attr('title', '');
				targetTab.eq(5).removeClass('dis').addClass('on');
				targetTab.eq(9).removeClass('dis').addClass('on');
				targetTab.eq(5).find('a').attr('title', jsJSON.J0022);
				targetTab.eq(9).find('a').attr('title', jsJSON.J0022);
				
				$("#seat").val( targetTab.eq(5).find('span').text());
				afterSelect.find('.tab_wrap ul li.dis').find('a').attr('tabindex','-1');

				checkType = false;

			}else if( _checkThisId === 'check1' ){
				targetWrap.eq(0).prev('h5[name=cabinH5]').html(jsJSON.J0021); //가는 편
				targetWrap.eq(1).prev('h5[name=cabinH5]').show();
				targetWrap.eq(1).show();

				var targetTabIndex = targetWrap.eq(0).find('ul').eq(1).find('li.on').index();
				var targetTabIndex2 = targetWrap.eq(1).find('ul li.on').index();

				afterSelect.find('#check').prop('disabled', true);
				if( targetTabIndex === targetTabIndex2 ){
					if ( targetTabIndex2 !== 3 ){
						targetWrap.eq(1).find('ul li').removeClass('on');
						targetWrap.eq(1).find('ul li').eq(targetTabIndex2+1).addClass('on');
					}else{
						targetWrap.eq(1).find('ul li').removeClass('on');
						targetWrap.eq(1).find('ul li').eq(0).addClass('on');
					}
				}
				var placeText = '';
				var selectedClass = '';
				$('.revCabinClass').find('li a').attr('title', '');
				$('.revCabinClass').find('li').each(function(){
					if ($(this).hasClass('on')) {
						$(this).find('a').attr('title', jsJSON.J0022);
						if (placeText != '') {
							placeText += ', '+ $(this).find('span').text();
							selectedClass += $(this).find('a').attr('cabinClass');
						} else {
							placeText = $(this).find('span').text();
							selectedClass = $(this).find('a').attr('cabinClass');
						}
					}
				});
				if (selectedClass == 'RE') {
					placeText = jsJSON.J0605;//'이코노미 특가, 일반';
				} else if (selectedClass == 'RB') {
					placeText = jsJSON.J0606;//'이코노미 특가, 비즈니스';
				} else if (selectedClass == 'RF') {
					placeText = jsJSON.J0607;//'이코노미 특가, 퍼스트';
				} else if (selectedClass == 'ER') {
					placeText = jsJSON.J0608;//'이코노미 일반, 특가';
				} else if (selectedClass == 'EB') {
					placeText = jsJSON.J0609;//'이코노미 일반, 비즈니스';
				} else if (selectedClass == 'EF') {
					placeText = jsJSON.J0610;//'이코노미 일반, 퍼스트';
				} else if (selectedClass == 'BR') {
					placeText = jsJSON.J0611;//'비즈니스, 이코노미 특가';
				} else if (selectedClass == 'BE') {
					placeText = jsJSON.J0612;//'비즈니스, 이코노미 일반';
				} else if (selectedClass == 'BF') {
					placeText = jsJSON.J0613;//'비즈니스, 퍼스트';
				} else if (selectedClass == 'FR') {
					placeText = jsJSON.J0614;//'퍼스트, 이코노미 특가';
				} else if (selectedClass == 'FE') {
					placeText = jsJSON.J0615;//'퍼스트, 이코노미 일반';
				} else if (selectedClass == 'FB') {
					placeText = jsJSON.J0616;//'퍼스트, 비즈니스';
				}
				$("#seat").val(placeText);
				placeText = '';

				targetTabAct();
			};
		} else {
			targetWrap.eq(0).prev('h5[name=cabinH5]').html(jsJSON.J0457); //출도착 편
			targetWrap.eq(1).prev('h5[name=cabinH5]').hide();
			targetWrap.eq(1).hide();
			targetWrap.eq(1).find('ul > li > a').attr('title', '');

			$('#checkAbled').hide();
			seatCheckbox.prop('disabled', false);
			targetTab.removeClass('dis').find('a').removeAttr('tabindex');
			$("#seat").val(targetWrap.eq(0).find('ul li.on span').text());
			checkType = false;
		};

		if( checkType == true ){
			targetTab.find('a').on('click', function(e){
				if ( $('#check1').is(":checked") ){
					targetTabAct();
				}else{
					e.preventDefault();
				}
			});
		}
	});

	/* 항공권 조회, validation 체크 후 쿠폰 레이어 오픈 */
	var registTravelV = function registTravelV() {

		action_logging({pagecode:'01_Book_03'});
		
		/*예매 메뉴 제한 관리*/
		if(!bookingMenuRestriction('QM')) {
			return;
		}
		
		if(bookConditionJSON.domIntType == "D") {
			if($('#loginUserAge').val() >= 2 && $('#loginUserAge').val() < 13) {
				alert(jsJSON.J0250);//로그인하신 회원이 소아 일 경우에는 예약 진행이 불가합니다. \n예약센터로 문의하시기 바랍니다.
				return;
			}
		}else {
			if($('#loginUserAge').val() >= 2 && $('#loginUserAge').val() < 12) {
				alert(jsJSON.J0250);//로그인하신 회원이 소아 일 경우에는 예약 진행이 불가합니다. \n예약센터로 문의하시기 바랍니다.
				return;
			}
		}
		
		/* 로그인 회원이 유아일 경우 예매 진행 불가 */
		if ($('#loginUserAge').val() < 2) {
			alert(jsJSON.J0458.replace('\b', '\n')); //로그인하신 회원이 유아 일 경우에는 예약 진행이 불가합니다. \b예약센터로 문의하시기 바랍니다.
			return;
		}

		/* 여정 input validation */
		if(!segInputValidation()) {
			return;
		}

		/* 여정 validation */
		if(!segValidation()){
			return;
		}

		/* 명절 예매 제어 */
		if(!holidayRestriction()) {
			return;
		}

		/* 중국 발 +2 일 제어*/
		if(($('#departureAreaR').val() == 'CN' || $('#departureAreaR').val() == 'CE') && getDifferentTime(getCurrentDate(), $('[name=departureDateR]').val(), 'DAY') < 2) {
			alert(jsJSON.J0490);//중국 출발의 경우 오늘 +2일부터 출발일 예약 가능합니다.
			return;
		}
		
		/* 판매구간 확장 제어 */
		if(!bookingRestriction()) {
			return;
		}
		
		/* 여정의 직항/비직항 여부 판단 */
		/*if(!checkDirectItinerary()) {
			return;
		}*/

		/* 탑승자  validation */
		if(!paxValidation('final')) {
			return;
		}

		/* 좌석등급 validation */
		if(!cabinClassValidation()) {
			alert(jsJSON.J0408); //좌석등급을 선택해주세요.
			$('#seat').focus();
			return;
		}

		var domIntType	= bookConditionJSON.domIntType,
			tripType	= bookConditionJSON.tripType;


		/* 소아단독발권 Check*/
		if(!childOnlyCheck()) {
			return;
		}

		/*
		; 쿠폰 적용
		; 출도착편 다른 좌석등급 선택 시 쿠폰 미적용
		*/
		if(bookConditionJSON.bizType == "REV"){
			if(!$('input[id="check1"]').is(':checked')) {
				if(!getLsLayer('coupon_layer')) {
					getOnlineCoupon();
					return;
				}
			}
			/* 특정노선 Check*/
			if(noticeOpenLayer()){
				/* 항공편 선택 페이지로 이동 */
				toFlightsSelect();
			} else {
				return;
			}
		} else {
			if(userAcno != "") {
				if(!getLsLayer('coupon_layer')) {
					getBonusCoupon();
					return;
				}
			}
			if(!noticeOpenLayer()){
				return;
			}
			openLayerPopup('mileageInfo', 'registTravel');
		}
	};

	/* 오늘 하루 이 창을 열지 않기 [닫기], 00:00:00 까지 로컬스토리지 설정 */
	var setLsAt00 = function setLsAt00(name, expiredays) {
		var todayDate = new Date();
		todayDate = new Date(parseInt(todayDate.getTime() / 86400000) * 86400000 + 54000000);
		if(todayDate > new Date()) {
			expiredays = expiredays - 1;
		}
		todayDate.setDate(todayDate.getDate() + expiredays);
		localStorage.setItem(name, parseInt(todayDate.getTime()));
	};

	/* seg input validation */
	var segInputValidation = function segInputValidation() {

		var isValidation	= true,
			$itinerary		= $('div[name=itinerary]'),
			segLength		= $itinerary.length,
			tripType		= bookConditionJSON.tripType;

		var depAirport	= $('#departureAirportR').val(),
			arrAirport	= $('#arrivalAirportR').val(),
			depDate		= $('[name=departureDateR]').val(),
			arrDate		= $('[name=arrivalDateR]').val();

		if(depAirport == '') {
			alert(jsJSON.J0410); //출발지를 입력해주세요.
			$('#departureAirportR').focus();
			isValidation = false;
			return false;
		}
		if(arrAirport == ''){
			alert(jsJSON.J0031); //도착지를 입력해주세요.
			$('#arrivalAirportR').focus();
			isValidation = false;
			return false;
		}
		if(depDate == ''){
			alert(jsJSON.J0463); //가는 날짜를 선택하여 주십시오.
			$('#sCalendarR').focus();
			isValidation = false;
			return false;
		}
		if(tripType == 'RT') {
			if(arrDate == ''){
				alert(jsJSON.J0464); //오는 날짜를 선택하여 주십시오.
				$('#sCalendarR').focus();
				isValidation = false;
				return false;
			}
		}

		return isValidation;
	};

	/* 여정 validation */
	var segValidation = function segValidation() {

		var isValidation	= true,
			tripType		= bookConditionJSON.tripType;
			domIntType		= bookConditionJSON.domIntType;

		var depArea	= $('#departureAreaR').val(),
			arrArea	= $('#arrivalAreaR').val();
		if(depArea == 'KR' && arrArea == 'KR') {
			domIntType = 'D';
		}else{
			domIntType = 'I';
		}
		bookConditionJSON.domIntType = domIntType;

		return isValidation;
	};

	/* 좌석등급 Validation */
	var cabinClassValidation = function cabinClassValidation(point) {
		var isValidation = false;

		if(bookConditionJSON.domIntType == "D"){
			return true;
		}else{
			if ($('#seat').val() != '') {
				return true;
			}
		}

		return isValidation;
	};
	
	/*
	* 명절 예매 제어
	* */
	var holidayRestriction = function holidayRestriction() {
		var isValidation = true;
		
		if(bookConditionJSON.domIntType == 'D') {
			if(bookConditionJSON.bizType == 'REV') {
				
				var currentTime = Number(getCurrentTime());
				
				// 추석 임시편 오픈 관련하여 소아 포함 총 6인 경우에만 다음 단계가 되어야함
				// 노선 별 출발일 기준으로 제어
				if(currentTime >= 20180911140000 && currentTime <= 20180911143000) { // 매년 날짜변경 필요함
					
					var adultCnt = $('#adultCount').val(),
						childCnt = $('#childCount').val(),
						adtChdCnt = Number(adultCnt) + Number(childCnt);
					
					var checkPaxCnt = function checkPaxCnt() {
						if(adtChdCnt > 6) {
							alert(jsJSON.J0136.replace(/#0/, getCurrentDate().substring(0, 4)));//#0년 추석 임시편 예약으로 인하여 국내선 전 편 최대 6명까지만 예약 가능합니다.\n탑승인원을 다시 한번 선택하여 주시기 바랍니다.
							isValidation = false;
						}
					};
					
					if(($('#departureAirportR').val() == 'GMP' && $('#arrivalAirportR').val() == 'CJU') ||
							($('#departureAirportR').val() == 'CJU' && $('#arrivalAirportR').val() == 'GMP')) {
						
						if(bookConditionJSON.tripType == 'RT' ) {
							if((Number($('#departureDate1').val()) >= 20180922 && Number($('#departureDate1').val()) <= 20180927) ||
									(Number($('#arrivalDate1').val()) >= 20180922 && Number($('#arrivalDate1').val()) <= 20180927)) { // 매년 날짜변경 필요함
								checkPaxCnt();
							}
						}else {
							if((Number($('#departureDate1').val()) >= 20180922 && Number($('#departureDate1').val()) <= 20180927)) { // 매년 날짜변경 필요함
								checkPaxCnt();
							}
						}
						
					}
					
				}
				
				// 설날 임시편, to do 유지보수때 처리
			}
		}
		
		return isValidation
	};

	/*
	* 예매 메뉴 제한 관리
	* */
	var bookingMenuRestriction = function bookingMenuRestriction(contScope) {
		var isValidation = true;
		
		$.ajax({
			async: false,
			url: '/I/'+countryCode+'/'+languageCode+'/BookingMenuRestriction.do',
			type: 'post',
			dataType: 'json',
			data: {
				controlScope	: contScope
			},
			success : function(data) {
				var result = data.result,
					rLength = result.length,
					restrictionData;

			if(rLength > 0) {
				var noti = true,
					notiMsg = '';
					blockMsg = '';

				for(var i=0; i<rLength; i++) {
					restrictionData = result[i];

					if(restrictionData.CONT_FLG == '02') { // 공지 후 종료
						noti = false;
						blockMsg = restrictionData.CONTENTS;
						break;
					}else { // CONT_FLG == '01', 공지 후 진행
						notiMsg = restrictionData.CONTENTS;
						break;
					}
				}

				if(noti) { // 알림
					alert(notiMsg);
				}else { // 예매 불가
					alert(blockMsg);
					isValidation = false;
				}

			}
			},
			error: function(data) {
				alert(JSON.parse(data.responseText).exceptionInfo.message);
				isValidation = false;
			},
			complete: function() {
				checkSSOSessionExtension();
			}
		});

		return isValidation;
	};

	/* 판매제한 */
	var bookingRestriction = function bookingRestriction() {
		var isValidation = true;
		var resTripType		= bookConditionJSON.tripType,
			resBizType		= bookConditionJSON.bizType,
			segDatas		= [],
			segData			= {};

		var depArea		= $('#departureAreaR').val(),
			depAirport	= $('#departureAirportR').val(),
			arrArea		= $('#arrivalAreaR').val(),
			arrAirport	= $('#arrivalAirportR').val(),
			depDate		= $('[name=departureDateR]').val();

		segData = {};
		segData.depArea		= depArea;
		segData.depAirport	= depAirport;
		segData.arrArea		= arrArea;
		segData.arrAirport	= arrAirport;
		segData.depDate		= depDate;

		segDatas[0] = segData;
		
		var cabinDatas = [];
		
		if(bookConditionJSON.domIntType == 'I') {
			if(resBizType == 'REV') {
				$('[name=selectSeg1CabinClass]').eq(1).find('li').each(function() {
					var _this = $(this);
					var _thisTab = $(this).children("a");
					if(_this.hasClass('on')){
						cabinDatas.push(_thisTab.attr('cabinClass'));
					}
				});
				
				if($('input[id="check1"]').is(":checked")) {
					$('[name=selectSeg2CabinClass] li').each(function() {
						var _this = $(this);
						if(_this.hasClass('on')){
							cabinDatas.push(_this.children("a").attr('cabinClass'));
						}
					});
				}
			}else {
				$('[name=selectSeg1CabinClass]').eq(0).find('li').each(function() {
					var _this = $(this);
					var _thisTab = $(this).children("a");
					if(_this.hasClass('on')){
						if(_thisTab.attr('cabinClass') == "A"){
							cabinDatas = ['E', 'B', 'F'];
							return false;
						}else {
							cabinDatas.push(_thisTab.attr('cabinClass'));
						}
					}
				});
			}
		}else {
			cabinDatas.push('E');
		}

		$.ajax({
			async: false,
			url: '/I/'+countryCode+'/'+languageCode+'/BookingRestriction.do',
			type: 'post',
			dataType: 'json',
			data: {
				segDatas	: JSON.stringify(segDatas),
				tripType	: resTripType,
				bizType		: resBizType,
				cabinDatas	: JSON.stringify(cabinDatas)
			},
			success : function(data) {
				var result = data.result,
				rLength = result.length,
				restrictionData;

				if(rLength > 0) {
					var noti = true,
						notiMsg = '';
						blockMsg = '';

					for(var i=0; i<rLength; i++) {
						restrictionData = result[i];

						if(restrictionData.CONTROL_TYPE == 'N') {
							noti = false;
							blockMsg = restrictionData.CHRCTR_NM;
							break;
						}else {
							notiMsg = restrictionData.CHRCTR_NM;
							break;
						}
					}

					if(noti) { // 알림
						alert(notiMsg);
					}else { // 예매 불가
						alert(blockMsg);
						isValidation = false;
					}

				}
			},
			error: function(data) {
				alert(JSON.parse(data.responseText).exceptionInfo.message);
				isValidation = false;
			}
		});

		return isValidation;
	};

	/* 소아단독발권 Check */
	var childOnlyCheck = function childOnlyCheck() {
		var isValidation = true,
			adtCnt = parseInt($('#adultCount').val()),
			chdCnt = parseInt($('#childCount').val()),
			infCnt = parseInt($('#infantCount').val()),
			totalCnt = adtCnt + chdCnt + infCnt;

		if(adtCnt == 0 && chdCnt > 0 && infCnt == 0) {
			viewChildTicketing();

			callBackFunction = function(data) {
				if(data.parentPnrAlpha) {

					isChildOnly = true;
					childParentPnrAlpha = data.parentPnrAlpha;

					$('#noAdultClose').click();

					if(bookConditionJSON.bizType == "REV"){
						/*seg 수 3 이상 부터 쿠폰 미적용
						   출도착편 다른 좌석등급 선택 시 쿠폰 미적용*/
						var tripType = bookConditionJSON.tripType;
						if(!$('input[id="check1"]').is(':checked')) {
							if(!getLsLayer('coupon_layer')) {
								getOnlineCoupon();
								return;
							}
						}

						/* 특정노선 Check */
						if(noticeOpenLayer()){
							toFlightsSelect();
						}
					}else{
						/*seg 수 3 이상 부터 쿠폰 미적용
						   출도착편 다른 좌석등급 선택 시 쿠폰 미적용*/
						var tripType = $('#tripType').val();
						if(userAcno != "") {
							if(!getLsLayer('coupon_layer')) {
								getBonusCoupon();
								return;
							}
						}

						/* 특정노선 Check */
						if(noticeOpenLayer()){
							openLayerPopup('mileageInfo', 'registTravel');
						}
					}

				}else {
					alert(jsJSON.J0014); //일치하는 예약번호가 없습니다.
				}
			};

			isValidation = false;
			return false;
		}
		return isValidation;
	};

	/* 소아 단독 발권 layer */
	var viewChildTicketing = function viewChildTicketing() {

		if($('#noAdult').length == 0) {
			$.ajax({
				async: false,
				url: '/I/'+countryCode+'/'+languageCode+'/ViewChildTicketing.do',
				type: 'post',
				dataType: 'html',
				success : function(data) {
					$('#container').append(data);
					openLayerPopup('noAdult', 'registTravel');
				},
				error: function(data) {
					alert(JSON.parse(data.responseText).exceptionInfo.message);
				}
			});
		}else {
			openLayerPopup('noAdult', 'registTravel');
		}

	};
	/* 소아 단독 발권 */
	var childTicketing = function childTicketing() {
		var $inputPnr	= $('#chdBookingPnr'),
			$inputEName	= $('#chdBookingEName'),
			pnr			= $inputPnr.val(),
			eName		= $inputEName.val(),
			segLength	= $('div[name=itineraryR]').length,
			segDatas	= [],
			segData,
			pBizType;

		if(typeof bookConditionJSON != 'undefined' && typeof $('#bizType').val() == 'undefined'){
			pBizType = bookConditionJSON.bizType;
			segLength = bookConditionJSON.segmentConditionDatas.length;
		}else {
			pBizType = $('#bizType').val();
		}

		if(pnr == '') {
			alert(jsJSON.J0029); //예약번호를 입력해 주십시오.
			$inputPnr.focus();
			return false;
		}
		if(eName == '') {
			alert(jsJSON.J0467); //성(영문)을 입력해 주십시오.
			$inputEName.focus();
			return false;
		}

		for(var i=0; i<segLength; i++) {
			var segData = {};
			segData.departureAirport	= $('#departureAirportR').val();
			segData.arrivalAirport		= $('#arrivalAirportR').val();
			segData.departureDate		= $('[name=departureDateR]').val();
			segData.departureArea		= $('#departureAreaR').val();
			segData.departureCity		= $('#departureCityR').val();
			segDatas[i] = segData;
		}

		if('RT' == bookConditionJSON.tripType) {
			segData = {};
			segData.departureAirport	= $('#arrivalAirportR').val();
			segData.arrivalAirport		= $('#departureAirportR').val();
			segData.departureDate		= $('[name=arrivalDateR]').val();
			segDatas[1] = segData;
		}

		$.ajax({
			async: true,
			url: '/I/'+countryCode+'/'+languageCode+'/ChildTicketing.do',
			type: 'post',
			dataType: 'json',
			data: {
				bizType		: pBizType,
				segDatas	: JSON.stringify(segDatas),
				pnr			: pnr,
				lastName	: eName
			},
			beforeSend : function() {
				loadingOpen('entire');
			},
			success: function(data) {
				loadingClose('entire');
				callBackFunction(data);
			},
			error: function(data) {
				loadingClose('entire');
				alert(JSON.parse(data.responseText).exceptionInfo.message);
			}
		});
	};
	
	/* 여정의 직항/비직항 여부 판단 */
	var checkDirectItinerary = function checkDirectItinerary() {
		var isValidation = true,
			_tripType = bookConditionJSON.tripType;
		
		if(bookConditionJSON.domIntType == 'I') {
			var	currentDate = getCurrentDate(),
				_desc = jsJSON.J0485; //J0485 : 아시아나항공 비직항 구간 (#0) 의 여정은 출발(가는 날) 3일 전까지만 예약하실 수 있습니다.
			
			if($('#arrivalDirectR').val() == 'N') {
				var	differentDate = getDifferentTime(currentDate, $('[name="departureDateR"]').val(), 'DAY');
				
				if(differentDate < 3) {
					var depTxt = $('#labelDepartureAirportR').children().eq(2).html(),
						arrTxt = $('#labelArrivalAirportR').children().eq(2).html();
					
					alert(_desc.replace(/#0/gi, depTxt+'-'+arrTxt));
					isValidation = false;
				}
			}
		}
		
		return isValidation;
	};

	/* 특정 노선 안내 레이어 오픈 */
	var noticeOpenLayer = function noticeOpenLayer() {
		var isValidation = true,
			itineraryLength = $('div[name=itineraryR]').length;
		
		var isUS = false;
		var isPH = false;
		var isAU = false;
		var isAU2 = false;
		
		var initdocLayer = document.getElementById("btnExpCase");
		initdocLayer.setAttribute("onclick", "javascript:afterExpCase($(this));");					
		initdocLayer = document.getElementById("btnPhlCase");
		initdocLayer.setAttribute("onclick", "javascript:afterExpCase($(this));");
		
		if(bookConditionJSON.domIntType == 'D') {
			openLayerPopup('domPopup', 'registTravel');
			isValidation = false;
			return false;
		} else {
			for(var i=0; i<itineraryLength; i++) {
				var depAirport	= $('#departureAirportR').val(),
					arrAirport	= $('#arrivalAirportR').val(),
					depArea		= $('#departureAreaR').val(),
					arrArea		= $('#arrivalAreaR').val();

				if(depArea.match(/^US|MX$/) || depAirport.match(/^LIM|SPN|GUM$/) ||
						arrArea.match(/^US|MX$/) || arrAirport.match(/^LIM|SPN|GUM$/)) {
					isUS = true;
				}
				
				if(depAirport.match(/^MNL|CRK|CEB$/) || arrAirport.match(/^MNL|CRK|CEB$/)) {
					isPH = true;
				}

				if(	arrArea.match(/^AU$/)) {	
					isAU = true;
					if(!(countryCode.toUpperCase() == 'KR' && languageCode.toUpperCase() == 'KO')) {
						isAU2 = true;
					} 
				}
			}
				
			if(isUS && isPH && !isAU) {
				openLayerPopup('expCase', 'registTravel');
				var docLayer = document.getElementById("btnExpCase");
				docLayer.setAttribute("onclick", "javascript:$(this).prev().trigger('click');openLayerPopup('phlCase', 'registTravel');");					
			} else if(isUS && !isPH && isAU) {
				openLayerPopup('expCase', 'registTravel');
				var docLayer = document.getElementById("btnExpCase");
				if(isAU2) {
					docLayer.setAttribute("onclick", "javascript:$(this).prev().trigger('click');openLayerPopup('auCase2', 'registTravel');");					
				} else {
					docLayer.setAttribute("onclick", "javascript:$(this).prev().trigger('click');openLayerPopup('auCase', 'registTravel');");					
				}
			} else if(!isUS && isPH && isAU) {
				openLayerPopup('phlCase', 'registTravel');
				var docLayer = document.getElementById("btnPhlCase");
				if(isAU2) {
					docLayer.setAttribute("onclick", "javascript:$(this).prev().trigger('click');openLayerPopup('auCase2', 'registTravel');");					
				} else {
					docLayer.setAttribute("onclick", "javascript:$(this).prev().trigger('click');openLayerPopup('auCase', 'registTravel');");					
				}
			} else if(isUS && !isPH && !isAU) {
				openLayerPopup('expCase', 'registTravel');
			} else if(!isUS && isPH && !isAU) {
				openLayerPopup('phlCase', 'registTravel');
			}  else if(!isUS && !isPH && isAU) {
				if(isAU2) {
					openLayerPopup('auCase2', 'registTravel');
				} else {
					openLayerPopup('auCase', 'registTravel');
				}
			}  
			
			if(isUS||isAU||isPH) {
				isValidation = false;
				return false;
			}
		}

		return isValidation;
	};

	/* 항공편 선택 페이지로 이동 */
	var toFlightsSelect = function toFlightsSelect() {

		generateUUID('regist');

		var domIntType	= bookConditionJSON.domIntType,
			tripType	= bookConditionJSON.tripType,
			bizType		= bookConditionJSON.bizType;

		/* 여정정보를 통하여 jsonObject - bookConditionData 를 생성한다. */
		makeBookConditionData(bizType, domIntType, tripType);
		
		// AS-IS
		if($('#childCount').val() > 0 || $('#infantCount').val() > 0) {
			alert(jsJSON.J0459);
			//유아/소아를 동반하는 보호자는 항공편 탑승 시 부모 또는 만 18세 이상의 성인만 가능합니다.만 18세 미만의 성인과 동반하는 소아는 예약센터에 문의하시기 바랍니다.일부 인터넷 특가 운임의 경우 소아할인 적용이 불가할 수 있으므로 선택하신 운임규정을 확인하시기 바랍니다.
		}

		if(domIntType == 'D') {
			// AS-IS
			if($('#childCount').val() > 0 || $('#infantCount').val() > 0) {
				alert(jsJSON.J0460); //소아/유아 탑승시 여행 당일 공항에서 나이를 확인 할 수 있는 서류(의료보험증, 주민등록등본, 여권 중 택일)를 지참하시기 바랍니다
			}
		}
		
		var actionId = 'P_SCH_NOR';
		var skinId = 'basic';
		var serviceId = 'service_1';
		NetFunnel_Action({service_id : serviceId, skin_id : skinId, action_id : actionId}, {
			success : function(ev, ret) {
				NetFunnel.custom.setCookie(actionId);
				
				if(bizType == "REV"){
					if(domIntType == 'D'){
						$('#registTravelForm').attr({'onsubmit' : 'return true',
														'action' : '/I/'+countryCode+'/'+languageCode+'/RevenueDomesticFlightsSelect.do'}).submit();
					}else{
						$('#registTravelForm').attr({'onsubmit' : 'return true',
							'action' : '/I/'+countryCode+'/'+languageCode+'/RevenueInternationalFareDrivenFlightsSelect.do'}).submit();
					}
				}else{
					if(domIntType == 'D'){
						$('#registTravelForm').attr({'onsubmit' : 'return true',
							'action' : '/I/'+countryCode+'/'+languageCode+'/RedemptionDomesticFlightsSelect.do'}).submit();
					}else{
						$('#registTravelForm').attr({'onsubmit' : 'return true',
							'action' : '/I/'+countryCode+'/'+languageCode+'/RedemptionInternationalFlightsSelect.do'}).submit();
					}
				}
		
				loadingOpen('entire');
				extivateAfterSubmit();
			}
		});
	};

	function extivateAfterSubmit() {
		/* submit 날린 후 탑승객 0명으로 초기화 */
		$('#adultCount, #childCount, #infantCount').val('0').trigger('keyup');
		$('#adultCount').val('1').trigger('keyup');
		/* 마일리지 사용 checkbox 초기화 */
		if ($('#allChecked').is(':checked')) {
			$('.mile_use input:checkbox').trigger('click');
		}
		if($('input[id="check1"]').is(':checked')) {
			$('input[id="check1"]').trigger('click');
		}
		if($('input[id="check"]').is(':checked')) {
			$('input[id="check"]').trigger('click');
		}
		/* 좌석등급 초기화 */
		$('#seat').val('');
	}

	/* 여정정보를 통하여 jsonObject - bookConditionData 를 생성한다. */
	var makeBookConditionData = function makeBookConditionData(bizType, domIntType, tripType) {

		var bookConditionData = new bookConditionDataObject();
		bookConditionData.bizType					= bizType;
		bookConditionData.tripType					= tripType;
		bookConditionData.domIntType				= domIntType;

		var userData = new userDataObject();
		userData.acno = userAcno;
		if(typeof familyMemberCount != 'undefined'){
			userData.familyNumber =  familyMemberCount;
		}
		bookConditionData.userData = userData;

		if(typeof $("#check1").val() != undefined) {
			bookConditionData.mixedBoadingLevel = $("#check1").is(":checked");
		}

		var segmentConditionDatas = [];
		if(bookConditionData.tripType == 'RT') {
			var segmentData1 = new segmentConditionDatasObject();
			segmentData1.departureArea			= $('#departureAreaR').val();
			segmentData1.departureAirport		= $('#departureAirportR').val();
			segmentData1.departureAirportName	= $('#labelDepartureAirportR').children().eq(2).html();
			segmentData1.departureCity			= $('#departureCityR').val();
			segmentData1.departureCityName		= $('#departureCityNameR').val();
			segmentData1.departureDateTime		= $('[name=departureDateR]').val() + "0000";
			segmentData1.arrivalArea			= $('#arrivalAreaR').val();
			segmentData1.arrivalAirport			= $('#arrivalAirportR').val();
			segmentData1.arrivalAirportName		= $('#labelArrivalAirportR').children().eq(2).html();
			segmentData1.arrivalCity			= $('#arrivalCityR').val();
			segmentData1.arrivalCityName		= $('#arrivalCityNameR').val();
			if(typeof staticCabinClassList !='undefined'){//고정적인 cabinClassList가 있을경우
				segmentData1.cabinClassList = staticCabinClassList;
			}else if(domIntType != 'D') {
				var seg1cabinClassList = [];
				var classEachType = '[name=selectSeg1CabinClass].revCabinClass li';
				if(bizType == "RED") {
					classEachType = '[name=selectSeg1CabinClass].redCabinClass li';
				}
				$(classEachType).each(function() {
					var _this = $(this);
					var _thisTab = $(this).children("a");
					if(_thisTab.attr("name") != "cabinClassAll" && _this.hasClass('on')){
						seg1cabinClassList.push(_thisTab.attr('cabinClass'));

						if(bookConditionData.bizType == "RED" && _thisTab.attr('cabinClass') == "E"){
							seg1cabinClassList.push("R");
						}
					}
				});

				segmentData1.cabinClassList			= seg1cabinClassList;
			}else{
				if (bookConditionData.bizType == 'RED') {
					segmentData1.cabinClassList			= ["R","E"];
				} else {
					segmentData1.cabinClassList			= ["E"];
				}
			}

			segmentConditionDatas.push(segmentData1);

			var segmentData2 = new segmentConditionDatasObject();
			segmentData2.departureArea			= $('#arrivalAreaR').val();
			segmentData2.departureAirport		= $('#arrivalAirportR').val();
			segmentData2.departureAirportName	= $('#labelArrivalAirportR').children().eq(2).html();
			segmentData2.departureCity			= $('#arrivalCityR').val();
			segmentData2.departureCityName		= $('#arrivalCityNameR').val();
			segmentData2.departureDateTime		=  $('[name=arrivalDateR]').val() + "0000";

			segmentData2.arrivalArea			= $('#departureAreaR').val();
			segmentData2.arrivalAirport			= $('#departureAirportR').val();
			segmentData2.arrivalAirportName		= $('#labelDepartureAirportR').children().eq(2).html();
			segmentData2.arrivalCity			= $('#departureCityR').val();
			segmentData2.arrivalCityName		= $('#departureCityNameR').val();

			if(typeof staticCabinClassList !='undefined'){/* 고정적인 cabinClassList가 있을경우 */
				segmentData2.cabinClassList = staticCabinClassList;
			}else if(domIntType != 'D') {
				var seg2cabinClassList = [];

				if($('input[id="check1"]').is(":checked")) {
					$('[name=selectSeg2CabinClass] li').each(function() {
						var _this = $(this);
						if(_this.hasClass('on')){
							seg2cabinClassList.push(_this.children("a").attr('cabinClass'));
							if(bookConditionData.bizType == "RED" && _this.children("a").attr('cabinClass') == "E"){
								seg2cabinClassList.push("R");
							}
						}
					});
					segmentData2.cabinClassList			= seg2cabinClassList;
				}else{
					segmentData2.cabinClassList			= seg1cabinClassList;
				}
			}else{
				if (bookConditionData.bizType == 'RED') {
					segmentData2.cabinClassList			= ["R","E"];
				} else {
					segmentData2.cabinClassList			= ["E"];
				}
			}

			segmentConditionDatas.push(segmentData2);

		}else if(bookConditionData.tripType == 'OW') {
			var segmentData1 = new segmentConditionDatasObject();
			segmentData1.departureArea			= $('#departureAreaR').val();
			segmentData1.departureAirport		= $('#departureAirportR').val();
			segmentData1.departureAirportName	= $('#labelDepartureAirportR').children().eq(2).html();
			segmentData1.departureCity			= $('#departureCityR').val();
			segmentData1.departureCityName		= $('#departureCityNameR').val();
			segmentData1.departureDateTime		= $('[name=departureDateR]').val() + "0000";
			segmentData1.arrivalArea			= $('#arrivalAreaR').val();
			segmentData1.arrivalAirport			= $('#arrivalAirportR').val();
			segmentData1.arrivalAirportName		= $('#labelArrivalAirportR').children().eq(2).html();
			segmentData1.arrivalCity			= $('#arrivalCityR').val();
			segmentData1.arrivalCityName		= $('#arrivalCityNameR').val();

			if(domIntType != 'D') {
				var seg1cabinClassList = [];
				var classEachType = '[name=selectSeg1CabinClass].revCabinClass li';
				if(bizType == "RED") {
					classEachType = '[name=selectSeg1CabinClass].redCabinClass li';
				}
				$(classEachType).each(function() {
					var _this = $(this);
					var _thisTab = $(this).children("a");
					if(_thisTab.attr("name") != "cabinClassAll" && _this.hasClass('on')){
						seg1cabinClassList.push(_thisTab.attr('cabinClass'));

						if(bookConditionData.bizType == "RED" && _this.children("a").attr('cabinClass') == "E"){
							seg1cabinClassList.push("R");
						}
					}
				});

				segmentData1.cabinClassList			= seg1cabinClassList;
			}else{
				if (bookConditionData.bizType == 'RED') {
					segmentData1.cabinClassList			= ["R","E"];
				} else {
					segmentData1.cabinClassList			= ["E"];
				}
			}

			segmentConditionDatas.push(segmentData1);
		}
		bookConditionData.segmentConditionDatas		= segmentConditionDatas;

		if(userAcno != '' && $('#couponCode').val() != '') {
			var onlineCouponData = new onlineCouponDataObject();
			onlineCouponData.serviceType	= $('#serviceType').val();
			onlineCouponData.couponCode		= $('#couponCode').val();
			onlineCouponData.eventName		= $('#eventName').val();
			onlineCouponData.corporateCode	= $('#corporateCode').val();
			onlineCouponData.discount		= $('#discount').val();

			bookConditionData.onlineCouponData = onlineCouponData;
		}

		var passengerConditionDatas	= [];
		var	adultCount,
			childCount,
			infantCount;

		adultCount	= $('#adultCount').val();
		childCount	= $('#childCount').val();
		infantCount	= $('#infantCount').val();

		if(adultCount > 0) {
			for(var i=0; i<adultCount; i++) {
				var passengerConditionData = new passengerConditionDatasObject();
				passengerConditionData.passengerType = 'ADT';
				passengerConditionData.passengerTypeDesc = adultDesc;
				passengerConditionDatas.push(passengerConditionData);
			}
		}
		if(childCount > 0) {
			for(var i=0; i<childCount; i++) {
				var passengerConditionData = new passengerConditionDatasObject();
				passengerConditionData.passengerType = 'CHD';
				passengerConditionData.passengerTypeDesc = childDesc;
				passengerConditionDatas.push(passengerConditionData);
			}
		}
		if(infantCount > 0) {
			for(var i=0; i<infantCount; i++) {
				var passengerConditionData = new passengerConditionDatasObject();
				passengerConditionData.passengerType = 'INF';
				passengerConditionData.passengerTypeDesc = infantDesc;
				passengerConditionDatas.push(passengerConditionData);
			}
		}

		bookConditionData.passengerConditionDatas 		= passengerConditionDatas;

		var searchCurrency;

		if($('#departureAreaR').val() == 'CN' && bookConditionJSON.bizType != "RED") {
			searchCurrency = $('#currency').val();
		}else{
			searchCurrency = '';
		}

		if(typeof tgEventCFF != 'undefined') {
			bookConditionData.eventCFF = tgEventCFF;
		}
		bookConditionData.searchCurrency			= searchCurrency;
		bookConditionData.childOnly					= isChildOnly;
		bookConditionData.parentPnrAlpha			= childParentPnrAlpha;
		bookConditionData.mobileFlag				= false;
		if($('#check').is(':checked')){
			bookConditionData.onlyUpgradeSearch			= true;
		}
		$('#bookConditionData').val(JSON.stringify(bookConditionData));
	};

	var asi = [];
	$('.tooltip_wrap').each(function(i){
		var tlpClose = $(this).find('.tooltip_close');
		var tlpBtn = $(this).find('.btn_info');
		var tlpLayers = $('.layer_tooltip');
		tlpBtn.on('click', function(){
			var openTlp = tlpBtn.next('.layer_tooltip');
			tlpLayers.hide();
			openTlp.show();
		});
		tlpBtn.index = i
		asi.push(tlpBtn);
	});

	// 레이어 닫기 / 툴팁
	$('.tooltip_close').each(function(){
		$(this).on('click', function(){
			var thisLayerPop = $(this).parent('div');
			thisLayerPop.hide();
			thisLayerPop.prev('a').focus();
		});
	});

	/* 온라인 쿠폰 조회 */
	var getOnlineCoupon = function getOnlineCoupon() {
		var depDate			= $('[name=departureDateR]').val(),
			tripType		= bookConditionJSON.tripType,
			retDate			= '',
			cabinClass		= '',
			area1,
			airport1,
			itinerary,
			full_itinerary;

		var depArea1	= $('#departureAreaR').val(),
			depAirport1	= $('#departureAirportR').val(),
			arrArea1	= $('#arrivalAreaR').val(),
			arrAirport1	= $('#arrivalAirportR').val(),
			depArea		= depArea1,
			depAirport	= depAirport1;

		area1 = depArea1 + '-' + arrArea1;
		airport1 = depAirport1 + '-' + arrAirport1;
		itinerary = airport1;
		full_itinerary = area1 + '-' + airport1;

		if(tripType == 'RT') {
			retDate	= $('[name=arrivalDateR]').val();
		}

		if(bookConditionJSON.domIntType == 'I') {
			var classEachType = '.revCabinClass li';
			if(bookConditionJSON.bizType == "RED") {
				classEachType = '.redCabinClass li';
			}
			$(classEachType).each(function() {
				var _this = $(this),
					_thisTab = _this.children('a');

				if(_this.hasClass('on')){
					if (bookConditionJSON.bizType == "REV") {
						if (_this.parent('ul').attr('name') == 'selectSeg1CabinClass') {
							cabinClass = _thisTab.attr('cabinClass');
						}
					} else {
						cabinClass = _thisTab.attr('cabinClass');
					}
				}
			});
		}

		var officeData = {};
		officeData.airport	= $('#departureAirportR').val();
		officeData.city		= $('#departureCityR').val();
		officeData.area		= $('#departureAreaR').val();


		$.ajax({
			async: true,
			url: '/I/'+countryCode+'/'+languageCode+'/OnlineCoupons.do',
			type: 'post',
			data: {
				acno			: userAcno,
				bizType			: 'REV',
				domintType		: bookConditionJSON.domIntType,
				tripType		: tripType,
				depArea			: depArea,
				depAirport		: depAirport,
				depDate			: depDate,
				retDate 		: retDate,
				area1			: area1,
				airport1		: airport1,
				itinerary		: itinerary,
				full_itinerary	: full_itinerary,
				adtCnt			: $('#adultCount').val(),
				chdCnt			: $('#childCount').val(),
				infCnt			: $('#infantCount').val(),
				cabinClass		: cabinClass,
				officeInfo		: JSON.stringify(officeData)
			},
			dataType: 'json',
			success: function(data) {

				var $couponLayer = $('#coupon_layer'),
					html = [],
					i = 0,
					cLength = data.onlineCoupons.length,
					disableCouponLength = 0;

				if(cLength != 0) {

					while(i<cLength) {
						var onlineCouponData = data.onlineCoupons[i],
							onlineCouponMemberData = onlineCouponData.onlineCouponMemberData,
							divCls = '',
							name = '',
							status = '',
							cls	= '',
							discountHtml = '',
							discountType,
							detailData;

						if(onlineCouponData.onlineCouponDetails.length > 0) {
							detailData = onlineCouponData.onlineCouponDetails[0];
						}else{
							detailData = {};
							detailData.couponName = 'undefined';
							detailData.useInfoHeader = 'undefined';
						}

						if(onlineCouponMemberData.downloadYN == 'N') {
							name = 'download';
							status = jsJSON.J0468; //다운로드
							cls = 'btn_down';
						}else{
							name = 'choose';
							status = jsJSON.J0469;// 선택
							cls = 'btn_XS white btn_check';
						}

						if(onlineCouponData.discountType == '1') {
							discountType = '%';
							discountHtml = '<span class="num">'+onlineCouponData.discount+'</span><span class="per">'+discountType+'</span>';
						}else{
							discountType = onlineCouponData.currency;
							discountHtml = '<p class="currency">'+discountType+'</p><div><span class="num font25">'+onlineCouponData.discount+'</span></div>';
						}

						html[i] =	'<div class="slide_cont" name="onlineCoupon">' +
										'<a href="#none" class="icon_coupon type_sale" name="icon_coupon">' +
											'<div class="list_coupon_wrap" targetCoupon="'+onlineCouponData.couponCode+'" onclick="javascript:getOnlineCouponDetail(this);">' +
												'<div class="left lato">' +
													'<div class="coupon_benefit">' + discountHtml +
													'</div>' +
													'<p class="txt_coupon">COUPON</p>' +
												'</div>' +
												'<div class="right">' +
													'<p>'+detailData.couponName+'</p>' +
													detailData.useInfoHeader+'<br>('+onlineCouponData.useDate+')' +
													'<span class="btn_coupon_more">'+jsJSON.J0470+'</span>' +
												'</div>' +
											'</div>';

						var cDisable = "";
						if(onlineCouponData.status == 'N') {
							disableCouponLength++;
							cDisable = "disabled";
							// J0471 : 적용불가
							html[i] +=		'<div class="dis" onclick="javascript:getOnlineCouponDetail(this);">' +
												'<span>'+jsJSON.J0471+'</span>' +
												'<span class="btn_coupon_more_dis">'+jsJSON.J0470+'</span>' +
											'</div>';
						}

						html[i] +=		'</a>' +
										'<div class="coupon_down">' +
											'<button type="button" class="'+cls+'" name="'+name+'" serviceType="'+onlineCouponData.serviceType+'" ' +
												'couponCode="'+onlineCouponData.couponCode+'" transfer="'+onlineCouponMemberData.transfer+'" eventName="'+detailData.couponName+'" ' +
												'corporateCode="'+onlineCouponData.corporateCode+'" '+cDisable+'>'+status+'</button>' +
										'</div>' +
									'</div>';

						i++;

					};

					$couponLayer.find('.ui_slider_area').html(html.join(''));
					openLayerPopup('coupon_layer', 'registTravel');
					$('#onlyREV').show();
					couponSlider();
					quickAreaOpen();

					if(cLength < 4) {
						$('.btn_next').addClass('swiper-button-disabled');
					}

					if(cLength == disableCouponLength) {
						$('#btnCouponApply').hide();
					}else {
						$('#btnCouponApply').show();
					}

				}else{
					// 특정노선
					if(noticeOpenLayer()){
						// 항공편 선택 페이지로 이동
						toFlightsSelect();
					}
				}
			},
			error: function(data) {
				alert(JSON.parse(data.responseText).exceptionInfo.message);
			},
			complete: function() {
				checkSSOSessionExtension();
			}
		});
	};

	 /*온라인 쿠폰 상세 조회 */
	var getOnlineCouponDetail = function getOnlineCouponDetail($this) {
		var $button = $($this).parent().next().find('button'),
			selectedServiceType	= $button.attr('serviceType'),
			selectedCouponCode = $button.attr('couponCode'),
			transferStatus = $button.attr('transfer');

		if(transferStatus == 'G') {
			$.ajax({
				async: false,
				url: '/I/'+countryCode+'/'+languageCode+'/updateCouponTransferStatus.do',
				type: "post",
				dataType: 'json',
				data : {
					serviceType : selectedServiceType,
					couponCode	: selectedCouponCode,
					transfer	: 'C'
				},
				success: function(data) {
					if(data.resultCnt > 0){
						$('a[name=icon_coupon]').each(function() {
							var $button = $(this).next().find('button');
							if($button.attr('couponCode') == selectedCouponCode) {
								$button.attr('transfer', 'C');
							}
						});
					}else{
						alert('updateCouponTransferStatus.do error!');
						return false;
					}
				},
				error :  function(data){
					alert('updateCouponTransferStatus.do error!');
					return false;
				},
				complete: function() {
					checkSSOSessionExtension();
				}
			});
		}

		$.ajax({
			async: true,
			url: '/I/'+countryCode+'/'+languageCode+'/OnlineCouponDetail.do',
			type: "post",
			data: {
				serviceType : selectedServiceType,
				couponCode	: selectedCouponCode
			},
			dataType: 'json',
			success: function(data) {

				var onlineCouponDetailData = data.onlineCouponDetailData,
					detailList = onlineCouponDetailData.onlineCouponDetails,
					memberData = onlineCouponDetailData.onlineCouponMemberData,
					dLength = detailList.length,
					i = 0,
					html = [];

				$('span[name=num]').hide();
				$('span[name=per]').hide();
				$('p[name=currency]').hide();
				$('span[name=font25]').hide();
				
				if(onlineCouponDetailData.discountType == '1') {
					$('span[name=num]').html(onlineCouponDetailData.discount);
					$('span[name=num]').show();
					$('span[name=per]').html('%');
					$('span[name=per]').show();
				}else{
					$('p[name=currency]').html(onlineCouponDetailData.currency);
					$('p[name=currency]').show();
					$('span[name=font25]').html(onlineCouponDetailData.discount);
					$('span[name=font25]').show();
				}

				while(i<dLength) {
					var detailData = detailList[i];

					if(i == 0) {
						$('p[name=coupon_name]').html(detailData.couponName);
						$('h4[name=couponHeader]').html(detailData.useInfoHeader);
					}

					if(detailData.useinfoItem != null && detailData.useinfoItem != '') {
						html[i] =	'<dl>' +
										'<dt>'+detailData.useinfoItem+'</dt>' +
										'<dd>'+detailData.useinfoBody+'</dd>' +
									'</dl>';
					}

					if(detailData.useInfoImageName != null && detailData.useInfoImageName != ""){
						var urlTxt = '/I/'+countryCode+'/'+languageCode+'/getOnlineCouponImage.do?serviceType='+onlineCouponDetailData.serviceType+'&couponCode='+onlineCouponDetailData.couponCode+'&langCode='+languageCode.toLowerCase()+'&viewType=W';
						$("div[name=couponDetailImage]").css('background-image',
								'url('+urlTxt+')');
						$("div[name=couponDetailImage]").closest('.coupon_cont').addClass('white');
					}else{
						$("div[name=couponDetailImage]").css('background-image', '');
						$("div[name=couponDetailImage]").closest('.coupon_cont').removeClass('white');
					}

					i++;

				};

				$('div[name=coupon_info]').html(html.join(''));
				if ($('div[name=itineraryR]').find('#couponDetail_layer').length > 0) {
					$("#container").append($('#couponDetail_layer').clone());
					$('div[name=itineraryR]').find('#couponDetail_layer').remove();
				}
				openLayerPopup('couponDetail_layer');
			},
			complete: function() {
				checkSSOSessionExtension();
			}
		});
	};

	/*비로그인 쿠폰 다운로드 시 로그인 레이어*/
	var viewLoginLayer = function viewLoginLayer() {
		viewBookingLogin('IBE');

		$('#btnCouponLogOffClose').trigger('click');

		callBackFunction = function(){
			if(userAcno != ''){
				$('#couponLogOff').find('.dim_close').trigger('click');
				$('#btnLoginLayerClose').trigger('click');

				//J0472 : #0님의 보유 마일리지는 <span class="col_red">#1M</span>입니다.
				//J0473 : 마일리지로 적용
				var desc = jsJSON.J0472;
				html = '<button type="button" class="btn_change redline" onclick="javascript:redProcess();">'+jsJSON.J0473+'</button>';

				if(userKoreanName != "/" && '${fn:toUpperCase(languageCode)}' == 'KO') {
					desc = desc.replace('#0', userKoreanName);
				}else {
					desc = desc.replace('#0', userTitle+'. '+userLastName+'/'+userFirstName);
				}
				desc = desc.replace('#1', userTotalRestMileage.setComma());
	
				$('div[name=mileage]').html(desc + html);
				$('#favoriteRoute').show();
				couponStatusCheck();
			}
		};
	};

	// 예약/발권 로그인 레이어
	var viewBookingLogin = function viewBookingLogin(callType) {
		$.ajax({
			url			: '/I/'+countryCode+'/'+languageCode+'/ViewBookingLoginLayer.do',
			async		: false,
			type 		: "post",
			data		: {
				callType : callType
			},
			beforeSend	: function() {
				loadingOpen('entire', 'booking');
			},
			success		: function(data) {
				if(data.indexOf('isAlreadyLogin') > -1){
					var isAlreadyLogin = JSON.parse(data).isAlreadyLogin;
					if(isAlreadyLogin) {
						var userData = JSON.parse(data).userData;
						userEnglishName = userData.englishName;
						userKoreanName = userData.koreanLastName+"/"+ userData.koreanFirstName;
						userTotalRestMileage = userData.totalRestMileage;
						userAcno = userData.acno;
						userMemberGrade = userData.memberGrade;

						alert(jsJSON.J0061); //이미 로그인 상태 입니다.

						callBackFunction(userData);
					}
				}else{
					if($(".bookingLoginLayerArea").length > 0){
						$(".bookingLoginLayerArea").remove();
					}
					$('.quick_reservation_wrap').after().append(data);
					$('#bookingLogin').insertAfter($('#container').children().last());
					openLayerPopup('bookingLogin', 'viewLoginLayer');
				}

			},
			error: function(data) {
				alert(JSON.parse(data.responseText).exceptionInfo.message);
			},
			complete: function() {
				loadingClose('entire');
			}
		});
	};

	/* 쿠폰 버튼 reset event */
	var _btnReset = function _btnReset() {
		$('.coupon_down > button').each(function() {
			if (bookConditionJSON.bizType == "REV") {
				if($(this).attr('name') != 'download') {
					$(this).text(jsJSON.J0469).removeClass('check').addClass('white');
				}
			} else {
				if($(this).attr('name') != 'changeCoupon') {
					$(this).text(jsJSON.J0469).removeClass('check').addClass('white');// jsJSON.J0469 : 선택
				}
			}
		});
	};

	// 로그인 후 쿠폰다운로드 전 사용가능한 쿠폰인지 체크
	var couponStatusCheck = function couponStatusCheck() {
		$.ajax({
			async: true,
			url: '/I/'+countryCode+'/'+languageCode+'/couponStatusCheck.do',
			type: 'post',
			dataType: 'json',
			data: {
				acno		: userAcno,
				serviceType	: serviceType,
				couponCode	: couponCode
			},
			success: function(data) {
				var onlineCouponMemberData = data.onlineCouponMemberData;
				if(onlineCouponMemberData != null) {
					if(onlineCouponMemberData.useYN == 'Y' || onlineCouponMemberData.transfer == 'T') {
						var disHtml	=	'<div class="dis" onclick="javascript:getOnlineCouponDetail(this);">' +
											'<span>'+jsJSON.J0471+'</span>' +
											'<span class="btn_coupon_more_dis">'+jsJSON.J0470+'</span>' +
										'</div>';

						$('div[targetCoupon='+couponCode+']').after(disHtml);
						targetCouponBtn.prop('disabled', true);
						alert(jsJSON.J0484); //이미 다운로드 후 사용 또는 선물한 쿠폰입니다.
					}else {
						couponDownload(targetCouponBtn, serviceType, couponCode);
					}
				}else {
					couponDownload(targetCouponBtn, serviceType, couponCode);
				}
			},
			error: function(data) {
				alert(JSON.parse(data.responseText).exceptionInfo.message);
			},
			complete: function() {
				checkSSOSessionExtension();
			}
		});
	};

	/* 쿠폰 다운로드 data set */
	var couponDataSet = function couponDataSet() {
		_btnReset();
		targetCouponBtn.attr('name', 'choose');
		targetCouponBtn.text(jsJSON.J0401).removeClass('btn_down white').addClass('btn_XS btn_check check'); // 선택됨
		$('#btnCouponApply').prop('disabled', false);

		$('#serviceType').val(targetCouponBtn.attr('serviceType'));
	    $('#couponCode').val(targetCouponBtn.attr('couponCode'));
	    $('#eventName').val(targetCouponBtn.attr('eventName'));
	    $('#corporateCode').val(targetCouponBtn.attr('corporateCode'));
	};

	/* 쿠폰 다운로드 */
	var couponDownload = function couponDownload(targetCouponBtn, serviceType, couponCode) {

		$.ajax( {
			async: true,
			url: '/I/'+countryCode+'/'+languageCode+'/updateCouponDownloadStatus.do',
			type: 'post',
			dataType: 'json',
			data: {
				acno		: userAcno,
				serviceType	: serviceType,
				couponCode	: couponCode
			},
			success : function(data) {
				if(typeof data.resultCnt != 'undefined') {

					if(data.downloadCnt > 0) {
						openLayerPopup('couponDup');
						couponDataSet();
					}else{
						if(data.downloadPeriodCnt < 1) {
							alert(jsJSON.J0097);/* J0097, 이벤트 기간이 종료 되었습니다. */
						}else{
							if(data.resultCnt > 0) {
								openLayerPopup('couponSuccess');
								couponDataSet();
							}else{
								alert('updateCouponDownloadStatus.do error!');
							}
						}
					}
				}
			},
			error: function(data) {
				alert(JSON.parse(data.responseText).exceptionInfo.message);
			},
			complete: function() {
				checkSSOSessionExtension();
			}
		});
	};

	/* 다운로드 된 쿠폰 & 보유중인 쿠폰에 대한 확인 */
	var applyCoupon = function applyCoupon(object) {
		$(object).closest('.layer_wrap').find('.dim_close').trigger('click');
	};

	/* 보너스 쿠폰 조회 */
	var getBonusCoupon = function getBonusCoupon() {

		$.ajax({
			async: true,
			url: '/I/'+countryCode+'/'+languageCode+'/BonusCouponList.do',
			type: "post",
			data: {
				acno			: userAcno,
				couponType		: "M"
			},
			dataType: 'json',
			success: function(data) {

				var html = "",
					changeCouponHtml = "",
					i = 0,
					cLength = 0,
					couponName = "";

				if(typeof data.bonusCoupons != "undefined"){
					cLength = data.bonusCoupons.length;
				}

				if(cLength != 0) {
					var canUseCoupontCnt = 0;
					while(i<cLength) {
						var bonusCouponData = data.bonusCoupons[i];

						var startDate = bonusCouponData.couponStartDate.substring(2, 4)+"."+bonusCouponData.couponStartDate.substring(4, 6)+"."+bonusCouponData.couponStartDate.substring(6, 8),
							expireDate =  bonusCouponData.couponExpireDate.substring(2, 4)+"."+bonusCouponData.couponExpireDate.substring(4, 6)+"."+bonusCouponData.couponExpireDate.substring(6, 8);
							couponName = bonusCouponData.couponName,
							useDate =  Number(currentDate.replace(/-/gi, ''));

						if(Number(bonusCouponData.couponStartDate) <=useDate && Number(bonusCouponData.couponExpireDate) >= useDate && bonusCouponData.couponApplyIND == "N"){
							if(bonusCouponData.couponType == "C"){
								changeCouponHtml +=
								'<div class="slide_cont slide_active" style="width: 257px; margin-right: 10px;">'
								+'	<a href="#none" class="icon_coupon type_sale">'
								+'		<div class="list_coupon_wrap" onclick="javascript:bonusCouponDetail(\''+bonusCouponData.couponType+'\',\''+bonusCouponData.couponNumber+'\',\''+bonusCouponData.couponStartDate+'\',\''+bonusCouponData.couponExpireDate+'\');">'
								+'			<div class="left lato"><div class="coupon_benefit"><span class="num">M</span></div><p class="txt_coupon">COUPON</p></div>'
								+'			<div class="right"><p class="coupon_name">'+couponName+'</p>('+startDate+' - '+expireDate+')<span class="btn_coupon_more">'+jsJSON.J0470+'</span></div>'/* J0470 : 더보기 */
								+'		</div>';
								var cDisable = "";
								if ((parseInt($('#adultCount').val()) + parseInt($('#childCount').val()) + parseInt($('#infantCount').val()) > 1 || parseInt($('#adultCount').val()) != 1 )
										&& (($('#loginUserAge').val() > 12 && bookConditionJSON.domIntType == "D") || ($('#loginUserAge').val() > 11 && bookConditionJSON.domIntType == "I"))) {
									cDisable = "disabled";
									// J0471 : 적용불가, J0470 : 더보기
									changeCouponHtml +=			'<div class="dis" onclick="javascript:bonusCouponDetail(\''+bonusCouponData.couponType+'\',\''+bonusCouponData.couponNumber+'\',\''+bonusCouponData.couponStartDate+'\',\''+bonusCouponData.couponExpireDate+'\');">' +
																	'<span>'+jsJSON.J0471+'</span>' +
																	'<span class="btn_coupon_more_dis">'+jsJSON.J0470+'</span>' +
																'</div>';
								}
								changeCouponHtml +=
								'	</a>'
								+'	<div class="coupon_down"><button type="button" class="btn_change_brown" name="changeCoupon">'+jsJSON.J0098+'</button></div>'/* J0098 : 변환 */
								+'</div>';
							}else if(bonusCouponData.couponType == "D" || bonusCouponData.couponType == "E"){
								html +=
								'<div class="slide_cont slide_active" style="width: 257px; margin-right: 10px;">'
								+'	<a href="#none" class="icon_coupon type_sale">'
								+'		<div class="list_coupon_wrap" onclick="javascript:bonusCouponDetail(\''+bonusCouponData.couponType+'\',\''+bonusCouponData.couponNumber+'\',\''+bonusCouponData.couponStartDate+'\',\''+bonusCouponData.couponExpireDate+'\');">'
								+'			<div class="left lato"><div class="coupon_benefit"><span class="num">M</span></div><p class="txt_coupon">COUPON</p></div>'
								+'			<div class="right"><p class="coupon_name">'+couponName+'</p>('+startDate+' - '+expireDate+')<span class="btn_coupon_more">'+jsJSON.J0470+'</span></div>'/* J0470 : 더보기 */
								+'		</div>';
								var cDisable = "";
								if ((parseInt($('#adultCount').val()) + parseInt($('#childCount').val()) + parseInt($('#infantCount').val()) > 1 || parseInt($('#adultCount').val()) != 1 )
										&& (($('#loginUserAge').val() > 12 && bookConditionJSON.domIntType == "D") || ($('#loginUserAge').val() > 11 && bookConditionJSON.domIntType == "I"))) {
									cDisable = "disabled";
									// J0471 : 적용불가, J0470 : 더보기
									html +=			'<div class="dis" onclick="javascript:bonusCouponDetail(\''+bonusCouponData.couponType+'\',\''+bonusCouponData.couponNumber+'\',\''+bonusCouponData.couponStartDate+'\',\''+bonusCouponData.couponExpireDate+'\');">' +
														'<span>'+jsJSON.J0471+'</span>' +
														'<span class="btn_coupon_more_dis">'+jsJSON.J0470+'</span>' +
													'</div>';
								}
								html +=
								'	</a>'
								+'	<div class="coupon_down">'
								+'		<button type="button" class="btn_XS white btn_check" serviceType="'+bonusCouponData.couponType+'" eventName="'+couponName+'" couponCode="'+bonusCouponData.couponNumber+'" discount="'+bonusCouponData.couponMile+'"'+cDisable+' >'+jsJSON.J0469+'</button>'/* J0469 : 선택 */
								+'	</div>'
								+'</div>';
							}
							if(bonusCouponData.couponType == "C" || bonusCouponData.couponType == "D" || bonusCouponData.couponType == "E"){
								canUseCoupontCnt++;
							}
						}
						i++;
					};

					if(canUseCoupontCnt > 0){
						html = html+changeCouponHtml;

						document.getElementById('couponList').innerHTML = html
						$('#coupon_layer').show();
						$('#onlyREV').hide();
						couponSlider();
						quickAreaOpen();
					}else{
						if(!noticeOpenLayer()){
							return;
						}
						openLayerPopup('mileageInfo', 'registTravel');
					}
				}else{
					if(!noticeOpenLayer()){
						return;
					}

					openLayerPopup('mileageInfo', 'registTravel');
				}
			},
			error: function(data) {
				alert(JSON.parse(data.responseText).exceptionInfo.message);
			}
		});

	}

	/*쿠폰 상세*/
	var bonusCouponDetail = function bonusCouponDetail(couponType, couponNumber, couponStartDate, couponExpireDate) {
		$.ajax({
			async: true,
			url: '/I/'+countryCode+'/'+languageCode+'/BonusCouponDetail.do',
			type: "post",
			data: {
				couponType		: couponType,
				couponNumber	: couponNumber,
				couponStartDate	: couponStartDate,
				couponExpireDate: couponExpireDate
			},
			dataType: 'html',
			success: function(html) {
				$("#couponDetail").remove();
				$('#container').append(html);
				openLayerPopup('couponDetail');
			}
		});
	};

	//입력받은 문자열을 날짜 형식으로 만들어준다.
	var stringToDate = function stringToDate(basicDate) {
		var newDate = null;
		
		if (basicDate != undefined) {
			basicDate = basicDate.replace(/[^0-9]/gi, ""); // 숫자가 아닌것은 empty로 치환.
			if (basicDate.length == 8) {
				var year	= basicDate.substring(0, 4);
				var Month	= basicDate.substring(4, 6);
				var day		= basicDate.substring(6, 8);
					newDate	= new Date(Number(year), Number(Month) - 1, Number(day));
			} else if (basicDate.length == 10) {
				var year	= basicDate.substring(0, 4);
				var Month	= basicDate.substring(4, 6);
				var day		= basicDate.substring(6, 8);
				var hour	= basicDate.substring(8, 10);
					newDate	= new Date(Number(year), Number(Month) - 1, Number(day), Number(hour));
			} else if (basicDate.length == 12) {
				var year	= basicDate.substring(0, 4);
				var Month	= basicDate.substring(4, 6);
				var day		= basicDate.substring(6, 8);
				var hour	= basicDate.substring(8, 10);
				var second	= basicDate.substring(10, 12);
					newDate	= new Date(Number(year), Number(Month) - 1, Number(day), Number(hour), Number(second));
			} else if (basicDate.length == 14) {
				var year	= basicDate.substring(0, 4);
				var Month	= basicDate.substring(4, 6);
				var day	 	= basicDate.substring(6, 8);
				var hour	= basicDate.substring(8, 10);
				var second	= basicDate.substring(10, 12);
				var msecond	= basicDate.substring(12, 14);
					newDate	= new Date(Number(year), Number(Month) - 1, Number(day), Number(hour), Number(second), Number(msecond));
			}
		}
		
		return newDate;
	};
	
	//생년월일에서 (만)나이를 구한다.
	var getAgeToday = function getAgeToday(d1, d2) {
	    var day1 = stringToDate(d1);
	    var day2 = stringToDate(d2);

	    day2 = day2 || new Date();
	    var diff = day2.getTime() - day1.getTime();
	    var iAge = Math.floor(diff / (1000 * 60 * 60 * 24 * 365.25));

	    return iAge;
	};
	
	//생년월일에서 (만)나이를 구한다.
	var getAge = function getAge(birth_yyyymmdd, departure_yyyymmdd) {

	    var birth = birth_yyyymmdd.replace(/-/g,"");    // 생년월일
	    var departure = departure_yyyymmdd.replace(/-/g,"");  // 탑승일

	    var departureYear = departure.substring(0, 4);
	    var departureMonth = parseInt(departure.substring(4, 6), 10);
	    var departureDay = parseInt(departure.substring(6, 8), 10);

	    var birthYear = birth.substring(0, 4);
	    var birthMonth = parseInt(birth.substring(4, 6), 10);
	    var birthDay = parseInt(birth.substring(6, 8), 10);

	    var iAge = 0;

	    if (departureMonth >= birthMonth) {
	        if (departureMonth > birthMonth) {
	            // 생일이 지난경우
	            iAge = parseInt(departureYear) - parseInt(birthYear);
	        }
	        if (departureMonth == birthMonth) {
	            if (departureDay < birthDay) {   // 생일 전날까지만 소아,유아 적용
	                // 생일이 아직 안 지난경우
	                iAge = parseInt(departureYear) - parseInt(birthYear) - 1;
	            } else {
	                // 생일이 지난경우
	                iAge = parseInt(departureYear) - parseInt(birthYear);
	            }
	        }

	    } else {
	        iAge = parseInt(departureYear) - parseInt(birthYear) - 1;
	    }

	    return iAge;
	};

	var couponSlider = function couponSlider() {
		var mySwiper = new Swiper('.coupon_slider', {
	        slidesPerView: 3,
	        slidesPerGroup: 3,
	        speed: 400,
	        spaceBetween: 10,
	        simulateTouch:false,
	        prevButton: '.btn_coupon_prev',
	        nextButton: '.btn_coupon_next',
	        containerModifierClass:'ui_slider',
	        wrapperClass:'ui_slider_area',
	        slideClass:'slide_cont',
	        slideActiveClass:'slide_active',
	        slideNextClass:'slide_next',
	        slidePrevClass:'slide_prev'
	    });
	};

	var userDataObject = function userDataObject() {
		acno	= "";
		familyNumber = "";
	};
	var segmentConditionDatasObject = function segmentConditionDatasObject() {
		departureArea			= "";
		departureAirport		= "";
		departureAirportName	= "";
		departureCity			= "";
		departureCityName		= "";
		departureDateTime		= "";
		arrivalArea				= "";
		arrivalAirport			= "";
		arrivalAirportName		= "";
		arrivalCity				= "";
		arrivalCityName			= "";
		arrivalDateTime			= "";
		cabinClassList			= "";
		exchangeSegment			= false;
	};
	var onlineCouponDataObject = function onlineCouponDataObject() {
		serviceType		= "";
		couponCode		= "";
		couponDesc		= "";
		corporateCode	= "";
		discount		= "";
	};
	var passengerConditionDatasObject = function passengerConditionDatasObject() {
		passengerType		= "";
		passengerTypeDesc	= "";
	};
	var bookConditionDataObject = function bookConditionDataObject() {
		officeId				= "";
		bizType					= "";
		tripType				= "";
		domIntType				= "";
		starAlliance			= false;
		userData				= null;
		segmentConditionDatas	= null;
		onlineCouponData		= null;
		passengerConditionDatas	= null;
		pointOfSale				= "";
		searchCurrency			= "";
		atc						= false;
		childOnly				= false;
		pageTicket				= "";
		jsessionId				= "";
		eventCFF				="";
		mobileFlag				= false;
		onlyUpgradeSearch		= false;
	};

	(function($){

		/* 자동완성을 문자열의 시작부터 하려는 경우 해제
		// Overrides the default autocomplete filter function to
		// search only from the beginning of the string
		$.ui.autocomplete.filter = function (array, term) {
		  var matcher = new RegExp("^" + $.ui.autocomplete.escapeRegex(term), "i");
		  return $.grep(array, function (value) {
		    return matcher.test(value.label || value.value || value);
		  });
		};
		*/

	})(jQuery);

	(function($){
		var inquiryDeparture = $('#inquiryDeparture .ipt_elt').find('input:text');
		var depIq = inquiryDeparture;
		var toggleSpd = 400;
		var isDepSearchOpen = false;

			depIq.on('focus', function(){
				if(!isDepSearchOpen){
					isDepSearchOpen = true;
					$('.section04 .section_copy').velocity('slideUp',toggleSpd, function(){
						$('#foldSection4').show();
					});
					$('#inquiryDeparture').css('margin-top','50px');
				}
			});

			/* 접기 */
			$('#foldSection4').on('click', function(){
				isDepSearchOpen = false;
				layerAllClose();
				$('.section04 .section_copy').velocity('slideDown',toggleSpd);
				$('#foldSection4').hide();
				$('#inquiryDeparture').css('margin-top','0');
			});
	})(jQuery);

	// 리스트 화면 진입 trigger 함수
	var drawPnrList = function drawPnrList() {
		if (existPNRList || userAcno == null || userAcno == "") {
			return;
		}
		existPNRList = true;
		if ($('.inquiry_wrapper login').length < 1) {
			$.ajax({
				url : '/I/'+countryCode+'/'+languageCode+'/MainPNRList.do',
				type : 'POST',
				dataType : 'HTML',
				async : true,
				beforeSend : function() {
					loadingOpen('area', '.section02 .slide_inner');
				},
				success : function(data){
					if(data.indexOf('inquiry_wrapper login') > -1) {
						var $response=$(data);
						if ($('#pnrListDiv').length > 0) {
							$('#pnrListDiv').remove();
						}
						$('#defaultPNRSearch').before($response.filter('#inquiryReserved').html());

						$('#inquiryReserved').removeClass('logout').removeClass('nolist').addClass('login');

						if (data.indexOf('btnReservationDetail') > -1) {
							//$('#schedule_summaryS').html($response.filter('#schedule_summaryS').html());
							//$('#section_copyS').hide();
							//var arrAirport = $('[name="btnReservationDetail"]').eq(0).attr('arrAirport');
							//arrAirportRes(arrAirport);
						} else {
							$('#schedule_summaryS').hide();
							$('#section_copyS').html($response.filter('#section_copyS').html());
							$('#inquiryReserved').addClass('nolist');
						}
						inquiryReservedEvent();

					} else {
						var $response=$(data);

						$('#pnrListDiv').remove();
						$('#schedule_summaryS').hide();
						$('#section_copyS').html($response.filter('#section_copyS').html());
						$('#inquiryReserved').removeClass('login').addClass('logout');
					}
				},
				complete : function() {
					loadingClose('area', '.section02 .slide_inner');
				},
				error: function(data){
					loadingClose('area', '.section02 .slide_inner');
				}

			});
		}
		function inquiryReservedEvent(){
			var inquiryReserved = $('#inquiryReserved .ipt_elt').find('input:text');
			var revIq = inquiryReserved;
			var toggleSpd = 400;
			var isRevSearchOpen = false;

			//로그인시에만 이벤트
			if(!$('#inquiryReserved').hasClass('logout')){
				if(!$('#inquiryReserved').hasClass('nolist')){
					revIq.on('focus', function(){
						if(!isRevSearchOpen){
							isRevSearchOpen = true;
							$('.section02').find('.reserve_list_wrap, .schedule_summary').velocity('slideUp',toggleSpd);
							$('#foldSection2').show();
							$('.section02 .section_copy').velocity('slideDown',toggleSpd);
						}
					});

					//접기
					$('#foldSection2').on('click', function(){
						isRevSearchOpen = false;
						layerAllClose();
						$('.section02').find('.reserve_list_wrap, .schedule_summary').velocity('slideDown',toggleSpd);
						$('#foldSection2').hide();
						$('.section02 .section_copy').velocity('slideUp',toggleSpd);
					});

					//전체도시 아이콘 선택시 영역 Fold
					$('.airport_open').each(function(){
						$(this).on('click', function(){
							if(!isRevSearchOpen){
								if ($(this).parent('.ipt_elt').siblings('.select_airport').length == 1){
									isRevSearchOpen = true;
									$('.section02').find('.reserve_list_wrap, .schedule_summary').velocity('slideUp',toggleSpd);
									$('#foldSection2').show();
									$('.section02 .section_copy').velocity('slideDown',toggleSpd);
								}
							}
							callTag = $(this);
						});
					});
				}
			}

			//로그인시 예약리스트가 0건일 경우 reserve_list_wrap만 슬라이드 토글
			if($('#inquiryReserved').hasClass('nolist')){
				revIq.on('focus', function(){
					if(!isRevSearchOpen){
						isRevSearchOpen = true;
						$('.section02').find('.reserve_list_wrap').velocity('slideUp',toggleSpd);
						$('#foldSection2').show();
					}
				});
				$('#foldSection2').on('click', function(){
					isRevSearchOpen = false;
					layerAllClose();
					$('.section02').find('.reserve_list_wrap').velocity('slideDown',toggleSpd);
					$('#foldSection2').hide();
				});

				$('.airport_open').each(function(){
					$(this).on('click', function(){
						if(!isRevSearchOpen){
							if ($(this).parent('.ipt_elt').siblings('.select_airport').length == 1){
								isRevSearchOpen = true;
								$('.section02').find('.reserve_list_wrap').velocity('slideUp',toggleSpd);
								$('#foldSection2').show();
							}
						}
						callTag = $(this);
					});
				});
			}
		}
	};

	var drawCheckInList = function drawCheckInList() {
		$('.section03 .inquiry_wrapper .ipt_elt > select').on('change', function(){
			if($(this).val()=='resNo'){
				$('#checkinNum').attr({
					'placeholder':jsJSON.J0476,
					'title':jsJSON.J0480,
					'maxlength':8,
					'onkeyup':"this.value=this.value.replace(/[^a-zA-z0-9]/g,'')"
				});
				// J0476 : '8자리 숫자 또는 6자리 영문/숫자'
				// J0480 : '예약번호 8자리 숫자 또는 6자리 영문/숫자'
			}else{
				$('#checkinNum').attr({
					'placeholder':jsJSON.J0481,
					'title':jsJSON.J0482,
					'maxlength':13,
					'onkeyup':"this.value=this.value.replace(/[^0-9]/g,'')"
				});
				// J0481 : '13자리 숫자'
				// J0482 : '항공권번호 13자리 숫자'
			}
		});
		
		if (existCheckinList || userAcno == null || userAcno == "") {
			return;
		}
		existCheckinList = true;
		if ($('.inquiry_wrapper no_onlinecheck').length < 1) {
			$.ajax({
				url : '/I/'+countryCode+'/'+languageCode+'/MainCheckIn.do',
				type : 'POST',
				dataType : 'HTML',
				async : true,
				beforeSend : function() {
					loadingOpen('area', '.section03 .slide_inner');
				},
				success : function(data){

					if(data.indexOf('inquiry_wrapper login') > -1) {
						var $response=$(data);
						if ($('#checkInListDiv').length > 0) {
							$('#checkInListDiv').remove();
						}
						$('#defaultCheckInSearch').before($response.filter('#inquiryCheckin').html());

						$('#inquiryCheckin').removeClass('no_onlinecheck').removeClass('noevent').addClass('login');

						if (data.indexOf('btn_checkIn') > -1) {
							$('#schedule_summaryC').html($response.filter('#schedule_summaryC').html());
							$('#section_copyC').hide();
							var arrAirport = $('#btn_checkIn').attr('arrivalcity');
							arrAirportChk(arrAirport);
						} else {
							$('#schedule_summaryC').hide();
							if ($('[name=goToCheckIn]').length < 1){
								$('#inquiryCheckin').addClass('noevent');
							} else {
								$('#inquiryCheckin').addClass('no_onlinecheck');
							}
							$('#section_copyC').html($response.filter('#section_copyC').html());
						}
						inquiryCheckinEvent();

					} else {
						var $response=$(data);

						$('#checkInListDiv').remove();
						$('#schedule_summaryC').hide();
						$('#section_copyC').html($response.filter('#section_copyC').html());
						$('#inquiryCheckin').removeClass('login').addClass('no_onlinecheck').addClass('noevent');
					}
				},
				complete : function() {
					loadingClose('area', '.section03 .slide_inner');
				},
				error: function(data){
					loadingClose('area', '.section03 .slide_inner');
				}

			});
		}

		function inquiryCheckinEvent(){
			var inquiryCheckin = $('#inquiryCheckin .ipt_elt').find('input:text');
			var revIq = inquiryCheckin;
			var toggleSpd = 400;
			var isRevSearchOpen = false;

			//온라인체크인가능 목록 있을경우에만 이벤트
			if(!$('#inquiryCheckin').hasClass('no_onlinecheck')){
				if(!$('#inquiryCheckin').hasClass('noevent')){
					revIq.on('focus', function(){
						if(!isRevSearchOpen){
							isRevSearchOpen = true;
							$('.section03').find('.reserve_list_wrap, .schedule_summary').velocity('slideUp',toggleSpd);
							$('#foldSection3').show();
							$('.section03 .section_copy').velocity('slideDown',toggleSpd);
						}
					});

					//접기
					$('#foldSection3').on('click', function(){
						isRevSearchOpen = false;
						layerAllClose();
						$('.section03').find('.reserve_list_wrap, .schedule_summary').velocity('slideDown',toggleSpd);
						$('#foldSection3').hide();
						$('.section03 .section_copy').velocity('slideUp',toggleSpd);
					});
				}
			} else {

				//체크인 가능여정x, 좌석배정 가능여정x 일때는 이벤트 실행하지 않음
				if(!$('#inquiryCheckin').hasClass('noevent')){
					revIq.on('focus', function(){
						if(!isRevSearchOpen){
							isRevSearchOpen = true;
							$('.section03').find('.reserve_list_wrap').velocity('slideUp',toggleSpd);
							$('#foldSection3').show();
						}
					});

					//접기
					$('#foldSection3').on('click', function(){
						isRevSearchOpen = false;
						layerAllClose();
						$('.section03').find('.reserve_list_wrap').velocity('slideDown',toggleSpd);
						$('#foldSection3').hide();
					});
				}
			}
		}
	};

	/* 미국여행 레이어 */
	var afterExpCase = function showMileageRule(_thisBtn) {
		if (bookConditionJSON.bizType == "RED") {
			$(".layer_wrap").hide();
			$('body').css('overflow-y','auto');
			openLayerPopup('mileageInfo', 'registTravel');
		} else {
			_thisBtn.prev().trigger('click');
			toFlightsSelect();
		}
	};

	/*
	 * RSA 암호화
	 *
	 * 00. publicKeyModulus		: publicKeyModulus
	 * 01. publicKeyExponent	: publicKeyExponent
	 * 02. orgStr				: 암호화할 문자
	 *
	 * */
	var encryptRSA = function encryptRSA(publicKeyModulus, publicKeyExponent, orgStr) {
		var rsa = new RSAKey();
		rsa.setPublic(publicKeyModulus, publicKeyExponent);
		var encTxt = rsa.encrypt(orgStr);
		return encTxt;
	};

	var removeChar = function removeChar(event, type) {
		event = event || window.event;
		var keyID = (event.which) ? event.which : event.keyCode;
		if ( keyID == 8 || keyID == 46 || keyID == 37 || keyID == 39 ) {
			return;
		} else {
			event.target.value = event.target.value.replace(/[^0-9]/g, "");
			var paxType = type;
			if (type == 'ADT'){
				$('.psg_nums').find('.num').eq(0).text($('.psg_nums').find('.num').eq(0).text().replace(/[^0-9]/g, ""));
			} else if (type == 'CHD') {
				$('.psg_nums').find('.num').eq(1).text($('.psg_nums').find('.num').eq(0).text().replace(/[^0-9]/g, ""));
			} else {
				$('.psg_nums').find('.num').eq(2).text($('.psg_nums').find('.num').eq(0).text().replace(/[^0-9]/g, ""));
			}
		}
	};
	
	//String에 comma 삽입
	String.prototype.setComma = function () {
		var objValue = this;
		var splitString = objValue.split('.'); // 소수점(.)에서 분할하여 배열변수에 저장한다.

		var str = new Array();
		var v = splitString[0];

		for (var i = 1; i <= v.length; i++) { //문자열만큼 루프를 돈다.
			str[str.length] = v.charAt(v.length - i); //스트링에 거꾸로 담음
			if (i % 3 == 0 && i != 0 && i != v.length && !(i == v.length - 1 && v.charAt(0) == '-')) { //첫부분이나, 끝부분에는 콤마가 안들어감
				str[str.length] = '.'; //배열을 핸들링할때 쉼표가 들어가면 헷갈리므로 세자리마다 점을 찍음
			}
		}

		str = str.reverse().join('').replace(/\./gi, ','); //배열을 거꾸로된 스트링으로 바꾼후에, 점을 콤마로 치환
		if (splitString.length == 2) {
			str = str + '.' + splitString[1];
		}

		var currencyCipherLastIdx = 0,
			decimalPointLength = 0;

		if(typeof currencyCipher != 'undefined') {
			if(currencyCipher.indexOf('.') > -1) {
				currencyCipherLastIdx = currencyCipher.split('.')[1].length;
			}
		}

		if(str.indexOf('.') > -1) {
			decimalPointLength = str.split('.')[1].length;
		}

		if(decimalPointLength > currencyCipherLastIdx) {
			var cutIdx = decimalPointLength - currencyCipherLastIdx;
			str = str.substring(0, str.length-cutIdx);
			if((str.length-1) == str.indexOf('.')) {
				str = str.substring(0, str.length-1);
			}
		}

		return str;
	};

	// 쿠폰 인쇄
	function BonusCouponPrint(selectObj){
		window.open("/I/"+countryCode+"/"+languageCode+"/BonusCouponPrint.do", "Bonus Coupon Print", "width=800, height=600, top=100, left=100, scrollbars=yes");
	}

	// GMT 적용하여 비행시간 구하기.
	function getGmtGapDate(gmtData , depAirport, depTime, serverTime){
		if(gmtData === undefined || serverTime === undefined){
			return '';
		}

		if(!gmtData.hasOwnProperty(depAirport)){
			return '';
		}

		var depAirportGmt = parseInt(gmtData[depAirport].substring(0,3)) + 11,
			gapGmtTm      = depAirportGmt - (9 + 11),
			gmtDepDate = new Date(depTime.substring(0,4) , (depTime.substring(4,6) - 1), depTime.substring(6,8),
									depTime.substring(8,10), depTime.substring(10,12)),
			serverDate = new Date(serverTime.substring(0,4) , (serverTime.substring(4,6) - 1), serverTime.substring(6,8),
									serverTime.substring(8,10), serverTime.substring(10,12));

		gmtDepDate.setHours(gmtDepDate.getHours() + gapGmtTm);

		// 지난 여정은 패스
		if(serverDate.getTime() > gmtDepDate.getTime()){
			return -1;
		}

		var timeGap  = (serverDate.getTime() - gmtDepDate.getTime()) / 60000,
		hourGap = Math.ceil(Math.abs(timeGap) / 60);
		return hourGap;
	}

	// 비로그인 예약 조회 팝업창
	function viewReservationListLogin(callType) {
		if($('.bookingLoginLayerArea').length > 0){
			openLayerPopup('bookingLogin', 'goPNRList', "-130");
			$("#divForm").get(0).reset();
			$("#labelDepartureAirportN").html($("#txtDepartureAirportN").attr("title"));
			$("#labelArrivalAirportN").html($("#txtArrivalAirportN").attr("title"));
			$('.bookingLoginLayerArea .cal_reset').trigger("click");
			return;
		}
		$.ajax({
			url			: '/I/'+countryCode+'/'+languageCode+'/ViewReservationListLoginLayer.do',
			async		: false,
			type 		: 'post',
			dataType	: 'html',
			data		: {
				callType : callType
			},
			success		: function(data) {
				$('#defaultPNRSearch').append(data);
				openLayerPopup('bookingLogin', 'goPNRList', "-130");
			},
			error: function(data) {
				alert(JSON.parse(data.responseText).exceptionInfo.message);
			}
		});
	};